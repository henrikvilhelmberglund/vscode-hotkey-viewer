// Override key bindings by placing them into your key bindings file.
[
	{ "key": "escape escape", "command": "workbench.action.exitZenMode", "when": "inZenMode" },
	{
		"key": "shift+escape",
		"command": "closeReferenceSearch",
		"when": "inReferenceSearchEditor && !config.editor.stablePeek"
	},
	{
		"key": "escape",
		"command": "closeReferenceSearch",
		"when": "inReferenceSearchEditor && !config.editor.stablePeek"
	},
	{
		"key": "escape",
		"command": "editor.closeTestPeek",
		"when": "testing.isInPeek && !config.editor.stablePeek || testing.isPeekVisible && !config.editor.stablePeek"
	},
	{
		"key": "shift+escape",
		"command": "cancelSelection",
		"when": "editorHasSelection && textInputFocus"
	},
	{ "key": "escape", "command": "cancelSelection", "when": "editorHasSelection && textInputFocus" },
	{ "key": "ctrl+end", "command": "cursorBottom", "when": "textInputFocus" },
	{ "key": "ctrl+shift+end", "command": "cursorBottomSelect", "when": "textInputFocus" },
	{ "key": "ctrl+shift+alt+down", "command": "cursorColumnSelectDown", "when": "textInputFocus" },
	{ "key": "ctrl+shift+alt+left", "command": "cursorColumnSelectLeft", "when": "textInputFocus" },
	{
		"key": "ctrl+shift+alt+pagedown",
		"command": "cursorColumnSelectPageDown",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+alt+pageup",
		"command": "cursorColumnSelectPageUp",
		"when": "textInputFocus"
	},
	{ "key": "ctrl+shift+alt+right", "command": "cursorColumnSelectRight", "when": "textInputFocus" },
	{ "key": "ctrl+shift+alt+up", "command": "cursorColumnSelectUp", "when": "textInputFocus" },
	{ "key": "down", "command": "cursorDown", "when": "textInputFocus" },
	{ "key": "ctrl+shift+down", "command": "cursorDownSelect", "when": "textInputFocus" },
	{ "key": "shift+down", "command": "cursorDownSelect", "when": "textInputFocus" },
	{ "key": "end", "command": "cursorEnd", "when": "textInputFocus", "args": { "sticky": false } },
	{
		"key": "shift+end",
		"command": "cursorEndSelect",
		"when": "textInputFocus",
		"args": { "sticky": false }
	},
	{ "key": "home", "command": "cursorHome", "when": "textInputFocus" },
	{ "key": "shift+home", "command": "cursorHomeSelect", "when": "textInputFocus" },
	{ "key": "left", "command": "cursorLeft", "when": "textInputFocus" },
	{ "key": "shift+left", "command": "cursorLeftSelect", "when": "textInputFocus" },
	{ "key": "pagedown", "command": "cursorPageDown", "when": "textInputFocus" },
	{ "key": "shift+pagedown", "command": "cursorPageDownSelect", "when": "textInputFocus" },
	{ "key": "pageup", "command": "cursorPageUp", "when": "textInputFocus" },
	{ "key": "shift+pageup", "command": "cursorPageUpSelect", "when": "textInputFocus" },
	{ "key": "right", "command": "cursorRight", "when": "textInputFocus" },
	{ "key": "shift+right", "command": "cursorRightSelect", "when": "textInputFocus" },
	{ "key": "ctrl+home", "command": "cursorTop", "when": "textInputFocus" },
	{ "key": "ctrl+shift+home", "command": "cursorTopSelect", "when": "textInputFocus" },
	{ "key": "up", "command": "cursorUp", "when": "textInputFocus" },
	{ "key": "ctrl+shift+up", "command": "cursorUpSelect", "when": "textInputFocus" },
	{ "key": "shift+up", "command": "cursorUpSelect", "when": "textInputFocus" },
	{ "key": "shift+backspace", "command": "deleteLeft", "when": "textInputFocus" },
	{ "key": "backspace", "command": "deleteLeft", "when": "textInputFocus" },
	{ "key": "delete", "command": "deleteRight", "when": "textInputFocus" },
	{ "key": "ctrl+a", "command": "editor.action.selectAll" },
	{ "key": "ctrl+l", "command": "expandLineSelection", "when": "textInputFocus" },
	{
		"key": "down",
		"command": "interactiveEditor.arrowOutDown",
		"when": "interactiveEditorFocused && interactiveEditorHasProvider && interactiveEditorInnerCursorLast && !accessibilityModeEnabled && !isEmbeddedDiffEditor"
	},
	{
		"key": "up",
		"command": "interactiveEditor.arrowOutUp",
		"when": "interactiveEditorFocused && interactiveEditorHasProvider && interactiveEditorInnerCursorFirst && !accessibilityModeEnabled && !isEmbeddedDiffEditor"
	},
	{
		"key": "down",
		"command": "notebook.focusNextEditor",
		"when": "config.notebook.navigation.allowNavigateToSurroundingCells && inputFocus && interactiveEditorFocused && interactiveEditorInnerCursorLast && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
	},
	{
		"key": "down",
		"command": "notebook.focusNextEditor",
		"when": "config.notebook.navigation.allowNavigateToSurroundingCells && interactiveEditorFocused && interactiveEditorInnerCursorLast && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
	},
	{
		"key": "shift+tab",
		"command": "outdent",
		"when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
	},
	{ "key": "ctrl+shift+z", "command": "redo" },
	{ "key": "ctrl+y", "command": "redo" },
	{ "key": "ctrl+down", "command": "scrollLineDown", "when": "textInputFocus" },
	{ "key": "ctrl+up", "command": "scrollLineUp", "when": "textInputFocus" },
	{ "key": "alt+pagedown", "command": "scrollPageDown", "when": "textInputFocus" },
	{ "key": "alt+pageup", "command": "scrollPageUp", "when": "textInputFocus" },
	{
		"key": "tab",
		"command": "tab",
		"when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
	},
	{ "key": "ctrl+z", "command": "undo" },
	{
		"key": "shift+down",
		"command": "cursorColumnSelectDown",
		"when": "editorColumnSelection && textInputFocus"
	},
	{
		"key": "shift+left",
		"command": "cursorColumnSelectLeft",
		"when": "editorColumnSelection && textInputFocus"
	},
	{
		"key": "shift+pagedown",
		"command": "cursorColumnSelectPageDown",
		"when": "editorColumnSelection && textInputFocus"
	},
	{
		"key": "shift+pageup",
		"command": "cursorColumnSelectPageUp",
		"when": "editorColumnSelection && textInputFocus"
	},
	{
		"key": "shift+right",
		"command": "cursorColumnSelectRight",
		"when": "editorColumnSelection && textInputFocus"
	},
	{
		"key": "shift+up",
		"command": "cursorColumnSelectUp",
		"when": "editorColumnSelection && textInputFocus"
	},
	{
		"key": "shift+escape",
		"command": "removeSecondaryCursors",
		"when": "editorHasMultipleSelections && textInputFocus"
	},
	{
		"key": "escape",
		"command": "removeSecondaryCursors",
		"when": "editorHasMultipleSelections && textInputFocus"
	},
	{
		"key": "enter",
		"command": "interactiveEditor.accept",
		"when": "interactiveEditorFocused && interactiveEditorHasProvider && interactiveEditorVisible && !interactiveEditorEmpty"
	},
	{
		"key": "down",
		"command": "interactiveEditor.focus",
		"when": "editorTextFocus && interactiveEditorVisible && !accessibilityModeEnabled && !interactiveEditorFocused && !isEmbeddedDiffEditor && interactiveEditorOuterCursorPosition == 'above'"
	},
	{
		"key": "up",
		"command": "interactiveEditor.focus",
		"when": "editorTextFocus && interactiveEditorVisible && !accessibilityModeEnabled && !interactiveEditorFocused && !isEmbeddedDiffEditor && interactiveEditorOuterCursorPosition == 'below'"
	},
	{
		"key": "ctrl+down",
		"command": "interactiveEditor.nextFromHistory",
		"when": "interactiveEditorFocused && interactiveEditorHasProvider"
	},
	{
		"key": "ctrl+up",
		"command": "interactiveEditor.previousFromHistory",
		"when": "interactiveEditorFocused && interactiveEditorHasProvider"
	},
	{
		"key": "f12",
		"command": "goToNextReference",
		"when": "inReferenceSearchEditor || referenceSearchVisible"
	},
	{
		"key": "f4",
		"command": "goToNextReference",
		"when": "inReferenceSearchEditor || referenceSearchVisible"
	},
	{
		"key": "shift+f12",
		"command": "goToPreviousReference",
		"when": "inReferenceSearchEditor || referenceSearchVisible"
	},
	{
		"key": "shift+f4",
		"command": "goToPreviousReference",
		"when": "inReferenceSearchEditor || referenceSearchVisible"
	},
	{
		"key": "shift+enter",
		"command": "refactorPreview.apply",
		"when": "refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview'"
	},
	{
		"key": "alt+enter",
		"command": "testing.editFocusedTest",
		"when": "focusedView == 'workbench.view.testing'"
	},
	{
		"key": "escape",
		"command": "notebook.cell.quitEdit",
		"when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "notebook.cell.quitEdit",
		"when": "inputFocus && notebookEditorFocused && notebookCellType == 'markup'"
	},
	{
		"key": "escape",
		"command": "interactiveEditor.cancel",
		"when": "interactiveEditorHasProvider && interactiveEditorVisible && config.interactiveEditor.editMode == 'preview'"
	},
	{ "key": "ctrl+f", "command": "actions.find", "when": "editorFocus || editorIsOpen" },
	{
		"key": "enter",
		"command": "breakpointWidget.action.acceptInput",
		"when": "breakpointWidgetVisible && inBreakpointWidget"
	},
	{ "key": "enter", "command": "chat.action.acceptInput", "when": "inChatInput && textInputFocus" },
	{ "key": "ctrl+up", "command": "chat.action.focus", "when": "inChatInput && textInputFocus" },
	{
		"key": "shift+escape",
		"command": "closeBreakpointWidget",
		"when": "breakpointWidgetVisible && textInputFocus"
	},
	{
		"key": "escape",
		"command": "closeBreakpointWidget",
		"when": "breakpointWidgetVisible && textInputFocus"
	},
	{ "key": "ctrl+u", "command": "cursorUndo", "when": "textInputFocus" },
	{
		"key": "ctrl+right",
		"command": "cursorWordEndRight",
		"when": "textInputFocus && !accessibilityModeEnabled"
	},
	{
		"key": "ctrl+shift+right",
		"command": "cursorWordEndRightSelect",
		"when": "textInputFocus && !accessibilityModeEnabled"
	},
	{
		"key": "ctrl+left",
		"command": "cursorWordLeft",
		"when": "textInputFocus && !accessibilityModeEnabled"
	},
	{
		"key": "ctrl+shift+left",
		"command": "cursorWordLeftSelect",
		"when": "textInputFocus && !accessibilityModeEnabled"
	},
	{
		"key": "ctrl+backspace",
		"command": "deleteWordLeft",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+delete",
		"command": "deleteWordRight",
		"when": "textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k ctrl+c",
		"command": "editor.action.addCommentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+d",
		"command": "editor.action.addSelectionToNextFindMatch",
		"when": "editorFocus"
	},
	{
		"key": "shift+alt+oem_period",
		"command": "editor.action.autoFix",
		"when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
	},
	{
		"key": "shift+alt+a",
		"command": "editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "escape",
		"command": "editor.action.cancelSelectionAnchor",
		"when": "editorTextFocus && selectionAnchorSet"
	},
	{
		"key": "ctrl+f2",
		"command": "editor.action.changeAll",
		"when": "editorTextFocus && !editorReadonly"
	},
	{ "key": "ctrl+insert", "command": "editor.action.clipboardCopyAction" },
	{ "key": "ctrl+c", "command": "editor.action.clipboardCopyAction" },
	{ "key": "shift+delete", "command": "editor.action.clipboardCutAction" },
	{ "key": "ctrl+x", "command": "editor.action.clipboardCutAction" },
	{ "key": "shift+insert", "command": "editor.action.clipboardPasteAction" },
	{ "key": "ctrl+v", "command": "editor.action.clipboardPasteAction" },
	{
		"key": "ctrl+oem_2",
		"command": "editor.action.commentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+down",
		"command": "editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+up",
		"command": "editor.action.copyLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+k",
		"command": "editor.action.deleteLines",
		"when": "textInputFocus && !editorReadonly"
	},
	{ "key": "f7", "command": "editor.action.diffReview.next", "when": "isInDiffEditor" },
	{ "key": "shift+f7", "command": "editor.action.diffReview.prev", "when": "isInDiffEditor" },
	{
		"key": "alt+f3",
		"command": "editor.action.dirtydiff.next",
		"when": "editorTextFocus && !textCompareEditorActive"
	},
	{
		"key": "shift+alt+f3",
		"command": "editor.action.dirtydiff.previous",
		"when": "editorTextFocus && !textCompareEditorActive"
	},
	{ "key": "escape", "command": "editor.action.escapeFocusHover", "when": "editorHoverFocused" },
	{
		"key": "enter",
		"command": "editor.action.extensioneditor.findNext",
		"when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
	},
	{
		"key": "shift+enter",
		"command": "editor.action.extensioneditor.findPrevious",
		"when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
	},
	{
		"key": "ctrl+f",
		"command": "editor.action.extensioneditor.showfind",
		"when": "!editorFocus && activeEditor == 'workbench.editor.extension'"
	},
	{
		"key": "shift+alt+f",
		"command": "editor.action.formatDocument",
		"when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
	},
	{
		"key": "shift+alt+f",
		"command": "editor.action.formatDocument.none",
		"when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
	},
	{
		"key": "ctrl+k ctrl+f",
		"command": "editor.action.formatSelection",
		"when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
	},
	{ "key": "ctrl+down", "command": "editor.action.goToBottomHover", "when": "editorHoverFocused" },
	{ "key": "end", "command": "editor.action.goToBottomHover", "when": "editorHoverFocused" },
	{
		"key": "enter",
		"command": "editor.action.goToFocusedStickyScrollLine",
		"when": "stickyScrollFocused"
	},
	{
		"key": "ctrl+f12",
		"command": "editor.action.goToImplementation",
		"when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
	},
	{
		"key": "shift+f12",
		"command": "editor.action.goToReferences",
		"when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
	},
	{ "key": "ctrl+up", "command": "editor.action.goToTopHover", "when": "editorHoverFocused" },
	{ "key": "home", "command": "editor.action.goToTopHover", "when": "editorHoverFocused" },
	{
		"key": "escape",
		"command": "editor.action.hideColorPicker",
		"when": "standaloneColorPickerVisible"
	},
	{
		"key": "ctrl+shift+oem_period",
		"command": "editor.action.inPlaceReplace.down",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+oem_comma",
		"command": "editor.action.inPlaceReplace.up",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+oem_6",
		"command": "editor.action.indentLines",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "escape",
		"command": "editor.action.inlineSuggest.hide",
		"when": "inlineSuggestionVisible"
	},
	{
		"key": "alt+oem_6",
		"command": "editor.action.inlineSuggest.showNext",
		"when": "inlineSuggestionVisible && !editorReadonly"
	},
	{
		"key": "alt+oem_4",
		"command": "editor.action.inlineSuggest.showPrevious",
		"when": "inlineSuggestionVisible && !editorReadonly"
	},
	{
		"key": "enter",
		"command": "editor.action.insertColorWithStandaloneColorPicker",
		"when": "standaloneColorPickerFocused"
	},
	{ "key": "ctrl+alt+up", "command": "editor.action.insertCursorAbove", "when": "editorTextFocus" },
	{
		"key": "shift+alt+i",
		"command": "editor.action.insertCursorAtEndOfEachLineSelected",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+alt+down",
		"command": "editor.action.insertCursorBelow",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+enter",
		"command": "editor.action.insertLineAfter",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+enter",
		"command": "editor.action.insertLineBefore",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+oem_5",
		"command": "editor.action.jumpToBracket",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+shift+f2",
		"command": "editor.action.linkedEditing",
		"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
	},
	{ "key": "alt+f8", "command": "editor.action.marker.next", "when": "editorFocus" },
	{ "key": "f8", "command": "editor.action.marker.nextInFiles", "when": "editorFocus" },
	{ "key": "shift+alt+f8", "command": "editor.action.marker.prev", "when": "editorFocus" },
	{ "key": "shift+f8", "command": "editor.action.marker.prevInFiles", "when": "editorFocus" },
	{
		"key": "alt+down",
		"command": "editor.action.moveLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+up",
		"command": "editor.action.moveLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+k ctrl+d",
		"command": "editor.action.moveSelectionToNextFindMatch",
		"when": "editorFocus"
	},
	{ "key": "alt+f9", "command": "editor.action.nextCommentThreadAction", "when": "editorFocus" },
	{ "key": "f3", "command": "editor.action.nextMatchFindAction", "when": "editorFocus" },
	{
		"key": "enter",
		"command": "editor.action.nextMatchFindAction",
		"when": "editorFocus && findInputFocussed"
	},
	{
		"key": "ctrl+f3",
		"command": "editor.action.nextSelectionMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "shift+alt+o",
		"command": "editor.action.organizeImports",
		"when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
	},
	{
		"key": "ctrl+oem_4",
		"command": "editor.action.outdentLines",
		"when": "editorTextFocus && !editorReadonly"
	},
	{ "key": "alt+down", "command": "editor.action.pageDownHover", "when": "editorHoverFocused" },
	{ "key": "pagedown", "command": "editor.action.pageDownHover", "when": "editorHoverFocused" },
	{ "key": "alt+up", "command": "editor.action.pageUpHover", "when": "editorHoverFocused" },
	{ "key": "pageup", "command": "editor.action.pageUpHover", "when": "editorHoverFocused" },
	{
		"key": "alt+f12",
		"command": "editor.action.peekDefinition",
		"when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
	},
	{
		"key": "ctrl+shift+f12",
		"command": "editor.action.peekImplementation",
		"when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
	},
	{
		"key": "shift+alt+f9",
		"command": "editor.action.previousCommentThreadAction",
		"when": "editorFocus"
	},
	{ "key": "shift+f3", "command": "editor.action.previousMatchFindAction", "when": "editorFocus" },
	{
		"key": "shift+enter",
		"command": "editor.action.previousMatchFindAction",
		"when": "editorFocus && findInputFocussed"
	},
	{
		"key": "ctrl+shift+f3",
		"command": "editor.action.previousSelectionMatchFindAction",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+oem_period",
		"command": "editor.action.quickFix",
		"when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+r",
		"command": "editor.action.refactor",
		"when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
	},
	{
		"key": "ctrl+alt+backspace",
		"command": "editor.action.removeBrackets",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+k ctrl+u",
		"command": "editor.action.removeCommentLine",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "f2",
		"command": "editor.action.rename",
		"when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
	},
	{
		"key": "f12",
		"command": "editor.action.revealDefinition",
		"when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
	},
	{
		"key": "ctrl+k f12",
		"command": "editor.action.revealDefinitionAside",
		"when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
	},
	{ "key": "down", "command": "editor.action.scrollDownHover", "when": "editorHoverFocused" },
	{ "key": "left", "command": "editor.action.scrollLeftHover", "when": "editorHoverFocused" },
	{ "key": "right", "command": "editor.action.scrollRightHover", "when": "editorHoverFocused" },
	{ "key": "up", "command": "editor.action.scrollUpHover", "when": "editorHoverFocused" },
	{ "key": "escape", "command": "editor.action.selectEditor", "when": "stickyScrollFocused" },
	{
		"key": "ctrl+k ctrl+k",
		"command": "editor.action.selectFromAnchorToCursor",
		"when": "editorTextFocus && selectionAnchorSet"
	},
	{ "key": "ctrl+shift+l", "command": "editor.action.selectHighlights", "when": "editorFocus" },
	{
		"key": "down",
		"command": "editor.action.selectNextStickyScrollLine",
		"when": "stickyScrollFocused"
	},
	{
		"key": "up",
		"command": "editor.action.selectPreviousStickyScrollLine",
		"when": "stickyScrollFocused"
	},
	{
		"key": "ctrl+k ctrl+b",
		"command": "editor.action.setSelectionAnchor",
		"when": "editorTextFocus"
	},
	{ "key": "alt+f1", "command": "editor.action.showAccessibilityHelp" },
	{ "key": "shift+f10", "command": "editor.action.showContextMenu", "when": "textInputFocus" },
	{ "key": "ctrl+k ctrl+i", "command": "editor.action.showHover", "when": "editorTextFocus" },
	{
		"key": "shift+alt+right",
		"command": "editor.action.smartSelect.expand",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+left",
		"command": "editor.action.smartSelect.shrink",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+h",
		"command": "editor.action.startFindReplaceAction",
		"when": "editorFocus || editorIsOpen"
	},
	{ "key": "ctrl+m", "command": "editor.action.toggleTabFocusMode" },
	{ "key": "alt+z", "command": "editor.action.toggleWordWrap" },
	{
		"key": "ctrl+shift+space",
		"command": "editor.action.triggerParameterHints",
		"when": "editorHasSignatureHelpProvider && editorTextFocus"
	},
	{
		"key": "ctrl+i",
		"command": "editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
	},
	{
		"key": "ctrl+space",
		"command": "editor.action.triggerSuggest",
		"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
	},
	{
		"key": "ctrl+k ctrl+x",
		"command": "editor.action.trimTrailingWhitespace",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "enter",
		"command": "editor.action.webvieweditor.findNext",
		"when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'"
	},
	{
		"key": "shift+enter",
		"command": "editor.action.webvieweditor.findPrevious",
		"when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'"
	},
	{
		"key": "escape",
		"command": "editor.action.webvieweditor.hideFind",
		"when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'"
	},
	{
		"key": "ctrl+f",
		"command": "editor.action.webvieweditor.showFind",
		"when": "webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor'"
	},
	{
		"key": "f7",
		"command": "editor.action.wordHighlight.next",
		"when": "editorTextFocus && hasWordHighlights"
	},
	{
		"key": "shift+f7",
		"command": "editor.action.wordHighlight.prev",
		"when": "editorTextFocus && hasWordHighlights"
	},
	{ "key": "escape", "command": "editor.cancelOperation", "when": "cancellableOperation" },
	{ "key": "ctrl+oem_period", "command": "editor.changeDropType", "when": "dropWidgetVisible" },
	{ "key": "ctrl+oem_period", "command": "editor.changePasteType", "when": "pasteWidgetVisible" },
	{
		"key": "ctrl+k ctrl+oem_comma",
		"command": "editor.createFoldingRangeFromSelection",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "escape",
		"command": "editor.debug.action.closeExceptionWidget",
		"when": "exceptionWidgetVisible"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "editor.debug.action.showDebugHover",
		"when": "editorTextFocus && inDebugMode"
	},
	{
		"key": "f9",
		"command": "editor.debug.action.toggleBreakpoint",
		"when": "debuggersAvailable && editorTextFocus"
	},
	{
		"key": "tab",
		"command": "editor.emmet.action.expandAbbreviation",
		"when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
	},
	{
		"key": "ctrl+shift+oem_4",
		"command": "editor.fold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+0",
		"command": "editor.foldAll",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+oem_2",
		"command": "editor.foldAllBlockComments",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+oem_minus",
		"command": "editor.foldAllExcept",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+8",
		"command": "editor.foldAllMarkerRegions",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+1",
		"command": "editor.foldLevel1",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+2",
		"command": "editor.foldLevel2",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+3",
		"command": "editor.foldLevel3",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+4",
		"command": "editor.foldLevel4",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+5",
		"command": "editor.foldLevel5",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+6",
		"command": "editor.foldLevel6",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+7",
		"command": "editor.foldLevel7",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+oem_4",
		"command": "editor.foldRecursively",
		"when": "editorTextFocus && foldingEnabled"
	},
	{ "key": "f12", "command": "editor.gotoNextSymbolFromResult", "when": "hasSymbols" },
	{ "key": "escape", "command": "editor.gotoNextSymbolFromResult.cancel", "when": "hasSymbols" },
	{
		"key": "ctrl+k ctrl+oem_period",
		"command": "editor.removeManualFoldingRanges",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+l",
		"command": "editor.toggleFold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+shift+oem_6",
		"command": "editor.unfold",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+j",
		"command": "editor.unfoldAll",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+oem_plus",
		"command": "editor.unfoldAllExcept",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+9",
		"command": "editor.unfoldAllMarkerRegions",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "ctrl+k ctrl+oem_6",
		"command": "editor.unfoldRecursively",
		"when": "editorTextFocus && foldingEnabled"
	},
	{
		"key": "escape",
		"command": "inlayHints.stopReadingLineWithHint",
		"when": "isReadingLineWithInlayHints"
	},
	{
		"key": "tab",
		"command": "insertSnippet",
		"when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
	},
	{
		"key": "ctrl+enter",
		"command": "interactive.execute",
		"when": "resourceScheme == 'vscode-interactive'"
	},
	{
		"key": "alt+f1",
		"command": "interactiveEditor.accessibilityHelp",
		"when": "interactiveEditorFocused"
	},
	{
		"key": "escape",
		"command": "interactiveEditor.discard",
		"when": "interactiveEditorHasProvider && interactiveEditorVisible"
	},
	{
		"key": "escape",
		"command": "interactiveEditor.stop",
		"when": "interactiveEditorHasActiveRequest && interactiveEditorHasProvider && interactiveEditorVisible && !interactiveEditorEmpty"
	},
	{
		"key": "pagedown",
		"command": "notebook.cell.cursorPageDown",
		"when": "editorTextFocus && inputFocus && notebookEditorFocused"
	},
	{
		"key": "shift+pagedown",
		"command": "notebook.cell.cursorPageDownSelect",
		"when": "editorTextFocus && inputFocus && notebookEditorFocused"
	},
	{
		"key": "pageup",
		"command": "notebook.cell.cursorPageUp",
		"when": "editorTextFocus && inputFocus && notebookEditorFocused"
	},
	{
		"key": "shift+pageup",
		"command": "notebook.cell.cursorPageUpSelect",
		"when": "editorTextFocus && inputFocus && notebookEditorFocused"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "notebook.cell.execute",
		"when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
	},
	{
		"key": "alt+enter",
		"command": "notebook.cell.executeAndInsertBelow",
		"when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
	},
	{
		"key": "shift+enter",
		"command": "notebook.cell.executeAndSelectBelow",
		"when": "notebookCellListFocused && !interactiveEditorFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !interactiveEditorFocused && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !interactiveEditorFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !interactiveEditorFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
	},
	{
		"key": "ctrl+shift+v",
		"command": "notebook.cell.pasteAbove",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "down",
		"command": "notebook.focusNextEditor",
		"when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
	},
	{
		"key": "up",
		"command": "notebook.focusPreviousEditor",
		"when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
	},
	{
		"key": "shift+alt+f",
		"command": "notebook.formatCell",
		"when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+enter",
		"command": "openReferenceToSide",
		"when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand"
	},
	{ "key": "enter", "command": "repl.action.acceptInput", "when": "inDebugRepl && textInputFocus" },
	{ "key": "ctrl+f", "command": "repl.action.filter", "when": "inDebugRepl && textInputFocus" },
	{ "key": "ctrl+shift+r", "command": "rerunSearchEditorSearch", "when": "inSearchEditor" },
	{ "key": "escape", "command": "search.action.focusQueryEditorWidget", "when": "inSearchEditor" },
	{
		"key": "ctrl+shift+backspace",
		"command": "search.searchEditor.action.deleteFileResults",
		"when": "inSearchEditor"
	},
	{
		"key": "escape",
		"command": "settings.action.clearSearchResults",
		"when": "inSettingsEditor && inSettingsSearch"
	},
	{
		"key": "down",
		"command": "settings.action.focusSettingsFile",
		"when": "inSettingsSearch && !suggestWidgetVisible"
	},
	{ "key": "ctrl+f", "command": "settings.action.search", "when": "inSettingsEditor" },
	{ "key": "ctrl+oem_2", "command": "toggleExplainMode", "when": "suggestWidgetVisible" },
	{
		"key": "ctrl+k f2",
		"command": "togglePeekWidgetFocus",
		"when": "inReferenceSearchEditor || referenceSearchVisible"
	},
	{
		"key": "escape",
		"command": "welcome.goBack",
		"when": "inWelcome && activeEditor == 'gettingStartedPage'"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "workbench.action.chat.runInTerminal",
		"when": "hasChatProvider && inChat"
	},
	{
		"key": "alt+f5",
		"command": "workbench.action.editor.nextChange",
		"when": "editorTextFocus && !textCompareEditorActive"
	},
	{
		"key": "shift+alt+f5",
		"command": "workbench.action.editor.previousChange",
		"when": "editorTextFocus && !textCompareEditorActive"
	},
	{
		"key": "shift+escape",
		"command": "workbench.action.hideComment",
		"when": "commentEditorFocused"
	},
	{ "key": "escape", "command": "workbench.action.hideComment", "when": "commentEditorFocused" },
	{
		"key": "ctrl+enter",
		"command": "workbench.action.submitComment",
		"when": "commentEditorFocused"
	},
	{
		"key": "ctrl+right",
		"command": "editor.action.inlineSuggest.acceptNextWord",
		"when": "inlineSuggestionVisible && !editorReadonly"
	},
	{
		"key": "alt+f8",
		"command": "testing.goToNextMessage",
		"when": "editorFocus && testing.isPeekVisible"
	},
	{
		"key": "shift+alt+f8",
		"command": "testing.goToPreviousMessage",
		"when": "editorFocus && testing.isPeekVisible"
	},
	{
		"key": "shift+escape",
		"command": "closeFindWidget",
		"when": "editorFocus && findWidgetVisible && !isComposing"
	},
	{
		"key": "escape",
		"command": "closeFindWidget",
		"when": "editorFocus && findWidgetVisible && !isComposing"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "editor.action.replaceAll",
		"when": "editorFocus && findWidgetVisible"
	},
	{
		"key": "ctrl+shift+1",
		"command": "editor.action.replaceOne",
		"when": "editorFocus && findWidgetVisible"
	},
	{
		"key": "enter",
		"command": "editor.action.replaceOne",
		"when": "editorFocus && findWidgetVisible && replaceInputFocussed"
	},
	{
		"key": "alt+enter",
		"command": "editor.action.selectAllMatches",
		"when": "editorFocus && findWidgetVisible"
	},
	{ "key": "alt+c", "command": "toggleFindCaseSensitive", "when": "editorFocus" },
	{ "key": "alt+l", "command": "toggleFindInSelection", "when": "editorFocus" },
	{ "key": "alt+r", "command": "toggleFindRegex", "when": "editorFocus" },
	{ "key": "alt+w", "command": "toggleFindWholeWord", "when": "editorFocus" },
	{ "key": "alt+p", "command": "togglePreserveCase", "when": "editorFocus" },
	{ "key": "alt+f1", "command": "chat.action.accessibilityHelp", "when": "inChatInput" },
	{
		"key": "ctrl+enter",
		"command": "interactive.acceptChanges",
		"when": "interactiveEditorHasProvider && interactiveEditorVisible && !interactiveEditorDocumentChanged || interactiveEditorHasProvider && interactiveEditorVisible && config.interactiveEditor.editMode != 'preview'"
	},
	{
		"key": "tab",
		"command": "jumpToNextSnippetPlaceholder",
		"when": "editorTextFocus && hasNextTabstop && inSnippetMode"
	},
	{
		"key": "shift+tab",
		"command": "jumpToPrevSnippetPlaceholder",
		"when": "editorTextFocus && hasPrevTabstop && inSnippetMode"
	},
	{ "key": "escape", "command": "leaveEditorMessage", "when": "messageVisible" },
	{ "key": "shift+escape", "command": "leaveSnippet", "when": "editorTextFocus && inSnippetMode" },
	{ "key": "escape", "command": "leaveSnippet", "when": "editorTextFocus && inSnippetMode" },
	{ "key": "shift+escape", "command": "closeDirtyDiff", "when": "dirtyDiffVisible" },
	{ "key": "escape", "command": "closeDirtyDiff", "when": "dirtyDiffVisible" },
	{
		"key": "shift+escape",
		"command": "closeMarkersNavigation",
		"when": "editorFocus && markersNavigationVisible"
	},
	{
		"key": "escape",
		"command": "closeMarkersNavigation",
		"when": "editorFocus && markersNavigationVisible"
	},
	{ "key": "escape", "command": "notifications.hideToasts", "when": "notificationToastsVisible" },
	{
		"key": "shift+escape",
		"command": "closeParameterHints",
		"when": "editorFocus && parameterHintsVisible"
	},
	{
		"key": "escape",
		"command": "closeParameterHints",
		"when": "editorFocus && parameterHintsVisible"
	},
	{
		"key": "alt+down",
		"command": "showNextParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "down",
		"command": "showNextParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "alt+up",
		"command": "showPrevParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "up",
		"command": "showPrevParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "shift+tab",
		"command": "acceptAlternativeSelectedSuggestion",
		"when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "shift+enter",
		"command": "acceptAlternativeSelectedSuggestion",
		"when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "tab",
		"command": "acceptSelectedSuggestion",
		"when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "enter",
		"command": "acceptSelectedSuggestion",
		"when": "acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
	},
	{
		"key": "ctrl+i",
		"command": "focusSuggestion",
		"when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "ctrl+space",
		"command": "focusSuggestion",
		"when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "shift+escape",
		"command": "hideSuggestWidget",
		"when": "suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "escape",
		"command": "hideSuggestWidget",
		"when": "suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "tab",
		"command": "insertBestCompletion",
		"when": "atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
	},
	{
		"key": "tab",
		"command": "insertNextSuggestion",
		"when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
	},
	{
		"key": "shift+tab",
		"command": "insertPrevSuggestion",
		"when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
	},
	{
		"key": "ctrl+pagedown",
		"command": "selectNextPageSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "pagedown",
		"command": "selectNextPageSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "ctrl+down",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "down",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "ctrl+pageup",
		"command": "selectPrevPageSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "pageup",
		"command": "selectPrevPageSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "ctrl+up",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "up",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		"key": "ctrl+i",
		"command": "toggleSuggestionDetails",
		"when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+space",
		"command": "toggleSuggestionDetails",
		"when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+alt+space",
		"command": "toggleSuggestionFocus",
		"when": "suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "enter",
		"command": "acceptRenameInput",
		"when": "editorFocus && renameInputVisible && !isComposing"
	},
	{
		"key": "shift+enter",
		"command": "acceptRenameInputWithPreview",
		"when": "config.editor.rename.enablePreview && editorFocus && renameInputVisible && !isComposing"
	},
	{
		"key": "shift+escape",
		"command": "cancelLinkedEditingInput",
		"when": "LinkedEditingInputVisible && editorTextFocus"
	},
	{
		"key": "escape",
		"command": "cancelLinkedEditingInput",
		"when": "LinkedEditingInputVisible && editorTextFocus"
	},
	{
		"key": "shift+escape",
		"command": "cancelRenameInput",
		"when": "editorFocus && renameInputVisible"
	},
	{ "key": "escape", "command": "cancelRenameInput", "when": "editorFocus && renameInputVisible" },
	{
		"key": "ctrl+shift+l",
		"command": "addCursorsAtSearchResults",
		"when": "fileMatchOrMatchFocus && searchViewletVisible"
	},
	{
		"key": "ctrl+shift+oem_1",
		"command": "breadcrumbs.focus",
		"when": "breadcrumbsPossible && breadcrumbsVisible"
	},
	{
		"key": "ctrl+shift+oem_period",
		"command": "breadcrumbs.focusAndSelect",
		"when": "breadcrumbsPossible && breadcrumbsVisible"
	},
	{
		"key": "ctrl+right",
		"command": "breadcrumbs.focusNext",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "right",
		"command": "breadcrumbs.focusNext",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "ctrl+left",
		"command": "breadcrumbs.focusPrevious",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "left",
		"command": "breadcrumbs.focusPrevious",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "ctrl+enter",
		"command": "breadcrumbs.revealFocused",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "space",
		"command": "breadcrumbs.revealFocused",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "ctrl+enter",
		"command": "breadcrumbs.revealFocusedFromTreeAside",
		"when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
	},
	{
		"key": "down",
		"command": "breadcrumbs.selectFocused",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "enter",
		"command": "breadcrumbs.selectFocused",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{
		"key": "ctrl+shift+oem_period",
		"command": "breadcrumbs.toggleToOn",
		"when": "!config.breadcrumbs.enabled"
	},
	{
		"key": "ctrl+shift+i",
		"command": "chat.action.askQuickQuestion",
		"when": "config.chat.experimental.quickQuestion.enable && hasChatProvider"
	},
	{
		"key": "shift+escape",
		"command": "closeAccessibilityHelp",
		"when": "accessibilityHelpWidgetVisible && editorFocus"
	},
	{
		"key": "escape",
		"command": "closeAccessibilityHelp",
		"when": "accessibilityHelpWidgetVisible && editorFocus"
	},
	{
		"key": "escape",
		"command": "closeReplaceInFilesWidget",
		"when": "replaceInputBoxFocus && searchViewletVisible"
	},
	{ "key": "escape", "command": "commentsClearFilterText", "when": "commentsFilterFocus" },
	{
		"key": "ctrl+f",
		"command": "commentsFocusFilter",
		"when": "focusedView == 'workbench.panel.comments'"
	},
	{ "key": "ctrl+down", "command": "commentsFocusViewFromFilter", "when": "commentsFilterFocus" },
	{ "key": "shift+alt+c", "command": "copyFilePath", "when": "!editorFocus" },
	{ "key": "shift+alt+c", "command": "copyFilePath", "when": "editorFocus" },
	{ "key": "ctrl+k ctrl+shift+c", "command": "copyRelativeFilePath", "when": "!editorFocus" },
	{ "key": "ctrl+k ctrl+shift+c", "command": "copyRelativeFilePath", "when": "editorFocus" },
	{ "key": "alt+enter", "command": "debug.openBreakpointToSide", "when": "breakpointsFocused" },
	{ "key": "ctrl+enter", "command": "debug.openBreakpointToSide", "when": "breakpointsFocused" },
	{ "key": "ctrl+f5", "command": "debug.openView", "when": "!debuggersAvailable" },
	{ "key": "f5", "command": "debug.openView", "when": "!debuggersAvailable" },
	{
		"key": "delete",
		"command": "debug.removeBreakpoint",
		"when": "breakpointsFocused && !breakpointInputFocused"
	},
	{
		"key": "delete",
		"command": "debug.removeWatchExpression",
		"when": "watchExpressionsFocused && !expressionSelected"
	},
	{
		"key": "alt+oem_minus",
		"command": "decreaseSearchEditorContextLines",
		"when": "inSearchEditor"
	},
	{
		"key": "ctrl+k ctrl+k",
		"command": "editor.action.defineKeybinding",
		"when": "resource == 'vscode-userdata:/c%3A/Users/henri/AppData/Roaming/Code/User/keybindings.json'"
	},
	{
		"key": "tab",
		"command": "editor.action.inlineSuggest.commit",
		"when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus"
	},
	{
		"key": "shift+f9",
		"command": "editor.debug.action.toggleInlineBreakpoint",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+d",
		"command": "editor.detectLanguage",
		"when": "editorTextFocus && !notebookEditable"
	},
	{
		"key": "shift+enter",
		"command": "editor.refocusCallHierarchy",
		"when": "callHierarchyVisible"
	},
	{
		"key": "shift+enter",
		"command": "editor.refocusTypeHierarchy",
		"when": "typeHierarchyVisible"
	},
	{
		"key": "shift+alt+h",
		"command": "editor.showCallHierarchy",
		"when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
	},
	{
		"key": "shift+alt+h",
		"command": "editor.showIncomingCalls",
		"when": "callHierarchyVisible && callHierarchyDirection == 'outgoingCalls'"
	},
	{
		"key": "shift+alt+h",
		"command": "editor.showOutgoingCalls",
		"when": "callHierarchyVisible && callHierarchyDirection == 'incomingCalls'"
	},
	{
		"key": "shift+alt+h",
		"command": "editor.showSubtypes",
		"when": "typeHierarchyVisible && typeHierarchyDirection == 'supertypes'"
	},
	{
		"key": "shift+alt+h",
		"command": "editor.showSupertypes",
		"when": "typeHierarchyVisible && typeHierarchyDirection == 'subtypes'"
	},
	{
		"key": "ctrl+enter",
		"command": "explorer.openToSide",
		"when": "explorerViewletFocus && foldersViewVisible && !inputFocus"
	},
	{
		"key": "shift+alt+f",
		"command": "filesExplorer.findInFolder",
		"when": "explorerResourceIsFolder && filesExplorerFocus && foldersViewVisible && !inputFocus"
	},
	{
		"key": "alt+down",
		"command": "history.showNext",
		"when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
	},
	{
		"key": "down",
		"command": "history.showNext",
		"when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
	},
	{
		"key": "alt+up",
		"command": "history.showPrevious",
		"when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
	},
	{
		"key": "up",
		"command": "history.showPrevious",
		"when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
	},
	{
		"key": "alt+oem_plus",
		"command": "increaseSearchEditorContextLines",
		"when": "inSearchEditor"
	},
	{
		"key": "down",
		"command": "interactive.history.next",
		"when": "!suggestWidgetVisible && resourceScheme == 'vscode-interactive' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
	},
	{
		"key": "up",
		"command": "interactive.history.previous",
		"when": "!suggestWidgetVisible && resourceScheme == 'vscode-interactive' && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'"
	},
	{
		"key": "ctrl+end",
		"command": "interactive.scrollToBottom",
		"when": "resourceScheme == 'vscode-interactive'"
	},
	{
		"key": "ctrl+home",
		"command": "interactive.scrollToTop",
		"when": "resourceScheme == 'vscode-interactive'"
	},
	{
		"key": "ctrl+k i",
		"command": "interactiveEditor.start",
		"when": "interactiveEditorHasProvider && !editorReadonly"
	},
	{
		"key": "ctrl+i",
		"command": "interactiveEditor.start",
		"when": "interactiveEditorHasProvider && !editorReadonly"
	},
	{
		"key": "ctrl+z",
		"command": "interactiveEditor.unstash",
		"when": "interactiveEditorHasStashedSession && !editorReadonly"
	},
	{
		"key": "enter",
		"command": "keybindings.editor.acceptWhenExpression",
		"when": "inKeybindings && whenFocus && !suggestWidgetVisible"
	},
	{
		"key": "ctrl+k ctrl+a",
		"command": "keybindings.editor.addKeybinding",
		"when": "inKeybindings && keybindingFocus"
	},
	{
		"key": "escape",
		"command": "keybindings.editor.clearSearchResults",
		"when": "inKeybindings && inKeybindingsSearch"
	},
	{
		"key": "ctrl+c",
		"command": "keybindings.editor.copyKeybindingEntry",
		"when": "inKeybindings && keybindingFocus && !whenFocus"
	},
	{
		"key": "enter",
		"command": "keybindings.editor.defineKeybinding",
		"when": "inKeybindings && keybindingFocus && !whenFocus"
	},
	{
		"key": "ctrl+k ctrl+e",
		"command": "keybindings.editor.defineWhenExpression",
		"when": "inKeybindings && keybindingFocus"
	},
	{
		"key": "ctrl+down",
		"command": "keybindings.editor.focusKeybindings",
		"when": "inKeybindings && inKeybindingsSearch"
	},
	{
		"key": "alt+k",
		"command": "keybindings.editor.recordSearchKeys",
		"when": "inKeybindings && inKeybindingsSearch"
	},
	{
		"key": "escape",
		"command": "keybindings.editor.rejectWhenExpression",
		"when": "inKeybindings && whenFocus && !suggestWidgetVisible"
	},
	{
		"key": "delete",
		"command": "keybindings.editor.removeKeybinding",
		"when": "inKeybindings && keybindingFocus && !inputFocus"
	},
	{ "key": "ctrl+f", "command": "keybindings.editor.searchKeybindings", "when": "inKeybindings" },
	{
		"key": "alt+p",
		"command": "keybindings.editor.toggleSortByPrecedence",
		"when": "inKeybindings"
	},
	{
		"key": "escape",
		"command": "list.clear",
		"when": "listFocus && listHasSelectionOrFocus && !inputFocus"
	},
	{ "key": "escape", "command": "list.closeFind", "when": "listFocus && treeFindOpen" },
	{
		"key": "left",
		"command": "list.collapse",
		"when": "listFocus && treeElementCanCollapse && !inputFocus || listFocus && treeElementHasParent && !inputFocus"
	},
	{ "key": "ctrl+left", "command": "list.collapseAll", "when": "listFocus && !inputFocus" },
	{
		"key": "right",
		"command": "list.expand",
		"when": "listFocus && treeElementCanExpand && !inputFocus || listFocus && treeElementHasChild && !inputFocus"
	},
	{
		"key": "shift+down",
		"command": "list.expandSelectionDown",
		"when": "listFocus && listSupportsMultiselect && !inputFocus"
	},
	{
		"key": "shift+up",
		"command": "list.expandSelectionUp",
		"when": "listFocus && listSupportsMultiselect && !inputFocus"
	},
	{ "key": "f3", "command": "list.find", "when": "listFocus && listSupportsFind" },
	{ "key": "ctrl+f", "command": "list.find", "when": "listFocus && listSupportsFind" },
	{ "key": "down", "command": "list.focusDown", "when": "listFocus && !inputFocus" },
	{ "key": "home", "command": "list.focusFirst", "when": "listFocus && !inputFocus" },
	{ "key": "end", "command": "list.focusLast", "when": "listFocus && !inputFocus" },
	{ "key": "pagedown", "command": "list.focusPageDown", "when": "listFocus && !inputFocus" },
	{ "key": "pageup", "command": "list.focusPageUp", "when": "listFocus && !inputFocus" },
	{ "key": "up", "command": "list.focusUp", "when": "listFocus && !inputFocus" },
	{ "key": "ctrl+down", "command": "list.scrollDown", "when": "listFocus && !inputFocus" },
	{ "key": "ctrl+up", "command": "list.scrollUp", "when": "listFocus && !inputFocus" },
	{ "key": "enter", "command": "list.select", "when": "listFocus && !inputFocus" },
	{
		"key": "ctrl+a",
		"command": "list.selectAll",
		"when": "listFocus && listSupportsMultiselect && !inputFocus"
	},
	{ "key": "space", "command": "list.toggleExpand", "when": "listFocus && !inputFocus" },
	{
		"key": "ctrl+shift+enter",
		"command": "list.toggleSelection",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "y",
		"command": "notebook.cell.changeToCode",
		"when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup'"
	},
	{
		"key": "m",
		"command": "notebook.cell.changeToMarkdown",
		"when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code'"
	},
	{
		"key": "alt+delete",
		"command": "notebook.cell.clearOutputs",
		"when": "notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus"
	},
	{
		"key": "ctrl+k ctrl+c",
		"command": "notebook.cell.collapseCellInput",
		"when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
	},
	{
		"key": "ctrl+k t",
		"command": "notebook.cell.collapseCellOutput",
		"when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
	},
	{
		"key": "shift+alt+down",
		"command": "notebook.cell.copyDown",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "shift+alt+up",
		"command": "notebook.cell.copyUp",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "delete",
		"command": "notebook.cell.delete",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "shift+alt+d",
		"command": "notebook.cell.detectLanguage",
		"when": "notebookCellEditable && notebookEditable"
	},
	{
		"key": "enter",
		"command": "notebook.cell.edit",
		"when": "notebookCellListFocused && notebookEditable && !inputFocus"
	},
	{
		"key": "ctrl+k ctrl+c",
		"command": "notebook.cell.expandCellInput",
		"when": "notebookCellInputIsCollapsed && notebookCellListFocused"
	},
	{
		"key": "ctrl+k t",
		"command": "notebook.cell.expandCellOutput",
		"when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
	},
	{
		"key": "ctrl+down",
		"command": "notebook.cell.focusInOutput",
		"when": "notebookCellHasOutputs && notebookEditorFocused"
	},
	{
		"key": "ctrl+up",
		"command": "notebook.cell.focusOutOutput",
		"when": "notebookEditorFocused && notebookOutputFocused"
	},
	{
		"key": "ctrl+shift+enter",
		"command": "notebook.cell.insertCodeCellAbove",
		"when": "notebookCellListFocused && !inputFocus"
	},
	{
		"key": "ctrl+enter",
		"command": "notebook.cell.insertCodeCellBelow",
		"when": "notebookCellListFocused && !inputFocus"
	},
	{
		"key": "shift+alt+win+j",
		"command": "notebook.cell.joinAbove",
		"when": "notebookEditorFocused"
	},
	{ "key": "alt+win+j", "command": "notebook.cell.joinBelow", "when": "notebookEditorFocused" },
	{
		"key": "alt+down",
		"command": "notebook.cell.moveDown",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "alt+up",
		"command": "notebook.cell.moveUp",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "ctrl+k ctrl+shift+oem_5",
		"command": "notebook.cell.split",
		"when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
	},
	{
		"key": "ctrl+k y",
		"command": "notebook.cell.toggleOutputScrolling",
		"when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus"
	},
	{ "key": "ctrl+l", "command": "notebook.centerActiveCell", "when": "notebookEditorFocused" },
	{
		"key": "alt+f3",
		"command": "notebook.diff.action.next",
		"when": "activeEditor == 'workbench.editor.notebookTextDiffEditor'"
	},
	{
		"key": "shift+alt+f3",
		"command": "notebook.diff.action.previous",
		"when": "activeEditor == 'workbench.editor.notebookTextDiffEditor'"
	},
	{
		"key": "ctrl+f",
		"command": "notebook.find",
		"when": "notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.interactive' || notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+end",
		"command": "notebook.focusBottom",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "down",
		"command": "notebook.focusNextEditor",
		"when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
	},
	{
		"key": "ctrl+down",
		"command": "notebook.focusNextEditor",
		"when": "notebookEditorFocused && notebookOutputFocused"
	},
	{
		"key": "up",
		"command": "notebook.focusPreviousEditor",
		"when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup'"
	},
	{
		"key": "ctrl+home",
		"command": "notebook.focusTop",
		"when": "notebookEditorFocused && !inputFocus"
	},
	{
		"key": "left",
		"command": "notebook.fold",
		"when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+shift+oem_4",
		"command": "notebook.fold",
		"when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "shift+alt+f",
		"command": "notebook.format",
		"when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "escape",
		"command": "notebook.hideFind",
		"when": "notebookEditorFocused && notebookFindWidgetFocused"
	},
	{
		"key": "right",
		"command": "notebook.unfold",
		"when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+shift+oem_6",
		"command": "notebook.unfold",
		"when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
	},
	{
		"key": "ctrl+shift+a",
		"command": "notification.acceptPrimaryAction",
		"when": "notificationToastsVisible"
	},
	{ "key": "delete", "command": "notification.clear", "when": "notificationFocus" },
	{ "key": "left", "command": "notification.collapse", "when": "notificationFocus" },
	{ "key": "right", "command": "notification.expand", "when": "notificationFocus" },
	{ "key": "enter", "command": "notification.toggle", "when": "notificationFocus" },
	{ "key": "space", "command": "notification.toggle", "when": "notificationFocus" },
	{
		"key": "home",
		"command": "notifications.focusFirstToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "pageup",
		"command": "notifications.focusFirstToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "end",
		"command": "notifications.focusLastToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "pagedown",
		"command": "notifications.focusLastToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "down",
		"command": "notifications.focusNextToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "up",
		"command": "notifications.focusPreviousToast",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{ "key": "escape", "command": "problems.action.clearFilterText", "when": "problemsFilterFocus" },
	{
		"key": "ctrl+c",
		"command": "problems.action.copy",
		"when": "problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view'"
	},
	{
		"key": "ctrl+f",
		"command": "problems.action.focusFilter",
		"when": "focusedView == 'workbench.panel.markers.view'"
	},
	{
		"key": "ctrl+down",
		"command": "problems.action.focusProblemsFromFilter",
		"when": "problemsFilterFocus"
	},
	{ "key": "enter", "command": "problems.action.open", "when": "problemFocus" },
	{ "key": "ctrl+enter", "command": "problems.action.openToSide", "when": "problemFocus" },
	{ "key": "ctrl+oem_period", "command": "problems.action.showQuickFixes", "when": "problemFocus" },
	{
		"key": "space",
		"command": "refactorPreview.toggleCheckedState",
		"when": "listFocus && refactorPreview.enabled && !inputFocus"
	},
	{ "key": "shift+alt+r", "command": "revealFileInOS", "when": "!editorFocus" },
	{
		"key": "enter",
		"command": "revealReference",
		"when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand"
	},
	{ "key": "ctrl+k s", "command": "saveAll" },
	{ "key": "ctrl+enter", "command": "scm.acceptInput", "when": "scmRepository" },
	{ "key": "alt+down", "command": "scm.forceViewNextCommit", "when": "scmRepository" },
	{ "key": "alt+up", "command": "scm.forceViewPreviousCommit", "when": "scmRepository" },
	{
		"key": "down",
		"command": "scm.viewNextCommit",
		"when": "scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible"
	},
	{
		"key": "up",
		"command": "scm.viewPreviousCommit",
		"when": "scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible"
	},
	{
		"key": "escape",
		"command": "search.action.cancel",
		"when": "listFocus && searchViewletVisible && !inputFocus && searchState != '0'"
	},
	{ "key": "ctrl+c", "command": "search.action.copyMatch", "when": "fileMatchOrMatchFocus" },
	{
		"key": "shift+alt+c",
		"command": "search.action.copyPath",
		"when": "fileMatchOrFolderMatchWithResourceFocus"
	},
	{
		"key": "f4",
		"command": "search.action.focusNextSearchResult",
		"when": "hasSearchResult || inSearchEditor"
	},
	{
		"key": "shift+f4",
		"command": "search.action.focusPreviousSearchResult",
		"when": "hasSearchResult || inSearchEditor"
	},
	{
		"key": "ctrl+up",
		"command": "search.action.focusSearchFromResults",
		"when": "accessibilityModeEnabled && searchViewletVisible || firstMatchFocus && searchViewletVisible"
	},
	{
		"key": "alt+enter",
		"command": "search.action.openInEditor",
		"when": "hasSearchResult && searchViewletFocus"
	},
	{
		"key": "enter",
		"command": "search.action.openResult",
		"when": "fileMatchOrMatchFocus && searchViewletVisible"
	},
	{
		"key": "ctrl+enter",
		"command": "search.action.openResultToSide",
		"when": "fileMatchOrMatchFocus && searchViewletVisible"
	},
	{
		"key": "delete",
		"command": "search.action.remove",
		"when": "fileMatchOrMatchFocus && searchViewletVisible"
	},
	{
		"key": "ctrl+shift+1",
		"command": "search.action.replace",
		"when": "isEditableItem && matchFocus && replaceActive && searchViewletVisible"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "search.action.replaceAll",
		"when": "replaceActive && searchViewletVisible && !findWidgetVisible"
	},
	{
		"key": "ctrl+shift+enter",
		"command": "search.action.replaceAllInFile",
		"when": "fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
	},
	{
		"key": "ctrl+shift+1",
		"command": "search.action.replaceAllInFile",
		"when": "fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
	},
	{
		"key": "ctrl+shift+enter",
		"command": "search.action.replaceAllInFolder",
		"when": "folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
	},
	{
		"key": "ctrl+shift+1",
		"command": "search.action.replaceAllInFolder",
		"when": "folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
	},
	{
		"key": "shift+alt+f",
		"command": "search.action.restrictSearchToFolder",
		"when": "folderMatchWithResourceFocus && searchViewletVisible"
	},
	{
		"key": "ctrl+down",
		"command": "search.focus.nextInputBox",
		"when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
	},
	{
		"key": "ctrl+up",
		"command": "search.focus.previousInputBox",
		"when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
	},
	{ "key": "ctrl+shift+l", "command": "selectAllSearchEditorMatches", "when": "inSearchEditor" },
	{
		"key": "escape",
		"command": "settings.action.focusLevelUp",
		"when": "inSettingsEditor && !inSettingsJSONEditor && !inSettingsSearch"
	},
	{
		"key": "enter",
		"command": "settings.action.focusSettingControl",
		"when": "inSettingsEditor && settingRowFocus"
	},
	{
		"key": "down",
		"command": "settings.action.focusSettingsFromSearch",
		"when": "inSettingsSearch && !suggestWidgetVisible"
	},
	{
		"key": "enter",
		"command": "settings.action.focusSettingsList",
		"when": "inSettingsEditor && settingsTocRowFocus"
	},
	{
		"key": "left",
		"command": "settings.action.focusTOC",
		"when": "inSettingsEditor && settingRowFocus"
	},
	{ "key": "shift+f9", "command": "settings.action.showContextMenu", "when": "inSettingsEditor" },
	{ "key": "ctrl+oem_1 ctrl+x", "command": "testing.cancelRun" },
	{ "key": "ctrl+oem_1 ctrl+a", "command": "testing.debugAll" },
	{ "key": "ctrl+oem_1 ctrl+c", "command": "testing.debugAtCursor", "when": "editorTextFocus" },
	{ "key": "ctrl+oem_1 ctrl+f", "command": "testing.debugCurrentFile", "when": "editorTextFocus" },
	{ "key": "ctrl+oem_1 ctrl+e", "command": "testing.debugFailTests" },
	{ "key": "ctrl+oem_1 ctrl+l", "command": "testing.debugLastRun" },
	{ "key": "ctrl+oem_1 ctrl+m", "command": "testing.openOutputPeek" },
	{ "key": "ctrl+oem_1 e", "command": "testing.reRunFailTests" },
	{ "key": "ctrl+oem_1 l", "command": "testing.reRunLastRun" },
	{ "key": "ctrl+oem_1 ctrl+r", "command": "testing.refreshTests", "when": "testing.canRefresh" },
	{ "key": "ctrl+oem_1 a", "command": "testing.runAll" },
	{ "key": "ctrl+oem_1 c", "command": "testing.runAtCursor", "when": "editorTextFocus" },
	{ "key": "ctrl+oem_1 f", "command": "testing.runCurrentFile", "when": "editorTextFocus" },
	{
		"key": "ctrl+oem_1 ctrl+o",
		"command": "testing.showMostRecentOutput",
		"when": "testing.hasAnyResults"
	},
	{ "key": "ctrl+oem_1 ctrl+i", "command": "testing.toggleInlineTestOutput" },
	{
		"key": "alt+h",
		"command": "testing.toggleTestingPeekHistory",
		"when": "testing.isPeekVisible"
	},
	{ "key": "alt+c", "command": "toggleSearchCaseSensitive", "when": "searchViewletFocus" },
	{
		"key": "alt+c",
		"command": "toggleSearchEditorCaseSensitive",
		"when": "inSearchEditor && searchInputBoxFocus"
	},
	{ "key": "alt+l", "command": "toggleSearchEditorContextLines", "when": "inSearchEditor" },
	{
		"key": "alt+r",
		"command": "toggleSearchEditorRegex",
		"when": "inSearchEditor && searchInputBoxFocus"
	},
	{
		"key": "alt+w",
		"command": "toggleSearchEditorWholeWord",
		"when": "inSearchEditor && searchInputBoxFocus"
	},
	{ "key": "alt+p", "command": "toggleSearchPreserveCase", "when": "searchViewletFocus" },
	{ "key": "alt+r", "command": "toggleSearchRegex", "when": "searchViewletFocus" },
	{ "key": "alt+w", "command": "toggleSearchWholeWord", "when": "searchViewletFocus" },
	{ "key": "ctrl+alt+win+n", "command": "welcome.showNewFileEntries" },
	{
		"key": "ctrl+l",
		"command": "workbench.action.chat.clear",
		"when": "hasChatProvider && inChat"
	},
	{
		"key": "ctrl+down",
		"command": "workbench.action.chat.focusInput",
		"when": "inChat && !editorFocus"
	},
	{
		"key": "f9",
		"command": "workbench.action.chat.nextCodeBlock",
		"when": "hasChatProvider && inChat"
	},
	{
		"key": "shift+f9",
		"command": "workbench.action.chat.previousCodeBlock",
		"when": "hasChatProvider && inChat"
	},
	{ "key": "ctrl+w", "command": "workbench.action.closeActiveEditor" },
	{ "key": "ctrl+f4", "command": "workbench.action.closeActiveEditor" },
	{ "key": "ctrl+k ctrl+w", "command": "workbench.action.closeAllEditors" },
	{ "key": "ctrl+k ctrl+shift+w", "command": "workbench.action.closeAllGroups" },
	{ "key": "ctrl+k w", "command": "workbench.action.closeEditorsInGroup" },
	{
		"key": "ctrl+k f",
		"command": "workbench.action.closeFolder",
		"when": "emptyWorkspaceSupport && workbenchState != 'empty'"
	},
	{
		"key": "ctrl+w",
		"command": "workbench.action.closeGroup",
		"when": "activeEditorGroupEmpty && multipleEditorGroups"
	},
	{
		"key": "ctrl+f4",
		"command": "workbench.action.closeGroup",
		"when": "activeEditorGroupEmpty && multipleEditorGroups"
	},
	{ "key": "shift+escape", "command": "workbench.action.closeQuickOpen", "when": "inQuickOpen" },
	{ "key": "escape", "command": "workbench.action.closeQuickOpen", "when": "inQuickOpen" },
	{ "key": "ctrl+k u", "command": "workbench.action.closeUnmodifiedEditors" },
	{ "key": "ctrl+shift+w", "command": "workbench.action.closeWindow" },
	{ "key": "alt+f4", "command": "workbench.action.closeWindow" },
	{
		"key": "alt+f5",
		"command": "workbench.action.compareEditor.nextChange",
		"when": "textCompareEditorVisible"
	},
	{
		"key": "ctrl+k shift+o",
		"command": "workbench.action.compareEditor.openSide",
		"when": "inDiffEditor"
	},
	{
		"key": "shift+alt+f5",
		"command": "workbench.action.compareEditor.previousChange",
		"when": "textCompareEditorVisible"
	},
	{
		"key": "shift+f5",
		"command": "workbench.action.debug.disconnect",
		"when": "focusedSessionIsAttach && inDebugMode"
	},
	{ "key": "ctrl+shift+f5", "command": "workbench.action.debug.restart", "when": "inDebugMode" },
	{
		"key": "ctrl+f5",
		"command": "workbench.action.debug.run",
		"when": "debuggersAvailable && debugState != 'initializing'"
	},
	{
		"key": "f5",
		"command": "workbench.action.debug.start",
		"when": "debuggersAvailable && debugState == 'inactive'"
	},
	{
		"key": "ctrl+f11",
		"command": "workbench.action.debug.stepIntoTarget",
		"when": "inDebugMode && stepIntoTargetsSupported && debugState == 'stopped'"
	},
	{
		"key": "shift+f11",
		"command": "workbench.action.debug.stepOut",
		"when": "debugState == 'stopped'"
	},
	{ "key": "f10", "command": "workbench.action.debug.stepOver", "when": "debugState == 'stopped'" },
	{
		"key": "shift+f5",
		"command": "workbench.action.debug.stop",
		"when": "inDebugMode && !focusedSessionIsAttach"
	},
	{
		"key": "ctrl+k m",
		"command": "workbench.action.editor.changeLanguageMode",
		"when": "!notebookEditorFocused"
	},
	{ "key": "ctrl+k p", "command": "workbench.action.files.copyPathOfActiveFile" },
	{ "key": "ctrl+n", "command": "workbench.action.files.newUntitledFile" },
	{ "key": "ctrl+o", "command": "workbench.action.files.openFile", "when": "true" },
	{
		"key": "ctrl+o",
		"command": "workbench.action.files.openFileFolder",
		"when": "isMacNative && openFolderWorkspaceSupport"
	},
	{
		"key": "ctrl+k ctrl+o",
		"command": "workbench.action.files.openFolder",
		"when": "openFolderWorkspaceSupport"
	},
	{
		"key": "ctrl+o",
		"command": "workbench.action.files.openFolderViaWorkspace",
		"when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
	},
	{
		"key": "ctrl+o",
		"command": "workbench.action.files.openLocalFile",
		"when": "remoteFileDialogVisible"
	},
	{
		"key": "ctrl+k ctrl+o",
		"command": "workbench.action.files.openLocalFolder",
		"when": "remoteFileDialogVisible"
	},
	{ "key": "ctrl+k r", "command": "workbench.action.files.revealActiveFileInWindows" },
	{ "key": "ctrl+s", "command": "workbench.action.files.save" },
	{ "key": "ctrl+shift+s", "command": "workbench.action.files.saveAs" },
	{
		"key": "ctrl+shift+s",
		"command": "workbench.action.files.saveLocalFile",
		"when": "remoteFileDialogVisible"
	},
	{ "key": "ctrl+k ctrl+shift+s", "command": "workbench.action.files.saveWithoutFormatting" },
	{
		"key": "ctrl+k o",
		"command": "workbench.action.files.showOpenedFileInNewWindow",
		"when": "emptyWorkspaceSupport"
	},
	{ "key": "ctrl+shift+f", "command": "workbench.action.findInFiles" },
	{ "key": "ctrl+k ctrl+up", "command": "workbench.action.focusAboveGroup" },
	{ "key": "ctrl+k ctrl+down", "command": "workbench.action.focusBelowGroup" },
	{ "key": "ctrl+8", "command": "workbench.action.focusEighthEditorGroup" },
	{ "key": "ctrl+5", "command": "workbench.action.focusFifthEditorGroup" },
	{ "key": "ctrl+1", "command": "workbench.action.focusFirstEditorGroup" },
	{ "key": "ctrl+4", "command": "workbench.action.focusFourthEditorGroup" },
	{ "key": "ctrl+k ctrl+left", "command": "workbench.action.focusLeftGroup" },
	{ "key": "f6", "command": "workbench.action.focusNextPart" },
	{ "key": "shift+f6", "command": "workbench.action.focusPreviousPart" },
	{ "key": "ctrl+k ctrl+right", "command": "workbench.action.focusRightGroup" },
	{ "key": "ctrl+2", "command": "workbench.action.focusSecondEditorGroup" },
	{ "key": "ctrl+7", "command": "workbench.action.focusSeventhEditorGroup" },
	{ "key": "ctrl+0", "command": "workbench.action.focusSideBar" },
	{ "key": "ctrl+6", "command": "workbench.action.focusSixthEditorGroup" },
	{ "key": "ctrl+3", "command": "workbench.action.focusThirdEditorGroup" },
	{ "key": "ctrl+g", "command": "workbench.action.gotoLine" },
	{ "key": "ctrl+shift+o", "command": "workbench.action.gotoSymbol" },
	{
		"key": "down",
		"command": "workbench.action.interactivePlayground.arrowDown",
		"when": "interactivePlaygroundFocus && !editorTextFocus"
	},
	{
		"key": "up",
		"command": "workbench.action.interactivePlayground.arrowUp",
		"when": "interactivePlaygroundFocus && !editorTextFocus"
	},
	{
		"key": "pagedown",
		"command": "workbench.action.interactivePlayground.pageDown",
		"when": "interactivePlaygroundFocus && !editorTextFocus"
	},
	{
		"key": "pageup",
		"command": "workbench.action.interactivePlayground.pageUp",
		"when": "interactivePlaygroundFocus && !editorTextFocus"
	},
	{
		"key": "ctrl+k ctrl+shift+oem_5",
		"command": "workbench.action.joinEditorInGroup",
		"when": "sideBySideEditorActive"
	},
	{ "key": "ctrl+k enter", "command": "workbench.action.keepEditor" },
	{ "key": "ctrl+k ctrl+r", "command": "workbench.action.keybindingsReference" },
	{ "key": "ctrl+9", "command": "workbench.action.lastEditorInGroup" },
	{ "key": "alt+0", "command": "workbench.action.lastEditorInGroup" },
	{ "key": "ctrl+k down", "command": "workbench.action.moveActiveEditorGroupDown" },
	{ "key": "ctrl+k left", "command": "workbench.action.moveActiveEditorGroupLeft" },
	{ "key": "ctrl+k right", "command": "workbench.action.moveActiveEditorGroupRight" },
	{ "key": "ctrl+k up", "command": "workbench.action.moveActiveEditorGroupUp" },
	{ "key": "ctrl+shift+pageup", "command": "workbench.action.moveEditorLeftInGroup" },
	{ "key": "ctrl+shift+pagedown", "command": "workbench.action.moveEditorRightInGroup" },
	{ "key": "shift+alt+1", "command": "workbench.action.moveEditorToFirstGroup" },
	{ "key": "shift+alt+9", "command": "workbench.action.moveEditorToLastGroup" },
	{ "key": "ctrl+alt+right", "command": "workbench.action.moveEditorToNextGroup" },
	{ "key": "ctrl+alt+left", "command": "workbench.action.moveEditorToPreviousGroup" },
	{ "key": "alt+left", "command": "workbench.action.navigateBack", "when": "canNavigateBack" },
	{
		"key": "alt+right",
		"command": "workbench.action.navigateForward",
		"when": "canNavigateForward"
	},
	{ "key": "ctrl+k ctrl+q", "command": "workbench.action.navigateToLastEditLocation" },
	{ "key": "ctrl+shift+n", "command": "workbench.action.newWindow" },
	{ "key": "ctrl+pagedown", "command": "workbench.action.nextEditor" },
	{ "key": "ctrl+k ctrl+pagedown", "command": "workbench.action.nextEditorInGroup" },
	{ "key": "alt+1", "command": "workbench.action.openEditorAtIndex1" },
	{ "key": "alt+2", "command": "workbench.action.openEditorAtIndex2" },
	{ "key": "alt+3", "command": "workbench.action.openEditorAtIndex3" },
	{ "key": "alt+4", "command": "workbench.action.openEditorAtIndex4" },
	{ "key": "alt+5", "command": "workbench.action.openEditorAtIndex5" },
	{ "key": "alt+6", "command": "workbench.action.openEditorAtIndex6" },
	{ "key": "alt+7", "command": "workbench.action.openEditorAtIndex7" },
	{ "key": "alt+8", "command": "workbench.action.openEditorAtIndex8" },
	{ "key": "alt+9", "command": "workbench.action.openEditorAtIndex9" },
	{ "key": "ctrl+k ctrl+s", "command": "workbench.action.openGlobalKeybindings" },
	{ "key": "ctrl+r", "command": "workbench.action.openRecent" },
	{ "key": "ctrl+oem_comma", "command": "workbench.action.openSettings" },
	{
		"key": "ctrl+shift+u",
		"command": "workbench.action.output.toggleOutput",
		"when": "workbench.panel.output.active"
	},
	{
		"key": "ctrl+k shift+enter",
		"command": "workbench.action.pinEditor",
		"when": "!activeEditorIsPinned"
	},
	{ "key": "ctrl+pageup", "command": "workbench.action.previousEditor" },
	{ "key": "ctrl+k ctrl+pageup", "command": "workbench.action.previousEditorInGroup" },
	{ "key": "ctrl+e", "command": "workbench.action.quickOpen" },
	{ "key": "ctrl+p", "command": "workbench.action.quickOpen" },
	{
		"key": "ctrl+shift+tab",
		"command": "workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
		"when": "!activeEditorGroupEmpty"
	},
	{
		"key": "ctrl+tab",
		"command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
		"when": "!activeEditorGroupEmpty"
	},
	{ "key": "ctrl+q", "command": "workbench.action.quickOpenView" },
	{ "key": "ctrl+alt+o", "command": "workbench.action.remote.showMenu" },
	{ "key": "ctrl+shift+t", "command": "workbench.action.reopenClosedEditor" },
	{ "key": "ctrl+shift+h", "command": "workbench.action.replaceInFiles" },
	{
		"key": "ctrl+shift+j",
		"command": "workbench.action.search.toggleQueryDetails",
		"when": "inSearchEditor || searchViewletFocus"
	},
	{ "key": "ctrl+k ctrl+t", "command": "workbench.action.selectTheme" },
	{ "key": "ctrl+k ctrl+p", "command": "workbench.action.showAllEditors" },
	{ "key": "ctrl+t", "command": "workbench.action.showAllSymbols" },
	{ "key": "f1", "command": "workbench.action.showCommands" },
	{ "key": "ctrl+shift+p", "command": "workbench.action.showCommands" },
	{
		"key": "ctrl+k ctrl+i",
		"command": "workbench.action.showTreeHover",
		"when": "customTreeView && listFocus && !inputFocus"
	},
	{ "key": "ctrl+oem_5", "command": "workbench.action.splitEditor" },
	{ "key": "ctrl+k ctrl+oem_5", "command": "workbench.action.splitEditorDown" },
	{
		"key": "ctrl+k ctrl+shift+oem_5",
		"command": "workbench.action.splitEditorInGroup",
		"when": "activeEditorCanSplitInGroup"
	},
	{ "key": "ctrl+k ctrl+oem_5", "command": "workbench.action.splitEditorLeft" },
	{ "key": "ctrl+k ctrl+oem_5", "command": "workbench.action.splitEditorOrthogonal" },
	{ "key": "ctrl+k ctrl+oem_5", "command": "workbench.action.splitEditorRight" },
	{ "key": "ctrl+k ctrl+oem_5", "command": "workbench.action.splitEditorUp" },
	{
		"key": "ctrl+shift+b",
		"command": "workbench.action.tasks.build",
		"when": "taskCommandsRegistered"
	},
	{
		"key": "escape",
		"command": "workbench.action.terminal.clearSelection",
		"when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected && !terminalFindVisible || terminalFocus && terminalProcessSupported && terminalTextSelected && !terminalFindVisible"
	},
	{
		"key": "ctrl+c",
		"command": "workbench.action.terminal.copyAndClearSelection",
		"when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
	},
	{
		"key": "ctrl+shift+c",
		"command": "workbench.action.terminal.copySelection",
		"when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
	},
	{
		"key": "f3",
		"command": "workbench.action.terminal.findNext",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "shift+enter",
		"command": "workbench.action.terminal.findNext",
		"when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
	},
	{
		"key": "shift+f3",
		"command": "workbench.action.terminal.findPrevious",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "enter",
		"command": "workbench.action.terminal.findPrevious",
		"when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
	},
	{
		"key": "shift+tab",
		"command": "workbench.action.terminal.focusAccessibleBuffer",
		"when": "accessibilityModeEnabled && terminalHasBeenCreated && terminalTabFocusMode && !terminalAccessibleBufferFocus || accessibilityModeEnabled && terminalProcessSupported && terminalTabFocusMode && !terminalAccessibleBufferFocus"
	},
	{
		"key": "ctrl+f",
		"command": "workbench.action.terminal.focusFind",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+k ctrl+i",
		"command": "workbench.action.terminal.focusHover",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
	},
	{
		"key": "ctrl+pagedown",
		"command": "workbench.action.terminal.focusNext",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
	},
	{
		"key": "alt+down",
		"command": "workbench.action.terminal.focusNextPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+right",
		"command": "workbench.action.terminal.focusNextPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+pageup",
		"command": "workbench.action.terminal.focusPrevious",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
	},
	{
		"key": "alt+up",
		"command": "workbench.action.terminal.focusPreviousPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+left",
		"command": "workbench.action.terminal.focusPreviousPane",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+shift+oem_5",
		"command": "workbench.action.terminal.focusTabs",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
	},
	{
		"key": "ctrl+g",
		"command": "workbench.action.terminal.goToRecentDirectory",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "shift+escape",
		"command": "workbench.action.terminal.hideFind",
		"when": "terminalFindVisible && terminalFocus && terminalHasBeenCreated || terminalFindVisible && terminalFocus && terminalProcessSupported"
	},
	{
		"key": "escape",
		"command": "workbench.action.terminal.hideFind",
		"when": "terminalFindVisible && terminalFocus && terminalHasBeenCreated || terminalFindVisible && terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+w",
		"command": "workbench.action.terminal.killEditor",
		"when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
	},
	{
		"key": "ctrl+f4",
		"command": "workbench.action.terminal.killEditor",
		"when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
	},
	{
		"key": "delete",
		"command": "workbench.action.terminal.killInstance",
		"when": "terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
	},
	{
		"key": "ctrl+shift+oem_3",
		"command": "workbench.action.terminal.new",
		"when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
	},
	{
		"key": "ctrl+shift+c",
		"command": "workbench.action.terminal.openNativeConsole",
		"when": "!terminalFocus"
	},
	{
		"key": "ctrl+shift+v",
		"command": "workbench.action.terminal.paste",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+v",
		"command": "workbench.action.terminal.paste",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "f2",
		"command": "workbench.action.terminal.renameInstance",
		"when": "terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection"
	},
	{
		"key": "ctrl+r",
		"command": "workbench.action.terminal.runRecentCommand",
		"when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+alt+r",
		"command": "workbench.action.terminal.runRecentCommand",
		"when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
	},
	{
		"key": "ctrl+alt+pagedown",
		"command": "workbench.action.terminal.scrollDown",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "shift+pagedown",
		"command": "workbench.action.terminal.scrollDownPage",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "ctrl+end",
		"command": "workbench.action.terminal.scrollToBottom",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "ctrl+down",
		"command": "workbench.action.terminal.scrollToNextCommand",
		"when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
	},
	{
		"key": "ctrl+up",
		"command": "workbench.action.terminal.scrollToPreviousCommand",
		"when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
	},
	{
		"key": "ctrl+home",
		"command": "workbench.action.terminal.scrollToTop",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "ctrl+alt+pageup",
		"command": "workbench.action.terminal.scrollUp",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "shift+pageup",
		"command": "workbench.action.terminal.scrollUpPage",
		"when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
	},
	{
		"key": "ctrl+shift+down",
		"command": "workbench.action.terminal.selectToNextCommand",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+shift+up",
		"command": "workbench.action.terminal.selectToPreviousCommand",
		"when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+v",
		"command": "workbench.action.terminal.sendSequence",
		"when": "terminalFocus && !accessibilityModeEnabled && terminalShellType == 'pwsh'",
		"args": { "text": "\u0016" }
	},
	{
		"key": "ctrl+space",
		"command": "workbench.action.terminal.sendSequence",
		"when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'",
		"args": { "text": "\u001b[24~a" }
	},
	{
		"key": "alt+space",
		"command": "workbench.action.terminal.sendSequence",
		"when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'",
		"args": { "text": "\u001b[24~b" }
	},
	{
		"key": "shift+enter",
		"command": "workbench.action.terminal.sendSequence",
		"when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'",
		"args": { "text": "\u001b[24~c" }
	},
	{
		"key": "ctrl+space",
		"command": "workbench.action.terminal.sendSequence",
		"when": "config.terminal.integrated.shellIntegration.suggestEnabled && terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'",
		"args": { "text": "\u001b[24~e" }
	},
	{
		"key": "ctrl+alt+r",
		"command": "workbench.action.terminal.sendSequence",
		"when": "accessibilityModeEnabled && terminalFocus",
		"args": { "text": "\u0012" }
	},
	{
		"key": "ctrl+alt+g",
		"command": "workbench.action.terminal.sendSequence",
		"when": "terminalFocus",
		"args": { "text": "\u0007" }
	},
	{
		"key": "ctrl+backspace",
		"command": "workbench.action.terminal.sendSequence",
		"when": "terminalFocus",
		"args": { "text": "\u0017" }
	},
	{
		"key": "ctrl+backspace",
		"command": "workbench.action.terminal.sendSequence",
		"when": "terminalFocus && terminalShellType == 'cmd'",
		"args": { "text": "\b" }
	},
	{
		"key": "ctrl+delete",
		"command": "workbench.action.terminal.sendSequence",
		"when": "terminalFocus",
		"args": { "text": "\u001bd" }
	},
	{
		"key": "ctrl+shift+2",
		"command": "workbench.action.terminal.sendSequence",
		"when": "terminalFocus",
		"args": { "text": "\u0000" }
	},
	{
		"key": "ctrl+shift+6",
		"command": "workbench.action.terminal.sendSequence",
		"when": "terminalFocus",
		"args": { "text": "\u001e" }
	},
	{
		"key": "ctrl+oem_2",
		"command": "workbench.action.terminal.sendSequence",
		"when": "terminalFocus",
		"args": { "text": "\u001f" }
	},
	{
		"key": "alt+f1",
		"command": "workbench.action.terminal.showAccessibilityHelp",
		"when": "terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+oem_period",
		"command": "workbench.action.terminal.showQuickFixes",
		"when": "terminalFocus"
	},
	{
		"key": "alt+z",
		"command": "workbench.action.terminal.sizeToContentWidth",
		"when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported"
	},
	{
		"key": "ctrl+shift+5",
		"command": "workbench.action.terminal.split",
		"when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
	},
	{
		"key": "ctrl+shift+5",
		"command": "workbench.action.terminal.splitInstance",
		"when": "terminalProcessSupported && terminalTabsFocus"
	},
	{
		"key": "alt+c",
		"command": "workbench.action.terminal.toggleFindCaseSensitive",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+r",
		"command": "workbench.action.terminal.toggleFindRegex",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "alt+w",
		"command": "workbench.action.terminal.toggleFindWholeWord",
		"when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+oem_3",
		"command": "workbench.action.terminal.toggleTerminal",
		"when": "terminal.active"
	},
	{ "key": "ctrl+alt+b", "command": "workbench.action.toggleAuxiliaryBar" },
	{ "key": "shift+alt+0", "command": "workbench.action.toggleEditorGroupLayout" },
	{ "key": "f11", "command": "workbench.action.toggleFullScreen", "when": "!isIOS" },
	{ "key": "ctrl+j", "command": "workbench.action.togglePanel" },
	{ "key": "ctrl+b", "command": "workbench.action.toggleSidebarVisibility" },
	{ "key": "ctrl+k z", "command": "workbench.action.toggleZenMode" },
	{
		"key": "ctrl+k shift+enter",
		"command": "workbench.action.unpinEditor",
		"when": "activeEditorIsPinned"
	},
	{ "key": "ctrl+numpad_add", "command": "workbench.action.zoomIn" },
	{ "key": "ctrl+shift+oem_plus", "command": "workbench.action.zoomIn" },
	{ "key": "ctrl+oem_plus", "command": "workbench.action.zoomIn" },
	{ "key": "ctrl+numpad_subtract", "command": "workbench.action.zoomOut" },
	{ "key": "ctrl+shift+oem_minus", "command": "workbench.action.zoomOut" },
	{ "key": "ctrl+oem_minus", "command": "workbench.action.zoomOut" },
	{ "key": "ctrl+numpad0", "command": "workbench.action.zoomReset" },
	{
		"key": "ctrl+shift+m",
		"command": "workbench.actions.view.problems",
		"when": "workbench.panel.markers.view.active"
	},
	{ "key": "escape", "command": "workbench.banner.focusBanner", "when": "bannerFocused" },
	{ "key": "down", "command": "workbench.banner.focusNextAction", "when": "bannerFocused" },
	{ "key": "right", "command": "workbench.banner.focusNextAction", "when": "bannerFocused" },
	{ "key": "up", "command": "workbench.banner.focusPreviousAction", "when": "bannerFocused" },
	{ "key": "left", "command": "workbench.banner.focusPreviousAction", "when": "bannerFocused" },
	{
		"key": "ctrl+shift+y",
		"command": "workbench.debug.action.toggleRepl",
		"when": "workbench.panel.repl.view.active"
	},
	{ "key": "ctrl+k c", "command": "workbench.files.action.compareWithClipboard" },
	{ "key": "ctrl+k d", "command": "workbench.files.action.compareWithSaved" },
	{
		"key": "ctrl+k e",
		"command": "workbench.files.action.focusOpenEditorsView",
		"when": "workbench.explorer.openEditorsView.active"
	},
	{ "key": "escape", "command": "workbench.statusBar.clearFocus", "when": "statusBarFocused" },
	{ "key": "home", "command": "workbench.statusBar.focusFirst", "when": "statusBarFocused" },
	{ "key": "end", "command": "workbench.statusBar.focusLast", "when": "statusBarFocused" },
	{ "key": "down", "command": "workbench.statusBar.focusNext", "when": "statusBarFocused" },
	{ "key": "right", "command": "workbench.statusBar.focusNext", "when": "statusBarFocused" },
	{ "key": "up", "command": "workbench.statusBar.focusPrevious", "when": "statusBarFocused" },
	{ "key": "left", "command": "workbench.statusBar.focusPrevious", "when": "statusBarFocused" },
	{
		"key": "ctrl+shift+d",
		"command": "workbench.view.debug",
		"when": "viewContainer.workbench.view.debug.enabled"
	},
	{
		"key": "ctrl+shift+e",
		"command": "workbench.view.explorer",
		"when": "viewContainer.workbench.view.explorer.enabled"
	},
	{
		"key": "ctrl+shift+x",
		"command": "workbench.view.extensions",
		"when": "viewContainer.workbench.view.extensions.enabled"
	},
	{ "key": "ctrl+shift+g", "command": "workbench.view.scm", "when": "workbench.scm.active" },
	{
		"key": "ctrl+shift+f",
		"command": "workbench.view.search",
		"when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
	},
	{
		"key": "ctrl+right",
		"command": "breadcrumbs.focusNextWithPicker",
		"when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
	},
	{
		"key": "ctrl+left",
		"command": "breadcrumbs.focusPreviousWithPicker",
		"when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
	},
	{
		"key": "escape",
		"command": "breadcrumbs.selectEditor",
		"when": "breadcrumbsActive && breadcrumbsVisible"
	},
	{ "key": "ctrl+k down", "command": "views.moveViewDown", "when": "focusedView != ''" },
	{ "key": "ctrl+k left", "command": "views.moveViewLeft", "when": "focusedView != ''" },
	{ "key": "ctrl+k right", "command": "views.moveViewRight", "when": "focusedView != ''" },
	{ "key": "ctrl+k up", "command": "views.moveViewUp", "when": "focusedView != ''" },
	{
		"key": "ctrl+pagedown",
		"command": "workbench.action.debug.nextConsole",
		"when": "inDebugRepl"
	},
	{ "key": "ctrl+pageup", "command": "workbench.action.debug.prevConsole", "when": "inDebugRepl" },
	{
		"key": "tab",
		"command": "workbench.action.terminal.acceptSelectedSuggestion",
		"when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
	},
	{
		"key": "enter",
		"command": "workbench.action.terminal.acceptSelectedSuggestion",
		"when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
	},
	{
		"key": "escape",
		"command": "workbench.action.terminal.hideSuggestWidget",
		"when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
	},
	{
		"key": "ctrl+shift+o",
		"command": "workbench.action.terminal.openDetectedLink",
		"when": "terminalFocus && terminalHasBeenCreated"
	},
	{
		"key": "pagedown",
		"command": "workbench.action.terminal.selectNextPageSuggestion",
		"when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
	},
	{
		"key": "down",
		"command": "workbench.action.terminal.selectNextSuggestion",
		"when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
	},
	{
		"key": "pageup",
		"command": "workbench.action.terminal.selectPrevPageSuggestion",
		"when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
	},
	{
		"key": "up",
		"command": "workbench.action.terminal.selectPrevSuggestion",
		"when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
	},
	{ "key": "f6", "command": "workbench.action.debug.pause", "when": "debugState == 'running'" },
	{
		"key": "ctrl+down",
		"command": "workbench.action.terminal.accessibleBufferGoToNextCommand",
		"when": "terminalAccessibleBufferFocus || terminalAccessibleBufferFocus && terminalHasBeenCreated || terminalAccessibleBufferFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+up",
		"command": "workbench.action.terminal.accessibleBufferGoToPreviousCommand",
		"when": "terminalAccessibleBufferFocus && terminalHasBeenCreated || terminalAccessibleBufferFocus && terminalProcessSupported"
	},
	{
		"key": "ctrl+shift+o",
		"command": "workbench.action.terminal.navigateAccessibleBuffer",
		"when": "terminalAccessibleBufferFocus && terminalHasBeenCreated || terminalAccessibleBufferFocus && terminalProcessSupported"
	},
	{ "key": "f2", "command": "debug.renameWatchExpression", "when": "watchExpressionsFocused" },
	{ "key": "f2", "command": "debug.setVariable", "when": "variablesFocused" },
	{
		"key": "space",
		"command": "debug.toggleBreakpoint",
		"when": "breakpointsFocused && !inputFocus"
	},
	{
		"key": "escape",
		"command": "notebook.cell.quitEdit",
		"when": "notebookEditorFocused && notebookOutputFocused"
	},
	{
		"key": "shift+delete",
		"command": "deleteFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "delete",
		"command": "deleteFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "escape",
		"command": "editor.closeCallHierarchy",
		"when": "callHierarchyVisible && !config.editor.stablePeek"
	},
	{
		"key": "escape",
		"command": "editor.closeTypeHierarchy",
		"when": "typeHierarchyVisible && !config.editor.stablePeek"
	},
	{
		"key": "enter",
		"command": "explorer.openAndPassFocus",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
	},
	{
		"key": "escape",
		"command": "filesExplorer.cancelCut",
		"when": "explorerResourceCut && filesExplorerFocus && foldersViewVisible && !inputFocus"
	},
	{
		"key": "ctrl+c",
		"command": "filesExplorer.copy",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus"
	},
	{
		"key": "ctrl+x",
		"command": "filesExplorer.cut",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "space",
		"command": "filesExplorer.openFilePreserveFocus",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
	},
	{
		"key": "ctrl+v",
		"command": "filesExplorer.paste",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "home",
		"command": "firstCompressedFolder",
		"when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus"
	},
	{
		"key": "end",
		"command": "lastCompressedFolder",
		"when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus"
	},
	{
		"key": "delete",
		"command": "moveFileToTrash",
		"when": "explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
	},
	{
		"key": "right",
		"command": "nextCompressedFolder",
		"when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus"
	},
	{
		"key": "left",
		"command": "previousCompressedFolder",
		"when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus"
	},
	{
		"key": "delete",
		"command": "remote.tunnel.closeInline",
		"when": "tunnelCloseable && tunnelViewFocus"
	},
	{
		"key": "ctrl+c",
		"command": "remote.tunnel.copyAddressInline",
		"when": "tunnelViewFocus && tunnelType == 'Detected' && tunnelViewMultiSelection == 'undefined' || tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
	},
	{
		"key": "f2",
		"command": "remote.tunnel.label",
		"when": "tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
	},
	{
		"key": "f2",
		"command": "renameFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{ "key": "f5", "command": "workbench.action.debug.continue", "when": "debugState == 'stopped'" },
	{
		"key": "f11",
		"command": "workbench.action.debug.stepInto",
		"when": "debugState != 'inactive'"
	},
	{
		"key": "shift+escape",
		"command": "closeReferenceSearch",
		"when": "referenceSearchVisible && !config.editor.stablePeek"
	},
	{
		"key": "escape",
		"command": "closeReferenceSearch",
		"when": "referenceSearchVisible && !config.editor.stablePeek"
	},
	{ "key": "escape", "command": "notifications.hideList", "when": "notificationCenterVisible" },
	{ "key": "alt+left", "command": "workbench.action.quickInputBack", "when": "inQuickOpen" },
	{
		"key": "ctrl+tab",
		"command": "workbench.action.quickOpenNavigateNextInEditorPicker",
		"when": "inEditorsPicker && inQuickOpen"
	},
	{
		"key": "ctrl+e",
		"command": "workbench.action.quickOpenNavigateNextInFilePicker",
		"when": "inFilesPicker && inQuickOpen"
	},
	{
		"key": "ctrl+p",
		"command": "workbench.action.quickOpenNavigateNextInFilePicker",
		"when": "inFilesPicker && inQuickOpen"
	},
	{
		"key": "ctrl+r",
		"command": "workbench.action.quickOpenNavigateNextInRecentFilesPicker",
		"when": "inQuickOpen && inRecentFilesPicker"
	},
	{
		"key": "ctrl+q",
		"command": "workbench.action.quickOpenNavigateNextInViewPicker",
		"when": "inQuickOpen && inViewsPicker"
	},
	{
		"key": "ctrl+shift+tab",
		"command": "workbench.action.quickOpenNavigatePreviousInEditorPicker",
		"when": "inEditorsPicker && inQuickOpen"
	},
	{
		"key": "ctrl+shift+e",
		"command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
		"when": "inFilesPicker && inQuickOpen"
	},
	{
		"key": "ctrl+shift+p",
		"command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
		"when": "inFilesPicker && inQuickOpen"
	},
	{
		"key": "ctrl+shift+r",
		"command": "workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
		"when": "inQuickOpen && inRecentFilesPicker"
	},
	{
		"key": "ctrl+shift+q",
		"command": "workbench.action.quickOpenNavigatePreviousInViewPicker",
		"when": "inQuickOpen && inViewsPicker"
	},
	{ "key": "ctrl+r", "command": "workbench.action.reloadWindow", "when": "isDevelopment" },
	{
		"key": "ctrl+shift+f",
		"command": "workbench.action.terminal.searchWorkspace",
		"when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
	},
	{ "key": "ctrl+shift+i", "command": "workbench.action.toggleDevTools", "when": "isDevelopment" },
	{
		"key": "escape",
		"command": "notifications.hideToasts",
		"when": "notificationFocus && notificationToastsVisible"
	},
	{
		"key": "f10",
		"command": "extension.node-debug.startWithStopOnEntry",
		"when": "!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node'"
	},
	{
		"key": "ctrl+k ctrl+alt+s",
		"command": "git.stageSelectedRanges",
		"when": "isInDiffEditor && !operationInProgress"
	},
	{
		"key": "ctrl+shift+v",
		"command": "markdown.showPreview",
		"when": "!notebookEditorFocused && editorLangId == 'markdown'"
	},
	{
		"key": "shift+alt+f12",
		"command": "references-view.findReferences",
		"when": "editorHasReferenceProvider"
	},
	{
		"key": "f11",
		"command": "extension.node-debug.startWithStopOnEntry",
		"when": "!inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'node' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-node'"
	},
	{
		"key": "ctrl+k ctrl+n",
		"command": "git.unstageSelectedRanges",
		"when": "isInDiffEditor && !operationInProgress"
	},
	{
		"key": "ctrl+k v",
		"command": "markdown.showPreviewToSide",
		"when": "!notebookEditorFocused && editorLangId == 'markdown'"
	},
	{
		"key": "f4",
		"command": "references-view.next",
		"when": "reference-list.hasResult && references-view.canNavigate"
	},
	{
		"key": "ctrl+k ctrl+r",
		"command": "git.revertSelectedRanges",
		"when": "isInDiffEditor && !operationInProgress"
	},
	{
		"key": "shift+f4",
		"command": "references-view.prev",
		"when": "reference-list.hasResult && references-view.canNavigate"
	},
	{
		"key": "shift+alt+h",
		"command": "references-view.showCallHierarchy",
		"when": "editorHasCallHierarchyProvider"
	},
	{ "key": "ctrl+alt+k", "command": "bookmarks.toggle", "when": "editorTextFocus" },
	{ "key": "ctrl+alt+n", "command": "code-runner.run" },
	{
		"key": "ctrl+left",
		"command": "codetour.previousTourStep",
		"when": "codetour:inTour && !terminalFocus && !textInputFocus"
	},
	{ "key": "ctrl+alt+i", "command": "emojisense.quickEmojiTerminal", "when": "terminalFocus" },
	{
		"key": "ctrl+z",
		"command": "excalidraw.preventDefault",
		"when": "activeCustomEditorId == 'editor.excalidraw'"
	},
	{
		"key": "escape",
		"command": "extension.aceJump.input.stop",
		"when": "aceJumpInput && editorTextFocus"
	},
	{
		"key": "ctrl+backspace",
		"command": "extension.hungryDelete",
		"when": "editorTextFocus && !editorReadonly"
	},
	{ "key": "ctrl+alt+i", "command": "extension.incrementSelection", "when": "editorTextFocus" },
	{ "key": "alt+l alt+c", "command": "extension.liveServer.goOffline", "when": "editorTextFocus" },
	{ "key": "left", "command": "gitlens.key.left", "when": "gitlens:key:left" },
	{ "key": "ctrl+up", "command": "incrementor.incrementByOne" },
	{ "key": "ctrl+shift+space", "command": "issue.suggestRefresh", "when": "suggestWidgetVisible" },
	{
		"key": "alt+q alt+q",
		"command": "jump-extension.jump-to-the-start-of-a-word",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+alt+f",
		"command": "liveshare.follow",
		"when": "liveshare:hasCollaborators && !liveshare:isFollowing"
	},
	{ "key": "ctrl+alt+s", "command": "mdb.runSelectedPlaygroundBlocks", "when": "mdb.isPlayground" },
	{ "key": "alt+l", "command": "outline-map.focusOutline" },
	{ "key": "alt+q", "command": "select-quotes" },
	{
		"key": "tab",
		"command": "tabout",
		"when": "editorTextFocus && !editorHasMultipleSelections && !inSnippetMode && !inlineSuggestionVisible && !suggestWidgetVisible"
	},
	{
		"key": "ctrl+enter",
		"command": "todo.toggleBox",
		"when": "editorTextFocus && editorLangId == 'todo'"
	},
	{ "key": "ctrl+shift+r", "command": "workbench.view.extension.thunder-client" },
	{ "key": "ctrl+alt+l", "command": "bookmarks.jumpToNext", "when": "editorTextFocus" },
	{ "key": "ctrl+alt+k", "command": "code-runner.runCustomCommand" },
	{
		"key": "ctrl+right",
		"command": "codetour.nextTourStep",
		"when": "codetour:inTour && !terminalFocus && !textInputFocus"
	},
	{
		"key": "ctrl+shift+alt+i",
		"command": "emojisense.quickEmojitextTerminal",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+y",
		"command": "excalidraw.preventDefault",
		"when": "activeCustomEditorId == 'editor.excalidraw'"
	},
	{ "key": "alt+l alt+o", "command": "extension.liveServer.goOnline", "when": "editorTextFocus" },
	{
		"key": "backspace",
		"command": "extension.smartBackspace",
		"when": "config.hungryDelete.enableSmartBackspace && editorTextFocus && !editorReadonly"
	},
	{ "key": "alt+left", "command": "gitlens.key.alt+left", "when": "gitlens:key:alt+left" },
	{ "key": "ctrl+down", "command": "incrementor.decrementByOne" },
	{
		"key": "ctrl+s",
		"command": "issue.createIssueFromFile",
		"when": "!issues.creatingFromFile && resourceScheme == 'newIssue' && config.files.autoSave != 'off'"
	},
	{
		"key": "alt+q alt+w",
		"command": "jump-extension.jump-to-the-end-of-a-word",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+alt+oem_2",
		"command": "liveshare.followToTheSide",
		"when": "liveshare:hasCollaborators"
	},
	{ "key": "ctrl+alt+r", "command": "mdb.runAllPlaygroundBlocks", "when": "mdb.isPlayground" },
	{
		"key": "shift+tab",
		"command": "tabin",
		"when": "editorTextFocus && !editorHasMultipleSelections && !inSnippetMode && !inlineSuggestionVisible && !suggestWidgetVisible"
	},
	{
		"key": "ctrl+u",
		"command": "thunder-client.import-curl",
		"when": "activeWebviewPanelId == 'tc.env-view' || activeWebviewPanelId == 'tc.request-view'"
	},
	{
		"key": "alt+enter",
		"command": "todo.toggleBox",
		"when": "editorTextFocus && editorLangId == 'todo'"
	},
	{ "key": "ctrl+alt+j", "command": "bookmarks.jumpToPrevious", "when": "editorTextFocus" },
	{ "key": "ctrl+alt+j", "command": "code-runner.runByLanguage" },
	{
		"key": "ctrl+down ctrl+down",
		"command": "codetour.endTour",
		"when": "codetour:inTour && !terminalFocus && !textInputFocus"
	},
	{ "key": "ctrl+i", "command": "emojisense.quickEmoji", "when": "editorTextFocus" },
	{ "key": "ctrl+left", "command": "gitlens.key.ctrl+left", "when": "gitlens:key:ctrl+left" },
	{ "key": "ctrl+shift+alt+up", "command": "incrementor.incrementByTenth" },
	{
		"key": "alt+q alt+e",
		"command": "jump-extension.select-to-the-start-of-a-word",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+alt+f",
		"command": "liveshare.unfollow",
		"when": "liveshare:hasCollaborators && liveshare:isFollowing"
	},
	{
		"key": "ctrl+s",
		"command": "mdb.saveMongoDBDocument",
		"when": "resourceScheme == 'VIEW_DOCUMENT_SCHEME'"
	},
	{
		"key": "ctrl+e",
		"command": "thunder-client.change-env",
		"when": "activeWebviewPanelId == 'tc.env-view' || activeWebviewPanelId == 'tc.request-view' || activeWebviewPanelId == 'tc.runcol-view'"
	},
	{
		"key": "alt+d",
		"command": "todo.toggleDone",
		"when": "editorTextFocus && editorLangId == 'todo'"
	},
	{ "key": "shift+alt+k", "command": "bookmarks.shrinkSelection", "when": "editorTextFocus" },
	{ "key": "ctrl+alt+m", "command": "code-runner.stop" },
	{
		"key": "ctrl+up ctrl+up",
		"command": "codetour.startTour",
		"when": "!terminalFocus && !textInputFocus"
	},
	{ "key": "ctrl+shift+i", "command": "emojisense.quickEmojitext", "when": "editorTextFocus" },
	{ "key": "right", "command": "gitlens.key.right", "when": "gitlens:key:right" },
	{ "key": "ctrl+shift+alt+down", "command": "incrementor.decrementByTenth" },
	{
		"key": "alt+q alt+r",
		"command": "jump-extension.select-to-the-end-of-a-word",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+alt+j",
		"command": "liveshare.join",
		"when": "liveshare:state != 'Joined' && liveshare:state != 'Shared'"
	},
	{
		"key": "alt+c",
		"command": "todo.toggleCancelled",
		"when": "editorTextFocus && editorLangId == 'todo'"
	},
	{ "key": "shift+alt+l", "command": "bookmarks.expandSelectionToNext", "when": "editorTextFocus" },
	{ "key": "alt+right", "command": "gitlens.key.alt+right", "when": "gitlens:key:alt+right" },
	{ "key": "ctrl+shift+up", "command": "incrementor.incrementByTen" },
	{
		"key": "escape",
		"command": "jump-extension.exit",
		"when": "editorTextFocus && jump.isInJumpMode"
	},
	{
		"key": "alt+s",
		"command": "todo.toggleStart",
		"when": "editorTextFocus && editorLangId == 'todo'"
	},
	{
		"key": "shift+alt+j",
		"command": "bookmarks.expandSelectionToPrevious",
		"when": "editorTextFocus"
	},
	{ "key": "ctrl+right", "command": "gitlens.key.ctrl+right", "when": "gitlens:key:ctrl+right" },
	{ "key": "ctrl+shift+down", "command": "incrementor.decrementByTen" },
	{
		"key": "space",
		"command": "jump-extension.exit",
		"when": "editorTextFocus && jump.isInJumpMode"
	},
	{
		"key": "ctrl+shift+a",
		"command": "todo.archive",
		"when": "editorTextFocus && editorLangId == 'todo'"
	},
	{ "key": "alt+oem_comma", "command": "gitlens.key.alt+,", "when": "gitlens:key:," },
	{
		"key": "enter",
		"command": "jump-extension.exit",
		"when": "editorTextFocus && jump.isInJumpMode"
	},
	{ "key": "alt+oem_period", "command": "gitlens.key.alt+.", "when": "gitlens:key:." },
	{
		"key": "escape",
		"command": "gitlens.key.escape",
		"when": "editorTextFocus && gitlens:key:escape && !findWidgetVisible && !isInEmbeddedEditor && !renameInputVisible && !suggestWidgetVisible"
	},
	{
		"key": "alt+oem_2",
		"command": "gitlens.gitCommands",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "ctrl+shift+g oem_2",
		"command": "gitlens.gitCommands",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "alt+b",
		"command": "gitlens.toggleFileBlame",
		"when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/"
	},
	{
		"key": "ctrl+shift+g b",
		"command": "gitlens.toggleFileBlame",
		"when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /blameable/"
	},
	{
		"key": "shift+alt+b",
		"command": "gitlens.toggleCodeLens",
		"when": "editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "ctrl+shift+g shift+b",
		"command": "gitlens.toggleCodeLens",
		"when": "editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "alt+h",
		"command": "gitlens.showQuickFileHistory",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "ctrl+shift+g h",
		"command": "gitlens.showQuickFileHistory",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "shift+alt+h",
		"command": "gitlens.showQuickRepoHistory",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "ctrl+shift+g shift+h",
		"command": "gitlens.showQuickRepoHistory",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "alt+s",
		"command": "gitlens.showQuickRepoStatus",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "ctrl+shift+g s",
		"command": "gitlens.showQuickRepoStatus",
		"when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "alt+c",
		"command": "gitlens.showQuickCommitFileDetails",
		"when": "editorTextFocus && !gitlens:disabled && config.gitlens.keymap == 'alternate'"
	},
	{
		"key": "ctrl+shift+g c",
		"command": "gitlens.showQuickCommitFileDetails",
		"when": "editorTextFocus && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "alt+oem_comma",
		"command": "gitlens.diffWithPrevious",
		"when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "ctrl+shift+g oem_comma",
		"command": "gitlens.diffWithPrevious",
		"when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "alt+oem_comma",
		"command": "gitlens.diffWithPreviousInDiffLeft",
		"when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "ctrl+shift+g oem_comma",
		"command": "gitlens.diffWithPreviousInDiffLeft",
		"when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "alt+oem_comma",
		"command": "gitlens.diffWithPreviousInDiffRight",
		"when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "ctrl+shift+g oem_comma",
		"command": "gitlens.diffWithPreviousInDiffRight",
		"when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "alt+oem_period",
		"command": "gitlens.diffWithNext",
		"when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "ctrl+shift+g oem_period",
		"command": "gitlens.diffWithNext",
		"when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "alt+oem_period",
		"command": "gitlens.diffWithNextInDiffLeft",
		"when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "ctrl+shift+g oem_period",
		"command": "gitlens.diffWithNextInDiffLeft",
		"when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "alt+oem_period",
		"command": "gitlens.diffWithNextInDiffRight",
		"when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "ctrl+shift+g oem_period",
		"command": "gitlens.diffWithNextInDiffRight",
		"when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "shift+alt+oem_period",
		"command": "gitlens.diffWithWorking",
		"when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "ctrl+shift+g shift+oem_period",
		"command": "gitlens.diffWithWorking",
		"when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /revision/"
	},
	{
		"key": "shift+alt+oem_comma",
		"command": "gitlens.diffLineWithPrevious",
		"when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "ctrl+shift+g shift+oem_comma",
		"command": "gitlens.diffLineWithPrevious",
		"when": "editorTextFocus && config.gitlens.keymap == 'chorded' && gitlens:activeFileStatus =~ /tracked/"
	},
	{
		"key": "ctrl+shift+g g",
		"command": "workbench.view.scm",
		"when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
	},
	{
		"key": "ctrl+c",
		"command": "gitlens.views.branches.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.branches/"
	},
	{
		"key": "ctrl+c",
		"command": "gitlens.views.commits.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.commits/"
	},
	{
		"key": "ctrl+c",
		"command": "gitlens.views.contributors.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.contributors/"
	},
	{
		"key": "ctrl+c",
		"command": "gitlens.views.fileHistory.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.fileHistory/"
	},
	{
		"key": "ctrl+c",
		"command": "gitlens.views.lineHistory.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.lineHistory/"
	},
	{
		"key": "ctrl+c",
		"command": "gitlens.views.remotes.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.remotes/"
	},
	{
		"key": "ctrl+c",
		"command": "gitlens.views.repositories.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.repositories/"
	},
	{
		"key": "ctrl+c",
		"command": "gitlens.views.stashes.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.stashes/"
	},
	{
		"key": "ctrl+c",
		"command": "gitlens.views.searchAndCompare.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.searchAndCompare\\b/"
	},
	{
		"key": "ctrl+c",
		"command": "gitlens.views.tags.copy",
		"when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.tags/"
	},
	{
		"key": "ctrl+oem_period",
		"command": "acceptSelectedCodeAction",
		"when": "codeActionMenuVisible"
	},
	{ "key": "enter", "command": "acceptSelectedCodeAction", "when": "codeActionMenuVisible" },
	{ "key": "shift+escape", "command": "hideCodeActionWidget", "when": "codeActionMenuVisible" },
	{ "key": "escape", "command": "hideCodeActionWidget", "when": "codeActionMenuVisible" },
	{ "key": "ctrl+enter", "command": "previewSelectedCodeAction", "when": "codeActionMenuVisible" },
	{ "key": "ctrl+down", "command": "selectNextCodeAction", "when": "codeActionMenuVisible" },
	{ "key": "down", "command": "selectNextCodeAction", "when": "codeActionMenuVisible" },
	{ "key": "ctrl+up", "command": "selectPrevCodeAction", "when": "codeActionMenuVisible" },
	{ "key": "up", "command": "selectPrevCodeAction", "when": "codeActionMenuVisible" }
]

// Here are other available commands:
// - Infer function return type
// - acceptSelectedSuggestionOnEnter
// - acceptSnippet
// - actions.findWithSelection
// - addRootFolder
// - antfu.file-nesting.manualUpdate
// - audioCues.help
// - bookmarks.clear
// - bookmarks.clearFromAllFiles
// - bookmarks.list
// - bookmarks.listFromAllFiles
// - bookmarks.openSettings
// - bookmarks.refresh
// - bookmarks.selectLines
// - bookmarks.supportBookmarks
// - bookmarks.toggleLabeled
// - bookmarks.whatsNew
// - bookmarksExplorer.focus
// - bookmarksExplorer.removeView
// - bookmarksExplorer.resetViewLocation
// - bookmarksExplorer.toggleVisibility
// - bookmarksHelpAndFeedback.focus
// - bookmarksHelpAndFeedback.openHelpLink
// - bookmarksHelpAndFeedback.removeView
// - bookmarksHelpAndFeedback.resetViewLocation
// - bookmarksHelpAndFeedback.toggleVisibility
// - breadcrumbs.toggle
// - breadcrumbs.toggleFromEditorTitle
// - callStack.collapse
// - changeEditorIndentation
// - cleanSearchEditorState
// - closeReferenceSearchEditor
// - codelens.showLensesInCurrentLine
// - codetour._startTourById
// - codetour.addContentStep
// - codetour.addDirectoryStep
// - codetour.addSelectionStep
// - codetour.addTourStep
// - codetour.changeTourDescription
// - codetour.changeTourRef
// - codetour.changeTourStepIcon
// - codetour.changeTourStepLine
// - codetour.changeTourStepTitle
// - codetour.changeTourTitle
// - codetour.deleteTour
// - codetour.deleteTourStep
// - codetour.editTour
// - codetour.editTourAtStep
// - codetour.exportTour
// - codetour.finishTour
// - codetour.hideMarkers
// - codetour.insertCodeSnippet
// - codetour.makeTourPrimary
// - codetour.moveTourStepBack
// - codetour.moveTourStepForward
// - codetour.navigateToStep
// - codetour.openTourFile
// - codetour.openTourUrl
// - codetour.previewTour
// - codetour.recordTour
// - codetour.resetProgress
// - codetour.resetTourProgress
// - codetour.resumeTour
// - codetour.saveTourStep
// - codetour.sendTextToTerminal
// - codetour.showMarkers
// - codetour.startTourByTitle
// - codetour.tours.focus
// - codetour.tours.removeView
// - codetour.tours.resetViewLocation
// - codetour.tours.toggleVisibility
// - codetour.unmakeTourPrimary
// - codetour.viewNotebook
// - columnSelect
// - comments.collapse
// - comments.expand
// - compareFiles
// - compareSelected
// - complete.notTemplate
// - compositionEnd
// - compositionStart
// - compositionType
// - configureExtensionsAutoUpdate.all
// - configureExtensionsAutoUpdate.enabled
// - configureExtensionsAutoUpdate.none
// - constant_scope_0
// - constant_scope_1
// - constant_scope_2
// - constant_scope_3
// - createCursor
// - cursorLineEnd
// - cursorLineEndSelect
// - cursorLineStart
// - cursorLineStartSelect
// - cursorRedo
// - cursorWordAccessibilityLeft
// - cursorWordAccessibilityLeftSelect
// - cursorWordAccessibilityRight
// - cursorWordAccessibilityRightSelect
// - cursorWordEndLeft
// - cursorWordEndLeftSelect
// - cursorWordPartLeft
// - cursorWordPartLeftSelect
// - cursorWordPartRight
// - cursorWordPartRightSelect
// - cursorWordPartStartLeft
// - cursorWordPartStartLeftSelect
// - cursorWordRight
// - cursorWordRightSelect
// - cursorWordStartLeft
// - cursorWordStartLeftSelect
// - cursorWordStartRight
// - cursorWordStartRightSelect
// - cut
// - debug.action.toggleDisassemblyViewSourceCode
// - debug.addConfiguration
// - debug.addToWatchExpressions
// - debug.breakWhenValueChanges
// - debug.breakWhenValueIsAccessed
// - debug.breakWhenValueIsRead
// - debug.collapseRepl
// - debug.copyEvaluatePath
// - debug.copyStackTrace
// - debug.editBreakpoint
// - debug.editFunctionBreakpoint
// - debug.editFunctionBreakpointHitCount
// - debug.enableOrDisableBreakpoint
// - debug.installAdditionalDebuggers
// - debug.jumpToCursor
// - debug.replCopy
// - debug.replPaste
// - debug.setWatchExpression
// - debug.startFromConfig
// - debug.toggleReplIgnoreFocus
// - default:compositionEnd
// - default:compositionStart
// - default:compositionType
// - default:cut
// - default:paste
// - default:redo
// - default:replacePreviousChar
// - default:type
// - default:undo
// - deleteAllLeft
// - deleteAllRight
// - deleteInsideWord
// - deleteWordEndLeft
// - deleteWordEndRight
// - deleteWordPartLeft
// - deleteWordPartRight
// - deleteWordStartLeft
// - deleteWordStartRight
// - diffEditor.toggleCollapseUnchangedRegions
// - editor.action.addCursorsToBottom
// - editor.action.addCursorsToTop
// - editor.action.addSelectionToPreviousFindMatch
// - editor.action.changeTabDisplaySize
// - editor.action.clipboardCopyWithSyntaxHighlightingAction
// - editor.action.detectIndentation
// - editor.action.duplicateSelection
// - editor.action.findReferences
// - editor.action.fixAll
// - editor.action.focusNextCursor
// - editor.action.focusPreviousCursor
// - editor.action.focusStickyScroll
// - editor.action.fontZoomIn
// - editor.action.fontZoomOut
// - editor.action.fontZoomReset
// - editor.action.forceRetokenize
// - editor.action.format
// - editor.action.formatChanges
// - editor.action.formatDocument.multiple
// - editor.action.formatSelection.multiple
// - editor.action.goToDeclaration
// - editor.action.goToMatchFindAction
// - editor.action.goToSelectionAnchor
// - editor.action.goToTypeDefinition
// - editor.action.indentUsingSpaces
// - editor.action.indentUsingTabs
// - editor.action.indentationToSpaces
// - editor.action.indentationToTabs
// - editor.action.inlineSuggest.acceptNextLine
// - editor.action.inlineSuggest.toggleAlwaysShowToolbar
// - editor.action.inlineSuggest.trigger
// - editor.action.insertSnippet
// - editor.action.inspectTMScopes
// - editor.action.joinLines
// - editor.action.measureExtHostLatency
// - editor.action.moveCarretLeftAction
// - editor.action.moveCarretRightAction
// - editor.action.moveSelectionToPreviousFindMatch
// - editor.action.openDeclarationToTheSide
// - editor.action.openLink
// - editor.action.pasteAs
// - editor.action.peekDeclaration
// - editor.action.peekTypeDefinition
// - editor.action.previewDeclaration
// - editor.action.referenceSearch.trigger
// - editor.action.reindentlines
// - editor.action.reindentselectedlines
// - editor.action.removeDuplicateLines
// - editor.action.resetSuggestSize
// - editor.action.revealDeclaration
// - editor.action.selectToBracket
// - editor.action.showDefinitionPreviewHover
// - editor.action.showOrFocusStandaloneColorPicker
// - editor.action.showReferences
// - editor.action.showSnippets
// - editor.action.smartSelect.grow
// - editor.action.sortLinesAscending
// - editor.action.sortLinesDescending
// - editor.action.sourceAction
// - editor.action.startDebugTextMate
// - editor.action.surroundWithSnippet
// - editor.action.toggleColumnSelection
// - editor.action.toggleMinimap
// - editor.action.toggleRenderControlCharacter
// - editor.action.toggleRenderWhitespace
// - editor.action.toggleScreenReaderAccessibilityMode
// - editor.action.toggleStickyScroll
// - editor.action.transformToCamelcase
// - editor.action.transformToKebabcase
// - editor.action.transformToLowercase
// - editor.action.transformToSnakecase
// - editor.action.transformToTitlecase
// - editor.action.transformToUppercase
// - editor.action.transpose
// - editor.action.transposeLetters
// - editor.action.unicodeHighlight.disableHighlightingOfAmbiguousCharacters
// - editor.action.unicodeHighlight.disableHighlightingOfInvisibleCharacters
// - editor.action.unicodeHighlight.disableHighlightingOfNonBasicAsciiCharacters
// - editor.action.unicodeHighlight.showExcludeOptions
// - editor.action.wordHighlight.trigger
// - editor.actions.findWithArgs
// - editor.debug.action.addLogPoint
// - editor.debug.action.conditionalBreakpoint
// - editor.debug.action.editBreakpoint
// - editor.debug.action.goToNextBreakpoint
// - editor.debug.action.goToPreviousBreakpoint
// - editor.debug.action.openDisassemblyView
// - editor.debug.action.runToCursor
// - editor.debug.action.selectionToRepl
// - editor.debug.action.selectionToWatch
// - editor.debug.action.stepIntoTargets
// - editor.emmet.action.balanceIn
// - editor.emmet.action.balanceOut
// - editor.emmet.action.decrementNumberByOne
// - editor.emmet.action.decrementNumberByOneTenth
// - editor.emmet.action.decrementNumberByTen
// - editor.emmet.action.evaluateMathExpression
// - editor.emmet.action.incrementNumberByOne
// - editor.emmet.action.incrementNumberByOneTenth
// - editor.emmet.action.incrementNumberByTen
// - editor.emmet.action.matchTag
// - editor.emmet.action.mergeLines
// - editor.emmet.action.nextEditPoint
// - editor.emmet.action.prevEditPoint
// - editor.emmet.action.reflectCSSValue
// - editor.emmet.action.removeTag
// - editor.emmet.action.selectNextItem
// - editor.emmet.action.selectPrevItem
// - editor.emmet.action.splitJoinTag
// - editor.emmet.action.toggleComment
// - editor.emmet.action.updateImageSize
// - editor.emmet.action.updateTag
// - editor.emmet.action.wrapWithAbbreviation
// - editor.gotoNextFold
// - editor.gotoParentFold
// - editor.gotoPreviousFold
// - editor.inlayHints.Reset
// - editor.showTypeHierarchy
// - emmet.expandAbbreviation
// - errorLens.copyProblemCode
// - errorLens.copyProblemMessage
// - errorLens.disableLine
// - errorLens.excludeProblem
// - errorLens.findLinterRuleDefinition
// - errorLens.revealLine
// - errorLens.searchForProblem
// - errorLens.statusBarCommand
// - errorLens.toggle
// - errorLens.toggleError
// - errorLens.toggleHint
// - errorLens.toggleInfo
// - errorLens.toggleWarning
// - errorlens.toggleWorkspace
// - excalidraw.showEditor
// - excalidraw.showEditorToSide
// - excalidraw.showImage
// - excalidraw.showImageToSide
// - excalidraw.showSource
// - excalidraw.showSourceToSide
// - excalidraw.updateTheme
// - explorer.download
// - explorer.newFile
// - explorer.newFolder
// - explorer.openWith
// - explorer.upload
// - extension.aceJump
// - extension.aceJump.line
// - extension.aceJump.multiChar
// - extension.aceJump.selection
// - extension.bisect.next
// - extension.bisect.start
// - extension.bisect.stop
// - extension.conventionalCommits
// - extension.conventionalCommits.resetGlobalState
// - extension.conventionalCommits.showNewVersionNotes
// - extension.decrementSelection
// - extension.js-debug.addCustomBreakpoints
// - extension.js-debug.callers.add
// - extension.js-debug.callers.goToCaller
// - extension.js-debug.callers.gotToTarget
// - extension.js-debug.callers.remove
// - extension.js-debug.callers.removeAll
// - extension.js-debug.createDebuggerTerminal
// - extension.js-debug.createDiagnostics
// - extension.js-debug.debugLink
// - extension.js-debug.disableSourceMapStepping
// - extension.js-debug.enableSourceMapStepping
// - extension.js-debug.getDiagnosticLogs
// - extension.js-debug.npmScript
// - extension.js-debug.openEdgeDevTools
// - extension.js-debug.prettyPrint
// - extension.js-debug.removeAllCustomBreakpoints
// - extension.js-debug.removeCustomBreakpoint
// - extension.js-debug.revealPage
// - extension.js-debug.startProfile
// - extension.js-debug.stopProfile
// - extension.js-debug.toggleSkippingFile
// - extension.jsProfileVisualizer.table.clearCodeLenses
// - extension.liveServer.changeWorkspace
// - extension.liveshare.chatStatusBar
// - extension.multiCommand.execute
// - extension.node-debug.toggleAutoAttach
// - extension.open
// - extension.pwa-node-debug.attachNodeProcess
// - extension.reverseSelection
// - extensions.actions.searchByCategory.Azure
// - extensions.actions.searchByCategory.Data Science
// - extensions.actions.searchByCategory.Debuggers
// - extensions.actions.searchByCategory.Education
// - extensions.actions.searchByCategory.Extension Packs
// - extensions.actions.searchByCategory.Formatters
// - extensions.actions.searchByCategory.Keymaps
// - extensions.actions.searchByCategory.Language Packs
// - extensions.actions.searchByCategory.Linters
// - extensions.actions.searchByCategory.Machine Learning
// - extensions.actions.searchByCategory.Notebooks
// - extensions.actions.searchByCategory.Other
// - extensions.actions.searchByCategory.Programming Languages
// - extensions.actions.searchByCategory.SCM Providers
// - extensions.actions.searchByCategory.Snippets
// - extensions.actions.searchByCategory.Testing
// - extensions.actions.searchByCategory.Themes
// - extensions.actions.searchByCategory.Visualization
// - extensions.filter.featured
// - extensions.recommendedList.focus
// - extensions.recommendedList.resetViewLocation
// - extensions.sort.installs
// - extensions.sort.name
// - extensions.sort.publishedDate
// - extensions.sort.rating
// - extensions.sort.updateDate
// - extract_to_svelte_component
// - files.openTimeline
// - files.participants.resetChoice
// - filesExplorer.findInWorkspace
// - focusAndAcceptSuggestion
// - function_scope_0
// - function_scope_1
// - function_scope_2
// - function_scope_3
// - getContextKeyInfo
// - gistpad._createWikiPage
// - gistpad.addDirectoryFile
// - gistpad.addFile
// - gistpad.addFileToGist
// - gistpad.addGistComment
// - gistpad.addRepositoryComment
// - gistpad.addRepositoryFile
// - gistpad.addSelectionToGist
// - gistpad.addWikiPage
// - gistpad.changeGistDescription
// - gistpad.clearScratchNotes
// - gistpad.cloneManagedRepository
// - gistpad.cloneRepository
// - gistpad.closeRepository
// - gistpad.copyFileContents
// - gistpad.copyFileUrl
// - gistpad.copyGistPadUrl
// - gistpad.copyGistUrl
// - gistpad.copyRepositoryFileUrl
// - gistpad.copyRepositoryUrl
// - gistpad.deleteDirectory
// - gistpad.deleteFile
// - gistpad.deleteGist
// - gistpad.deleteGistComment
// - gistpad.deleteRepository
// - gistpad.deleteRepositoryBranch
// - gistpad.deleteRepositoryComment
// - gistpad.deleteRepositoryDirectory
// - gistpad.deleteRepositoryFile
// - gistpad.duplicateDirectory
// - gistpad.duplicateFile
// - gistpad.duplicateGist
// - gistpad.duplicateRepositoryFile
// - gistpad.editGistComment
// - gistpad.editRepositoryComment
// - gistpad.exportGistToCodePen
// - gistpad.exportToRepo
// - gistpad.exportTour
// - gistpad.followUser
// - gistpad.forkGist
// - gistpad.gists.focus
// - gistpad.gists.removeView
// - gistpad.gists.resetViewLocation
// - gistpad.gists.toggleVisibility
// - gistpad.groupGists
// - gistpad.hideScratchNotes
// - gistpad.mergeRepositoryBranch
// - gistpad.newGistLog
// - gistpad.newPublicGist
// - gistpad.newScratchNote
// - gistpad.newSecretGist
// - gistpad.newSecretSwing
// - gistpad.newSwing
// - gistpad.openGist
// - gistpad.openGistFile
// - gistpad.openGistInBlocks
// - gistpad.openGistInBrowser
// - gistpad.openGistInGistLog
// - gistpad.openGistInNbViewer
// - gistpad.openGistLogFeed
// - gistpad.openGistNewWindow
// - gistpad.openGistWorkspace
// - gistpad.openProfile
// - gistpad.openRepository
// - gistpad.openRepositoryFileInBrowser
// - gistpad.openRepositoryInBrowser
// - gistpad.openRepositorySwing
// - gistpad.openTodayPage
// - gistpad.pasteGistFile
// - gistpad.pasteImage
// - gistpad.recordRepoCodeTour
// - gistpad.refreshGists
// - gistpad.refreshRepositories
// - gistpad.refreshShowcase
// - gistpad.renameDirectory
// - gistpad.renameFile
// - gistpad.renameRepositoryDirectory
// - gistpad.renameRepositoryFile
// - gistpad.replyGistComment
// - gistpad.repos.focus
// - gistpad.repos.removeView
// - gistpad.repos.resetViewLocation
// - gistpad.repos.toggleVisibility
// - gistpad.saveGistComment
// - gistpad.saveRepositoryComment
// - gistpad.showcase.focus
// - gistpad.showcase.resetViewLocation
// - gistpad.signIn
// - gistpad.sortGistsAlphabetically
// - gistpad.sortGistsByUpdatedTime
// - gistpad.starGist
// - gistpad.starredGists
// - gistpad.startRepoCodeTour
// - gistpad.submitShowcaseEntry
// - gistpad.switchRepositoryBranch
// - gistpad.unfollowUser
// - gistpad.ungroupGists
// - gistpad.unstarGist
// - gistpad.uploadFileToDirectory
// - gistpad.uploadFileToGist
// - gistpad.uploadRepositoryFile
// - gistpad.viewForks
// - git-base.api.getRemoteSources
// - git-graph.addGitRepository
// - git-graph.clearAvatarCache
// - git-graph.endAllWorkspaceCodeReviews
// - git-graph.endSpecificWorkspaceCodeReview
// - git-graph.fetch
// - git-graph.openFile
// - git-graph.removeGitRepository
// - git-graph.resumeWorkspaceCodeReview
// - git-graph.version
// - git-graph.view
// - git._syncAll
// - git.acceptMerge
// - git.addRemote
// - git.api.getRemoteSources
// - git.api.getRepositories
// - git.api.getRepositoryState
// - git.branch
// - git.branchFrom
// - git.checkout
// - git.checkoutDetached
// - git.cherryPick
// - git.clean
// - git.cleanAll
// - git.cleanAllTracked
// - git.cleanAllUntracked
// - git.clone
// - git.cloneRecursive
// - git.close
// - git.closeAllDiffEditors
// - git.commit
// - git.commitAll
// - git.commitAllAmend
// - git.commitAllAmendNoVerify
// - git.commitAllNoVerify
// - git.commitAllSigned
// - git.commitAllSignedNoVerify
// - git.commitEmpty
// - git.commitEmptyNoVerify
// - git.commitMessageAccept
// - git.commitMessageDiscard
// - git.commitNoVerify
// - git.commitStaged
// - git.commitStagedAmend
// - git.commitStagedAmendNoVerify
// - git.commitStagedNoVerify
// - git.commitStagedSigned
// - git.commitStagedSignedNoVerify
// - git.continueInLocalClone
// - git.createTag
// - git.deleteBranch
// - git.deleteRemoteTag
// - git.deleteTag
// - git.fetch
// - git.fetchAll
// - git.fetchPrune
// - git.ignore
// - git.init
// - git.manageUnsafeRepositories
// - git.merge
// - git.mergeAbort
// - git.openAllChanges
// - git.openChange
// - git.openFile
// - git.openFile2
// - git.openHEADFile
// - git.openMergeEditor
// - git.openRepositoriesInParentFolders
// - git.openRepository
// - git.openResource
// - git.publish
// - git.pull
// - git.pullFrom
// - git.pullRebase
// - git.push
// - git.pushForce
// - git.pushTags
// - git.pushTo
// - git.pushToForce
// - git.pushWithTags
// - git.pushWithTagsForce
// - git.rebase
// - git.rebaseAbort
// - git.refresh
// - git.removeRemote
// - git.rename
// - git.renameBranch
// - git.restoreCommitTemplate
// - git.revealFileInOS.linux
// - git.revealFileInOS.mac
// - git.revealFileInOS.windows
// - git.revealInExplorer
// - git.revertChange
// - git.runGitMerge
// - git.runGitMergeDiff3
// - git.showOutput
// - git.stage
// - git.stageAll
// - git.stageAllMerge
// - git.stageAllTracked
// - git.stageAllUntracked
// - git.stageChange
// - git.stash
// - git.stashApply
// - git.stashApplyLatest
// - git.stashDrop
// - git.stashDropAll
// - git.stashIncludeUntracked
// - git.stashPop
// - git.stashPopLatest
// - git.stashStaged
// - git.sync
// - git.syncRebase
// - git.timeline.compareWithSelected
// - git.timeline.copyCommitId
// - git.timeline.copyCommitMessage
// - git.timeline.openDiff
// - git.timeline.selectForCompare
// - git.undoCommit
// - git.unstage
// - git.unstageAll
// - github.api.preloadPullRequest
// - github.copyVscodeDevLink
// - github.copyVscodeDevLinkFile
// - github.copyVscodeDevLinkWithoutRange
// - github.openOnVscodeDev
// - github.publish
// - github:activePullRequest.focus
// - github:activePullRequest.resetViewLocation
// - github:activePullRequest:welcome.focus
// - github:activePullRequest:welcome.resetViewLocation
// - github:compareChanges.focus
// - github:compareChanges.resetViewLocation
// - github:createPullRequest.focus
// - github:createPullRequest.resetViewLocation
// - github:login.focus
// - github:login.resetViewLocation
// - github:maattdd.gitless:signIn1
// - github:vsls-contrib.gistfs:signIn0
// - gitlens.action.createPullRequest
// - gitlens.action.hover.commands
// - gitlens.action.openPullRequest
// - gitlens.addAuthors
// - gitlens.browseRepoAtRevision
// - gitlens.browseRepoAtRevisionInNewWindow
// - gitlens.browseRepoBeforeRevision
// - gitlens.browseRepoBeforeRevisionInNewWindow
// - gitlens.clearFileAnnotations
// - gitlens.closeUnchangedFiles
// - gitlens.closeWelcomeView
// - gitlens.compareHeadWith
// - gitlens.compareWith
// - gitlens.compareWorkingWith
// - gitlens.computingFileAnnotations
// - gitlens.connectRemoteProvider
// - gitlens.copyCurrentBranch
// - gitlens.copyMessageToClipboard
// - gitlens.copyRemoteBranchUrl
// - gitlens.copyRemoteBranchesUrl
// - gitlens.copyRemoteCommitUrl
// - gitlens.copyRemoteComparisonUrl
// - gitlens.copyRemoteFileUrlFrom
// - gitlens.copyRemoteFileUrlToClipboard
// - gitlens.copyRemoteFileUrlWithoutRange
// - gitlens.copyRemotePullRequestUrl
// - gitlens.copyRemoteRepositoryUrl
// - gitlens.copyShaToClipboard
// - gitlens.createPullRequestOnRemote
// - gitlens.diffDirectory
// - gitlens.diffDirectoryWithHead
// - gitlens.diffHeadWith
// - gitlens.diffLineWithWorking
// - gitlens.diffWith
// - gitlens.diffWithRevision
// - gitlens.diffWithRevisionFrom
// - gitlens.diffWithWorkingInDiffLeft
// - gitlens.diffWithWorkingInDiffRight
// - gitlens.diffWorkingWith
// - gitlens.disableDebugLogging
// - gitlens.disableRebaseEditor
// - gitlens.disconnectRemoteProvider
// - gitlens.enableDebugLogging
// - gitlens.enableRebaseEditor
// - gitlens.externalDiff
// - gitlens.externalDiffAll
// - gitlens.fetchRepositories
// - gitlens.gitCommands.branch
// - gitlens.gitCommands.cherryPick
// - gitlens.gitCommands.merge
// - gitlens.gitCommands.rebase
// - gitlens.gitCommands.reset
// - gitlens.gitCommands.revert
// - gitlens.gitCommands.switch
// - gitlens.gitCommands.tag
// - gitlens.inviteToLiveShare
// - gitlens.openAssociatedPullRequestOnRemote
// - gitlens.openBlamePriorToChange
// - gitlens.openBranchInRemote
// - gitlens.openBranchOnRemote
// - gitlens.openBranchesInRemote
// - gitlens.openBranchesOnRemote
// - gitlens.openChangedFiles
// - gitlens.openCommitInRemote
// - gitlens.openCommitOnRemote
// - gitlens.openComparisonOnRemote
// - gitlens.openFileFromRemote
// - gitlens.openFileHistory
// - gitlens.openFileInRemote
// - gitlens.openFileOnRemote
// - gitlens.openFileOnRemoteFrom
// - gitlens.openFileRevision
// - gitlens.openFileRevisionFrom
// - gitlens.openFolderHistory
// - gitlens.openInRemote
// - gitlens.openOnRemote
// - gitlens.openPullRequestOnRemote
// - gitlens.openRepoInRemote
// - gitlens.openRepoOnRemote
// - gitlens.openRevisionFile
// - gitlens.openRevisionFileInDiffLeft
// - gitlens.openRevisionFileInDiffRight
// - gitlens.openWorkingFile
// - gitlens.openWorkingFileInDiffLeft
// - gitlens.openWorkingFileInDiffRight
// - gitlens.pullRepositories
// - gitlens.pushRepositories
// - gitlens.quickOpenFileHistory
// - gitlens.refreshHover
// - gitlens.resetAvatarCache
// - gitlens.resetSuppressedWarnings
// - gitlens.revealCommitInView
// - gitlens.setViewsLayout
// - gitlens.showBranchesView
// - gitlens.showCommitInView
// - gitlens.showCommitSearch
// - gitlens.showCommitsInView
// - gitlens.showCommitsView
// - gitlens.showContributorsView
// - gitlens.showFileHistoryInView
// - gitlens.showFileHistoryView
// - gitlens.showLastQuickPick
// - gitlens.showLineHistoryView
// - gitlens.showQuickBranchHistory
// - gitlens.showQuickCommitDetails
// - gitlens.showQuickRevisionDetails
// - gitlens.showQuickRevisionDetailsInDiffLeft
// - gitlens.showQuickRevisionDetailsInDiffRight
// - gitlens.showQuickStashList
// - gitlens.showRemotesView
// - gitlens.showRepositoriesView
// - gitlens.showSearchAndCompareView
// - gitlens.showSettingsPage
// - gitlens.showSettingsPage#branches-view
// - gitlens.showSettingsPage#commits-view
// - gitlens.showSettingsPage#contributors-view
// - gitlens.showSettingsPage#file-history-view
// - gitlens.showSettingsPage#line-history-view
// - gitlens.showSettingsPage#remotes-view
// - gitlens.showSettingsPage#repositories-view
// - gitlens.showSettingsPage#search-compare-view
// - gitlens.showSettingsPage#stashes-view
// - gitlens.showSettingsPage#tags-view
// - gitlens.showSettingsPage#views
// - gitlens.showStashesView
// - gitlens.showTagsView
// - gitlens.showWelcomePage
// - gitlens.showWelcomeView
// - gitlens.stashApply
// - gitlens.stashSave
// - gitlens.stashSaveFiles
// - gitlens.switchMode
// - gitlens.toggleFileBlameInDiffLeft
// - gitlens.toggleFileBlameInDiffRight
// - gitlens.toggleFileChanges
// - gitlens.toggleFileChangesOnly
// - gitlens.toggleFileHeatmap
// - gitlens.toggleFileHeatmapInDiffLeft
// - gitlens.toggleFileHeatmapInDiffRight
// - gitlens.toggleLineBlame
// - gitlens.toggleReviewMode
// - gitlens.toggleZenMode
// - gitlens.views.addAuthor
// - gitlens.views.addAuthors
// - gitlens.views.addRemote
// - gitlens.views.applyChanges
// - gitlens.views.branches.focus
// - gitlens.views.branches.refresh
// - gitlens.views.branches.removeView
// - gitlens.views.branches.resetViewLocation
// - gitlens.views.branches.setFilesLayoutToAuto
// - gitlens.views.branches.setFilesLayoutToList
// - gitlens.views.branches.setFilesLayoutToTree
// - gitlens.views.branches.setLayoutToList
// - gitlens.views.branches.setLayoutToTree
// - gitlens.views.branches.setShowAvatarsOff
// - gitlens.views.branches.setShowAvatarsOn
// - gitlens.views.branches.setShowBranchComparisonOff
// - gitlens.views.branches.setShowBranchComparisonOn
// - gitlens.views.branches.setShowBranchPullRequestOff
// - gitlens.views.branches.setShowBranchPullRequestOn
// - gitlens.views.branches.toggleVisibility
// - gitlens.views.browseRepoAtRevision
// - gitlens.views.browseRepoAtRevisionInNewWindow
// - gitlens.views.browseRepoBeforeRevision
// - gitlens.views.browseRepoBeforeRevisionInNewWindow
// - gitlens.views.cherryPick
// - gitlens.views.clearNode
// - gitlens.views.closeRepository
// - gitlens.views.commits.focus
// - gitlens.views.commits.refresh
// - gitlens.views.commits.removeView
// - gitlens.views.commits.resetViewLocation
// - gitlens.views.commits.setFilesLayoutToAuto
// - gitlens.views.commits.setFilesLayoutToList
// - gitlens.views.commits.setFilesLayoutToTree
// - gitlens.views.commits.setMyCommitsOnlyOff
// - gitlens.views.commits.setMyCommitsOnlyOn
// - gitlens.views.commits.setShowAvatarsOff
// - gitlens.views.commits.setShowAvatarsOn
// - gitlens.views.commits.setShowBranchComparisonOff
// - gitlens.views.commits.setShowBranchComparisonOn
// - gitlens.views.commits.setShowBranchPullRequestOff
// - gitlens.views.commits.setShowBranchPullRequestOn
// - gitlens.views.commits.toggleVisibility
// - gitlens.views.compareAncestryWithWorking
// - gitlens.views.compareFileWithSelected
// - gitlens.views.compareWithHead
// - gitlens.views.compareWithSelected
// - gitlens.views.compareWithUpstream
// - gitlens.views.compareWithWorking
// - gitlens.views.contributors.focus
// - gitlens.views.contributors.refresh
// - gitlens.views.contributors.removeView
// - gitlens.views.contributors.resetViewLocation
// - gitlens.views.contributors.setFilesLayoutToAuto
// - gitlens.views.contributors.setFilesLayoutToList
// - gitlens.views.contributors.setFilesLayoutToTree
// - gitlens.views.contributors.setShowAllBranchesOff
// - gitlens.views.contributors.setShowAllBranchesOn
// - gitlens.views.contributors.setShowAvatarsOff
// - gitlens.views.contributors.setShowAvatarsOn
// - gitlens.views.contributors.setShowStatisticsOff
// - gitlens.views.contributors.setShowStatisticsOn
// - gitlens.views.contributors.toggleVisibility
// - gitlens.views.copy
// - gitlens.views.createBranch
// - gitlens.views.createPullRequest
// - gitlens.views.createTag
// - gitlens.views.deleteBranch
// - gitlens.views.deleteStash
// - gitlens.views.deleteTag
// - gitlens.views.dismissNode
// - gitlens.views.editNode
// - gitlens.views.expandNode
// - gitlens.views.fetch
// - gitlens.views.fileHistory.changeBase
// - gitlens.views.fileHistory.focus
// - gitlens.views.fileHistory.refresh
// - gitlens.views.fileHistory.removeView
// - gitlens.views.fileHistory.resetViewLocation
// - gitlens.views.fileHistory.setCursorFollowingOff
// - gitlens.views.fileHistory.setCursorFollowingOn
// - gitlens.views.fileHistory.setEditorFollowingOff
// - gitlens.views.fileHistory.setEditorFollowingOn
// - gitlens.views.fileHistory.setRenameFollowingOff
// - gitlens.views.fileHistory.setRenameFollowingOn
// - gitlens.views.fileHistory.setShowAllBranchesOff
// - gitlens.views.fileHistory.setShowAllBranchesOn
// - gitlens.views.fileHistory.setShowAvatarsOff
// - gitlens.views.fileHistory.setShowAvatarsOn
// - gitlens.views.fileHistory.toggleVisibility
// - gitlens.views.highlightChanges
// - gitlens.views.highlightRevisionChanges
// - gitlens.views.lineHistory.changeBase
// - gitlens.views.lineHistory.focus
// - gitlens.views.lineHistory.refresh
// - gitlens.views.lineHistory.removeView
// - gitlens.views.lineHistory.resetViewLocation
// - gitlens.views.lineHistory.setEditorFollowingOff
// - gitlens.views.lineHistory.setEditorFollowingOn
// - gitlens.views.lineHistory.setShowAvatarsOff
// - gitlens.views.lineHistory.setShowAvatarsOn
// - gitlens.views.lineHistory.toggleVisibility
// - gitlens.views.loadAllChildren
// - gitlens.views.loadMoreChildren
// - gitlens.views.mergeBranchInto
// - gitlens.views.openChangedFileDiffs
// - gitlens.views.openChangedFileDiffsWithWorking
// - gitlens.views.openChangedFileRevisions
// - gitlens.views.openChangedFiles
// - gitlens.views.openChanges
// - gitlens.views.openChangesWithWorking
// - gitlens.views.openDirectoryDiff
// - gitlens.views.openDirectoryDiffWithWorking
// - gitlens.views.openFile
// - gitlens.views.openFileRevision
// - gitlens.views.openInTerminal
// - gitlens.views.openPreviousChangesWithWorking
// - gitlens.views.openPullRequest
// - gitlens.views.pruneRemote
// - gitlens.views.publishBranch
// - gitlens.views.publishRepository
// - gitlens.views.pull
// - gitlens.views.push
// - gitlens.views.pushToCommit
// - gitlens.views.pushWithForce
// - gitlens.views.rebaseOntoBranch
// - gitlens.views.rebaseOntoCommit
// - gitlens.views.rebaseOntoUpstream
// - gitlens.views.refreshNode
// - gitlens.views.remotes.focus
// - gitlens.views.remotes.refresh
// - gitlens.views.remotes.removeView
// - gitlens.views.remotes.resetViewLocation
// - gitlens.views.remotes.setFilesLayoutToAuto
// - gitlens.views.remotes.setFilesLayoutToList
// - gitlens.views.remotes.setFilesLayoutToTree
// - gitlens.views.remotes.setLayoutToList
// - gitlens.views.remotes.setLayoutToTree
// - gitlens.views.remotes.setShowAvatarsOff
// - gitlens.views.remotes.setShowAvatarsOn
// - gitlens.views.remotes.setShowBranchPullRequestOff
// - gitlens.views.remotes.setShowBranchPullRequestOn
// - gitlens.views.remotes.toggleVisibility
// - gitlens.views.renameBranch
// - gitlens.views.repositories.focus
// - gitlens.views.repositories.refresh
// - gitlens.views.repositories.removeView
// - gitlens.views.repositories.resetViewLocation
// - gitlens.views.repositories.setAutoRefreshToOff
// - gitlens.views.repositories.setAutoRefreshToOn
// - gitlens.views.repositories.setBranchesLayoutToList
// - gitlens.views.repositories.setBranchesLayoutToTree
// - gitlens.views.repositories.setBranchesShowBranchComparisonOff
// - gitlens.views.repositories.setBranchesShowBranchComparisonOn
// - gitlens.views.repositories.setFilesLayoutToAuto
// - gitlens.views.repositories.setFilesLayoutToList
// - gitlens.views.repositories.setFilesLayoutToTree
// - gitlens.views.repositories.setShowAvatarsOff
// - gitlens.views.repositories.setShowAvatarsOn
// - gitlens.views.repositories.setShowBranchComparisonOff
// - gitlens.views.repositories.setShowBranchComparisonOn
// - gitlens.views.repositories.setShowBranchesOff
// - gitlens.views.repositories.setShowBranchesOn
// - gitlens.views.repositories.setShowCommitsOff
// - gitlens.views.repositories.setShowCommitsOn
// - gitlens.views.repositories.setShowContributorsOff
// - gitlens.views.repositories.setShowContributorsOn
// - gitlens.views.repositories.setShowRemotesOff
// - gitlens.views.repositories.setShowRemotesOn
// - gitlens.views.repositories.setShowSectionOff
// - gitlens.views.repositories.setShowStashesOff
// - gitlens.views.repositories.setShowStashesOn
// - gitlens.views.repositories.setShowTagsOff
// - gitlens.views.repositories.setShowTagsOn
// - gitlens.views.repositories.setShowUpstreamStatusOff
// - gitlens.views.repositories.setShowUpstreamStatusOn
// - gitlens.views.repositories.toggleVisibility
// - gitlens.views.resetCommit
// - gitlens.views.resetToCommit
// - gitlens.views.restore
// - gitlens.views.revert
// - gitlens.views.searchAndCompare.clear
// - gitlens.views.searchAndCompare.compareWithSelected
// - gitlens.views.searchAndCompare.focus
// - gitlens.views.searchAndCompare.pin
// - gitlens.views.searchAndCompare.refresh
// - gitlens.views.searchAndCompare.removeView
// - gitlens.views.searchAndCompare.resetViewLocation
// - gitlens.views.searchAndCompare.searchCommits
// - gitlens.views.searchAndCompare.selectForCompare
// - gitlens.views.searchAndCompare.setFilesFilterOff
// - gitlens.views.searchAndCompare.setFilesFilterOnLeft
// - gitlens.views.searchAndCompare.setFilesFilterOnRight
// - gitlens.views.searchAndCompare.setFilesLayoutToAuto
// - gitlens.views.searchAndCompare.setFilesLayoutToList
// - gitlens.views.searchAndCompare.setFilesLayoutToTree
// - gitlens.views.searchAndCompare.setKeepResultsToOff
// - gitlens.views.searchAndCompare.setKeepResultsToOn
// - gitlens.views.searchAndCompare.setShowAvatarsOff
// - gitlens.views.searchAndCompare.setShowAvatarsOn
// - gitlens.views.searchAndCompare.swapComparison
// - gitlens.views.searchAndCompare.toggleVisibility
// - gitlens.views.searchAndCompare.unpin
// - gitlens.views.selectFileForCompare
// - gitlens.views.selectForCompare
// - gitlens.views.setAsDefault
// - gitlens.views.setBranchComparisonToBranch
// - gitlens.views.setBranchComparisonToWorking
// - gitlens.views.setShowRelativeDateMarkersOff
// - gitlens.views.setShowRelativeDateMarkersOn
// - gitlens.views.stageDirectory
// - gitlens.views.stageFile
// - gitlens.views.star
// - gitlens.views.stashes.focus
// - gitlens.views.stashes.refresh
// - gitlens.views.stashes.removeView
// - gitlens.views.stashes.resetViewLocation
// - gitlens.views.stashes.setFilesLayoutToAuto
// - gitlens.views.stashes.setFilesLayoutToList
// - gitlens.views.stashes.setFilesLayoutToTree
// - gitlens.views.stashes.toggleVisibility
// - gitlens.views.switchToAnotherBranch
// - gitlens.views.switchToBranch
// - gitlens.views.switchToCommit
// - gitlens.views.switchToTag
// - gitlens.views.tags.focus
// - gitlens.views.tags.refresh
// - gitlens.views.tags.removeView
// - gitlens.views.tags.resetViewLocation
// - gitlens.views.tags.setFilesLayoutToAuto
// - gitlens.views.tags.setFilesLayoutToList
// - gitlens.views.tags.setFilesLayoutToTree
// - gitlens.views.tags.setLayoutToList
// - gitlens.views.tags.setLayoutToTree
// - gitlens.views.tags.setShowAvatarsOff
// - gitlens.views.tags.setShowAvatarsOn
// - gitlens.views.tags.toggleVisibility
// - gitlens.views.terminalRemoveRemote
// - gitlens.views.undoCommit
// - gitlens.views.unsetAsDefault
// - gitlens.views.unstageDirectory
// - gitlens.views.unstageFile
// - gitlens.views.unstar
// - gitlens.views.welcome.focus
// - gitlens.views.welcome.resetViewLocation
// - goToNextReferenceFromEmbeddedEditor
// - goToPreviousReferenceFromEmbeddedEditor
// - help.tweetFeedback
// - iconify.clear-cache
// - iconify.toggle-annotations
// - iconify.toggle-inplace
// - imagePreview.copyImage
// - imagePreview.zoomIn
// - imagePreview.zoomOut
// - inlayHints.startReadingLineWithHint
// - inlineFold.clearCache
// - inlineFold.toggle
// - interactive.history.focus
// - interactive.input.clear
// - interactive.input.focus
// - interactiveEditor.contractMessageAction
// - interactiveEditor.copyRecordings
// - interactiveEditor.discardToClipboard
// - interactiveEditor.discardToFile
// - interactiveEditor.expandMessageAction
// - interactiveEditor.feedbackHelpful
// - interactiveEditor.feedbackunhelpful
// - interactiveEditor.toggleDiff
// - interactiveEditor.viewInChat
// - ipynb.cleanInvalidImageAttachment
// - ipynb.newUntitledIpynb
// - ipynb.openIpynbInNotebookEditor
// - issue.continueWorking
// - issue.copyGithubDevLink
// - issue.copyGithubDevLinkFile
// - issue.copyGithubDevLinkWithoutRange
// - issue.copyGithubHeadLink
// - issue.copyGithubHeadLinkWithoutRange
// - issue.copyGithubPermalink
// - issue.copyGithubPermalinkWithoutRange
// - issue.copyIssueNumber
// - issue.copyIssueUrl
// - issue.copyMarkdownGithubPermalink
// - issue.copyMarkdownGithubPermalinkWithoutRange
// - issue.createIssue
// - issue.createIssueFromClipboard
// - issue.createIssueFromSelection
// - issue.editQuery
// - issue.getCurrent
// - issue.goToLinkedCode
// - issue.issueCompletion
// - issue.openGithubPermalink
// - issue.openIssue
// - issue.refresh
// - issue.signinAndRefreshList
// - issue.startWorking
// - issue.startWorkingBranchDescriptiveTitle
// - issue.startWorkingBranchPrompt
// - issue.statusBar
// - issue.stopWorking
// - issue.stopWorkingBranchDescriptiveTitle
// - issue.userCompletion
// - issues.openIssuesWebsite
// - issues:github.focus
// - issues:github.removeView
// - issues:github.resetViewLocation
// - issues:github.toggleVisibility
// - javascript.goToProjectConfig
// - javascript.reloadProjects
// - javascript.removeUnusedImports
// - javascript.sortImports
// - js.projectStatus.command
// - jsBrowserBreakpoints.focus
// - jsBrowserBreakpoints.resetViewLocation
// - jsExcludedCallers.focus
// - jsExcludedCallers.resetViewLocation
// - json.clearCache
// - json.sort
// - keybindings.editor.clearSearchHistory
// - keybindings.editor.copyCommandKeybindingEntry
// - keybindings.editor.copyCommandTitle
// - keybindings.editor.resetKeybinding
// - keybindings.editor.showConflicts
// - keybindings.editor.showDefaultKeybindings
// - keybindings.editor.showExtensionKeybindings
// - keybindings.editor.showUserKeybindings
// - lastCursorLineSelect
// - lastCursorLineSelectDrag
// - lastCursorWordSelect
// - layoutEditorGroups
// - lineBreakInsert
// - list.collapseAllToFocus
// - list.focusParent
// - list.scrollLeft
// - list.scrollRight
// - list.selectAndPreserveFocus
// - list.toggleFilterOnType
// - list.toggleFindMode
// - list.toggleKeyboardNavigation
// - list.triggerTypeNavigation
// - liveshare.accessibility.announceCoeditorLocation
// - liveshare.accessibility.setOutputDevice
// - liveshare.accessibility.toggleSoundsEnabled
// - liveshare.accessibility.toggleVoiceEnabled
// - liveshare.activityBar.copyServerURL
// - liveshare.activityBar.makeTerminalReadOnly
// - liveshare.activityBar.makeTerminalReadWrite
// - liveshare.activityBar.openServerInBrowser
// - liveshare.activityBar.openTerminal
// - liveshare.activityBar.removeTerminal
// - liveshare.activityBar.shareServer
// - liveshare.activityBar.shareTerminal
// - liveshare.activityBar.unshareServer
// - liveshare.activityBar.user.decrease
// - liveshare.activityBar.user.elevate
// - liveshare.blockParticipant
// - liveshare.blockParticipantFromActivityBar
// - liveshare.blockParticipantFromFileTreeExplorer
// - liveshare.collaboration.link.copy
// - liveshare.collaboration.link.copyFromActivityBar
// - liveshare.collaboration.link.copyFromFileTreeExplorer
// - liveshare.comments.cancelEditComment
// - liveshare.comments.createThread
// - liveshare.comments.deleteComment
// - liveshare.comments.deleteThread
// - liveshare.comments.editComment
// - liveshare.comments.reply
// - liveshare.comments.saveComment
// - liveshare.configureSettings
// - liveshare.copyToken
// - liveshare.createInvitationLink
// - liveshare.createSession
// - liveshare.debug
// - liveshare.devtools.focus
// - liveshare.devtools.resetViewLocation
// - liveshare.end
// - liveshare.endFromActivityBar
// - liveshare.endFromFileTreeExplorer
// - liveshare.endWithoutProgress
// - liveshare.exportLogs
// - liveshare.fileTreeExplorer.copyServerURL
// - liveshare.fileTreeExplorer.makeTerminalReadOnly
// - liveshare.fileTreeExplorer.makeTerminalReadWrite
// - liveshare.fileTreeExplorer.openServerInBrowser
// - liveshare.fileTreeExplorer.openTerminal
// - liveshare.fileTreeExplorer.removeTerminal
// - liveshare.fileTreeExplorer.shareServer
// - liveshare.fileTreeExplorer.shareTerminal
// - liveshare.fileTreeExplorer.unshareServer
// - liveshare.fileTreeExplorer.user.decrease
// - liveshare.fileTreeExplorer.user.elevate
// - liveshare.focusParticipantFromActivityBar
// - liveshare.focusParticipantFromFileTreeExplorer
// - liveshare.focusParticipants
// - liveshare.focusParticipantsFromActivityBar
// - liveshare.focusParticipantsFromFileTreeExplorer
// - liveshare.followFromActivityBar
// - liveshare.followFromFileTreeExplorer
// - liveshare.followToTheSideFromActivityBar
// - liveshare.followToTheSideFromTreeExplorer
// - liveshare.getCoeditingInformation
// - liveshare.help
// - liveshare.help.focus
// - liveshare.help.resetViewLocation
// - liveshare.joinFromActivityBar
// - liveshare.joinFromFileTreeExplorer
// - liveshare.joinFromWelcomeContent
// - liveshare.leave
// - liveshare.leaveFromActivityBar
// - liveshare.leaveFromFileTreeExplorer
// - liveshare.listParticipants
// - liveshare.listServers
// - liveshare.listTerminals
// - liveshare.moreInfo
// - liveshare.openActivityLog
// - liveshare.openInVS
// - liveshare.openInVSCode
// - liveshare.openLink
// - liveshare.openSessionChat
// - liveshare.removeParticipant
// - liveshare.removeParticipantFromActivityBar
// - liveshare.removeParticipantFromFileTreeExplorer
// - liveshare.reportAProblem
// - liveshare.scc.clean
// - liveshare.scc.cleanAll
// - liveshare.scc.openChange
// - liveshare.scc.openFile
// - liveshare.scc.openFile2
// - liveshare.scc.revertChange
// - liveshare.session.explorer.focus
// - liveshare.session.explorer.resetViewLocation
// - liveshare.session.focus
// - liveshare.session.removeView
// - liveshare.session.resetViewLocation
// - liveshare.session.toggleVisibility
// - liveshare.shareServer
// - liveshare.shareTerminal
// - liveshare.signInAndReload
// - liveshare.signin
// - liveshare.signin.token
// - liveshare.signout
// - liveshare.start
// - liveshare.startFromActivityBar
// - liveshare.startFromFileTreeExplorer
// - liveshare.startFromWelcomeContent
// - liveshare.startFromWelcomePage
// - liveshare.startPresentation
// - liveshare.startReadOnly
// - liveshare.startReadOnlyFromActivityBar
// - liveshare.startReadOnlyFromFileTreeExplorer
// - liveshare.startReadOnlyFromWelcomeContent
// - liveshare.unfollowFromActivityBar
// - liveshare.unfollowFromFileTreeExplorer
// - liveshare.unshareServer
// - liveshare.workbench.dispose
// - markdown.editor.insertImageFromWorkspace
// - markdown.editor.insertLinkFromWorkspace
// - markdown.findAllFileReferences
// - markdown.preview.refresh
// - markdown.preview.toggleLock
// - markdown.showLockedPreviewToSide
// - markdown.showPreviewSecuritySelector
// - markdown.showSource
// - markdownlint.fixAll
// - markdownlint.lintWorkspace
// - markdownlint.openConfigFile
// - markdownlint.toggleLinting
// - material-icon-theme.activateIcons
// - material-icon-theme.changeFileColor
// - material-icon-theme.changeFolderColor
// - material-icon-theme.changeFolderTheme
// - material-icon-theme.changeOpacity
// - material-icon-theme.changeSaturation
// - material-icon-theme.restoreDefaultConfig
// - material-icon-theme.toggleExplorerArrows
// - material-icon-theme.toggleGrayscale
// - material-icon-theme.toggleIconPacks
// - mdb.addCollection
// - mdb.addConnection
// - mdb.addConnectionWithURI
// - mdb.addDatabase
// - mdb.changeActiveConnection
// - mdb.changeExportToLanguageAddons
// - mdb.cloneDocumentFromTreeView
// - mdb.codeLens.showMoreDocumentsClicked
// - mdb.connect
// - mdb.connectToConnectionTreeItem
// - mdb.connectWithURI
// - mdb.copyCollectionName
// - mdb.copyConnectionString
// - mdb.copyDatabaseName
// - mdb.copyDocumentContentsFromTreeView
// - mdb.copySchemaFieldName
// - mdb.createIndexFromTreeView
// - mdb.createNewPlaygroundFromOverviewPage
// - mdb.createNewPlaygroundFromTreeView
// - mdb.createPlayground
// - mdb.deleteDocumentFromTreeView
// - mdb.disconnect
// - mdb.disconnectFromConnectionTreeItem
// - mdb.dropCollection
// - mdb.dropDatabase
// - mdb.exportToCsharp
// - mdb.exportToJava
// - mdb.exportToNode
// - mdb.exportToPython
// - mdb.exportToRuby
// - mdb.fixAllInvalidInteractiveSyntax
// - mdb.fixThisInvalidInteractiveSyntax
// - mdb.generateObjectIdToClipboard
// - mdb.insertDocumentFromTreeView
// - mdb.insertObjectIdToEditor
// - mdb.openMongoDBDocumentFromCodeLens
// - mdb.openMongoDBDocumentFromTree
// - mdb.openMongoDBShell
// - mdb.openOverviewPage
// - mdb.openPlaygroundFromTreeView
// - mdb.refreshCollection
// - mdb.refreshConnection
// - mdb.refreshDatabase
// - mdb.refreshDocumentList
// - mdb.refreshIndexes
// - mdb.refreshPlaygroundsFromTreeView
// - mdb.refreshSchema
// - mdb.removeConnection
// - mdb.renameConnection
// - mdb.runPlayground
// - mdb.searchForDocuments
// - mdb.treeItemRemoveConnection
// - mdb.treeViewOpenMongoDBShell
// - mdb.viewCollectionDocuments
// - menu.resetHiddenStates
// - merge-conflict.accept.all-both
// - merge-conflict.accept.all-current
// - merge-conflict.accept.all-incoming
// - merge-conflict.accept.both
// - merge-conflict.accept.current
// - merge-conflict.accept.incoming
// - merge-conflict.accept.selection
// - merge-conflict.compare
// - merge-conflict.next
// - merge-conflict.previous
// - merge.acceptAllInput1
// - merge.acceptAllInput2
// - merge.columnLayout
// - merge.dev.copyContentsJson
// - merge.dev.loadContentsFromFolder
// - merge.dev.openContentsJson
// - merge.dev.openSelectionInTemporaryMergeEditor
// - merge.dev.saveContentsToFolder
// - merge.goToNextUnhandledConflict
// - merge.goToPreviousUnhandledConflict
// - merge.mixedLayout
// - merge.openBaseEditor
// - merge.openResult
// - merge.showBase
// - merge.showBaseCenter
// - merge.showBaseTop
// - merge.showNonConflictingChanges
// - merge.toggleActiveConflictInput1
// - merge.toggleActiveConflictInput2
// - mergeEditor.acceptMerge
// - mergeEditor.compareInput1WithBase
// - mergeEditor.compareInput2WithBase
// - mergeEditor.resetCloseWithConflictsChoice
// - mergeEditor.resetResultToBaseAndAutoMerge
// - mongoDBConnectionExplorer.focus
// - mongoDBConnectionExplorer.removeView
// - mongoDBConnectionExplorer.resetViewLocation
// - mongoDBConnectionExplorer.toggleVisibility
// - mongoDBHelpExplorer.focus
// - mongoDBHelpExplorer.removeView
// - mongoDBHelpExplorer.resetViewLocation
// - mongoDBHelpExplorer.toggleVisibility
// - mongoDBPlaygroundsExplorer.focus
// - mongoDBPlaygroundsExplorer.removeView
// - mongoDBPlaygroundsExplorer.resetViewLocation
// - mongoDBPlaygroundsExplorer.toggleVisibility
// - multiCommand.addLogPoint
// - multiCommand.addLogPointReturnValue
// - multiCommand.createConsoleLog
// - multiCommand.saveAndClearConsole
// - noop
// - notebook.cancelExecution
// - notebook.cell.cancelExecution
// - notebook.cell.changeLanguage
// - notebook.cell.collapseAllCellInputs
// - notebook.cell.collapseAllCellOutputs
// - notebook.cell.copy
// - notebook.cell.cut
// - notebook.cell.executeAndFocusContainer
// - notebook.cell.executeCellAndBelow
// - notebook.cell.executeCellsAbove
// - notebook.cell.expandAllCellInputs
// - notebook.cell.expandAllCellOutputs
// - notebook.cell.insertCodeCellAboveAndFocusContainer
// - notebook.cell.insertCodeCellAtTop
// - notebook.cell.insertCodeCellBelowAndFocusContainer
// - notebook.cell.insertMarkdownCellAbove
// - notebook.cell.insertMarkdownCellAtTop
// - notebook.cell.insertMarkdownCellBelow
// - notebook.cell.joinSelected
// - notebook.cell.paste
// - notebook.cell.toggleLineNumbers
// - notebook.cell.toggleOutputs
// - notebook.clearAllCellsOutputs
// - notebook.clearNotebookEdtitorTypeCache
// - notebook.clearNotebookKernelsMRUCache
// - notebook.diff.cell.revertInput
// - notebook.diff.cell.revertMetadata
// - notebook.diff.cell.revertOutputs
// - notebook.diff.cell.switchOutputRenderingStyleToText
// - notebook.diff.showMetadata
// - notebook.diff.showOutputs
// - notebook.diff.switchToText
// - notebook.execute
// - notebook.inspectLayout
// - notebook.interruptExecution
// - notebook.renderAllMarkdownCells
// - notebook.revealLastFailedCell
// - notebook.revealRunningCell
// - notebook.saveMimeTypeOrder
// - notebook.setProfile
// - notebook.toggleCellToolbarPosition
// - notebook.toggleCellToolbarPositionFromEditorTitle
// - notebook.toggleLayoutTroubleshoot
// - notebook.toggleLineNumbers
// - notebook.toggleLineNumbersFromEditorTitle
// - notifications.clearAll
// - notifications.focusToasts
// - notifications.showList
// - notifications.toggleDoNotDisturbMode
// - notifications.toggleList
// - npm.debugScript
// - npm.debugScriptFromHover
// - npm.focus
// - npm.openScript
// - npm.packageManager
// - npm.refresh
// - npm.removeView
// - npm.resetViewLocation
// - npm.runInstall
// - npm.runScript
// - npm.runScriptFromFolder
// - npm.runScriptFromHover
// - npm.runSelectedScript
// - npm.toggleVisibility
// - openEditors.closeAll
// - openEditors.newUntitledFile
// - openInIntegratedTerminal
// - openInTerminal
// - openReference
// - outline-map-view.focus
// - outline-map-view.removeView
// - outline-map-view.resetViewLocation
// - outline-map-view.toggleVisibility
// - outline-map.addDepth
// - outline-map.freeze
// - outline-map.pin
// - outline-map.reduceDepth
// - outline-map.unpin
// - outline.collapse
// - outline.expand
// - outline.filterOnType
// - outline.focus
// - outline.followCursor
// - outline.removeView
// - outline.resetViewLocation
// - outline.sortByKind
// - outline.sortByName
// - outline.sortByPosition
// - outline.toggleVisibility
// - paste
// - perf.event.profiling
// - perf.insta.printAsyncCycles
// - perf.insta.printTraces
// - perfview.show
// - pr.addFileComment
// - pr.addLabelsToNewPr
// - pr.applySuggestion
// - pr.cancelEditComment
// - pr.checkoutByNumber
// - pr.close
// - pr.collapseAllComments
// - pr.configurePRViewlet
// - pr.configureRemotes
// - pr.copyCommentLink
// - pr.copyCommitHash
// - pr.copyVscodeDevPrLink
// - pr.create
// - pr.createComment
// - pr.createSingleComment
// - pr.deleteComment
// - pr.deleteLocalBranch
// - pr.deleteLocalBranchesNRemotes
// - pr.dismissNotification
// - pr.editComment
// - pr.editQuery
// - pr.exit
// - pr.goToNextDiffInPr
// - pr.goToPreviousDiffInPr
// - pr.loadMore
// - pr.makeSuggestion
// - pr.markFileAsViewed
// - pr.merge
// - pr.openAllDiffs
// - pr.openDescription
// - pr.openDescriptionToTheSide
// - pr.openDiffView
// - pr.openDiffViewFromEditor
// - pr.openFileOnGitHub
// - pr.openModifiedFile
// - pr.openOriginalFile
// - pr.openPullRequestOnGitHub
// - pr.openPullsWebsite
// - pr.openReview
// - pr.pick
// - pr.pickOnVscodeDev
// - pr.pushAndCreate
// - pr.readyForReview
// - pr.refreshActivePullRequest
// - pr.refreshChanges
// - pr.refreshDescription
// - pr.refreshList
// - pr.refreshPullRequest
// - pr.resetViewedFiles
// - pr.resolveReviewThread
// - pr.saveComment
// - pr.setFileListLayoutAsFlat
// - pr.setFileListLayoutAsTree
// - pr.showDiffAll
// - pr.showDiffSinceLastReview
// - pr.signin
// - pr.signinAndRefreshList
// - pr.signinNoEnterprise
// - pr.signinenterprise
// - pr.startReview
// - pr.unmarkFileAsViewed
// - pr.unresolveReviewThread
// - pr:github.focus
// - pr:github.removeView
// - pr:github.resetViewLocation
// - pr:github.toggleVisibility
// - prStatus:github.focus
// - prStatus:github.resetViewLocation
// - prettier.createConfigFile
// - prettier.forceFormatDocument
// - prettier.openOutput
// - problems.action.copyMessage
// - problems.action.copyRelatedInformationMessage
// - problems.action.showMultilineMessage
// - problems.action.showSinglelineMessage
// - refactorPreview
// - refactorPreview.discard
// - refactorPreview.focus
// - refactorPreview.groupByFile
// - refactorPreview.groupByType
// - refactorPreview.resetViewContainerLocation
// - refactorPreview.resetViewLocation
// - refactorPreview.toggleGrouping
// - references-view.clear
// - references-view.clearHistory
// - references-view.copy
// - references-view.copyAll
// - references-view.copyPath
// - references-view.findImplementations
// - references-view.pickFromHistory
// - references-view.refind
// - references-view.refresh
// - references-view.removeCallItem
// - references-view.removeReferenceItem
// - references-view.removeTypeItem
// - references-view.showIncomingCalls
// - references-view.showOutgoingCalls
// - references-view.showSubtypes
// - references-view.showSupertypes
// - references-view.showTypeHierarchy
// - references-view.tree.focus
// - references-view.tree.resetViewLocation
// - remote-wsl-recommender.connectToWSL
// - remote-wsl-recommender.gettingStarted
// - remote.explorer.switch
// - remote.tunnel.changeLocalPort
// - remote.tunnel.closeCommandPalette
// - remote.tunnel.copyAddressCommandPalette
// - remote.tunnel.forwardCommandPalette
// - remote.tunnel.forwardInline
// - remote.tunnel.open
// - remote.tunnel.openCommandPalette
// - remote.tunnel.openPreview
// - remote.tunnel.setProtocolHttp
// - remote.tunnel.setProtocolHttps
// - removeRootFolder
// - repl.action.copyAll
// - replacePreviousChar
// - resetGettingStartedProgress
// - revealInExplorer
// - review.diffLocalWithPrHead
// - review.diffWithPrHead
// - review.openFile
// - review.openLocalFile
// - review.suggestDiff
// - scm.openInTerminal
// - scrollEditorBottom
// - scrollEditorTop
// - scrollLeft
// - scrollRight
// - search.action.clearHistory
// - search.action.clearSearchResults
// - search.action.collapseSearchResults
// - search.action.copyAll
// - search.action.excludeFromSearch
// - search.action.expandSearchResults
// - search.action.focusFilesToExclude
// - search.action.focusFilesToInclude
// - search.action.focusSearchList
// - search.action.openEditor
// - search.action.openNewEditor
// - search.action.openNewEditorFromView
// - search.action.openNewEditorToSide
// - search.action.refreshSearchResults
// - search.action.revealInSideBar
// - search.action.viewAsList
// - search.action.viewAsTree
// - searchEditorApplyChanges.apply
// - selectFirstSuggestion
// - selectForCompare
// - selectLastSuggestion
// - setRootFolder
// - setSelection
// - settings.filterByOnline
// - settings.filterByTelemetry
// - settings.filterUntrusted
// - settings.switchToJSON
// - showEditorScreenReaderNotification
// - simpleBrowser.show
// - slidesExplorer.focus
// - slidesExplorer.resetViewLocation
// - svelte.extractComponent
// - svelte.kit.generateError
// - svelte.kit.generateLayout
// - svelte.kit.generateLayoutLoad
// - svelte.kit.generateLayoutServerLoad
// - svelte.kit.generateMultipleFiles
// - svelte.kit.generatePage
// - svelte.kit.generatePageLoad
// - svelte.kit.generatePageServerLoad
// - svelte.kit.generateServer
// - svelte.restartLanguageServer
// - svelte.showCompiledCodeToSide
// - svelte.typescript.findAllFileReferences
// - svelte.typescript.findComponentReferences
// - terminal.focus
// - terminal.removeView
// - terminal.resetViewContainerLocation
// - terminal.resetViewLocation
// - terminal.toggleVisibility
// - testing.cancelTestRefresh
// - testing.clearTestResults
// - testing.collapseAll
// - testing.configureProfile
// - testing.continuousRunUsingForTest
// - testing.debug
// - testing.debugSelected
// - testing.getSelectedProfiles
// - testing.hideTest
// - testing.openMessageInEditor
// - testing.run
// - testing.runSelected
// - testing.runUsing
// - testing.searchForTestExtension
// - testing.selectDefaultTestProfiles
// - testing.sortByDuration
// - testing.sortByLocation
// - testing.sortByStatus
// - testing.startContinuousRun
// - testing.stopContinuousRun
// - testing.toggleContinuousRunForTest
// - testing.unhideAllTests
// - testing.unhideTest
// - testing.viewAsList
// - testing.viewAsTree
// - thunder-client-sidebar.focus
// - thunder-client-sidebar.removeView
// - thunder-client-sidebar.resetViewLocation
// - thunder-client-sidebar.toggleVisibility
// - thunder-client.account
// - thunder-client.convert-postman
// - thunder-client.new-request
// - thunder-client.open-docs
// - thunder-client.open-settings
// - thunder-client.release-notes
// - thunder-client.reload-sidebar
// - thunder-client.run-last-request
// - thunder-client.save-to-workspace
// - thunder-client.show-logs
// - timeline.focus
// - timeline.refresh
// - timeline.removeView
// - timeline.resetViewLocation
// - timeline.toggleExcludeSource:git-history
// - timeline.toggleExcludeSource:timeline.localHistory
// - timeline.toggleFollowActiveEditor
// - timeline.toggleVisibility
// - todo.editorArchive
// - todo.editorToggleBox
// - todo.editorToggleCancelled
// - todo.editorToggleDone
// - todo.editorToggleStart
// - todo.embeddedClearFilter
// - todo.embeddedFilter
// - todo.open
// - todo.openEmbedded
// - todo.toggleTimer
// - todo.viewEmbeddedClearFilter
// - todo.viewEmbeddedCollapse
// - todo.viewEmbeddedExpand
// - todo.viewEmbeddedFilter
// - todo.viewEmbeddedShowActiveFile
// - todo.viewEmbeddedShowAllFiles
// - todo.viewEmbeddedToggleAllFiles
// - todo.viewFilesCollapse
// - todo.viewFilesExpand
// - todo.viewFilesOpen
// - todo.viewOpenFile
// - todo.viewRevealTodo
// - todo.views.1files.focus
// - todo.views.1files.removeView
// - todo.views.1files.resetViewLocation
// - todo.views.1files.toggleVisibility
// - todo.views.2embedded.focus
// - todo.views.2embedded.removeView
// - todo.views.2embedded.resetViewLocation
// - todo.views.2embedded.toggleVisibility
// - toggle-tabout
// - toggle.diff.ignoreTrimWhitespace
// - toggle.diff.renderSideBySide
// - toggle.window.commandCenter
// - toggle.workbench.layoutControl.enabled
// - toggleEscapeSequenceLogging
// - ts-error-translator.dont-show-again
// - ts-error-translator.show-tip
// - typescript.findAllFileReferences
// - typescript.goToProjectConfig
// - typescript.goToSourceDefinition
// - typescript.openTsServerLog
// - typescript.organizeImports
// - typescript.reloadProjects
// - typescript.removeUnusedImports
// - typescript.restartTsServer
// - typescript.selectTypeScriptVersion
// - typescript.sortImports
// - typescript.tsserverRequest
// - unocss.reload
// - update.check
// - update.checkForUpdate
// - update.checking
// - update.downloadNow
// - update.downloadUpdate
// - update.downloading
// - update.install
// - update.installUpdate
// - update.restart
// - update.restartToUpdate
// - update.showCurrentReleaseNotes
// - update.updating
// - userDataProfiles
// - userDataProfiles.resetViewContainerLocation
// - variables.collapse
// - vscode-account.askForLogin
// - vscode-account.login
// - vscode-account.logout
// - vscode-html-css.dispose
// - vscode-html-css.validate
// - vscode-revealjs.exportHTML
// - vscode-revealjs.exportPDF
// - vscode-revealjs.goToSlide
// - vscode-revealjs.showRevealJS
// - vscode-revealjs.showRevealJSInBrowser
// - vscode-revealjs.showSample
// - vscode-revealjs.stopRevealJSServer
// - walkthroughs.selectStep
// - watch.collapse
// - welcome.markStepComplete
// - welcome.markStepIncomplete
// - welcome.showAllWalkthroughs
// - workbench.action.acceptSelectedQuickOpenItem
// - workbench.action.addComment
// - workbench.action.addRootFolder
// - workbench.action.alignPanelCenter
// - workbench.action.alignPanelJustify
// - workbench.action.alignPanelLeft
// - workbench.action.alignPanelRight
// - workbench.action.alternativeAcceptSelectedQuickOpenItem
// - workbench.action.askCommandInChat
// - workbench.action.blur
// - workbench.action.chat.cancel
// - workbench.action.chat.copyAll
// - workbench.action.chat.copyCodeBlock
// - workbench.action.chat.copyItem
// - workbench.action.chat.export
// - workbench.action.chat.import
// - workbench.action.chat.insertCodeBlock
// - workbench.action.chat.insertIntoNewFile
// - workbench.action.chat.insertIntoNotebook
// - workbench.action.chat.openInEditor
// - workbench.action.chat.openInSidebar
// - workbench.action.chat.remove
// - workbench.action.chat.submit
// - workbench.action.chat.voteDown
// - workbench.action.chat.voteUp
// - workbench.action.chatEditor.clear
// - workbench.action.chatEditor.clearHistory
// - workbench.action.clearCommandHistory
// - workbench.action.clearEditorHistory
// - workbench.action.clearLocalePreference
// - workbench.action.clearRecentFiles
// - workbench.action.closeActivePinnedEditor
// - workbench.action.closeAuxiliaryBar
// - workbench.action.closeEditorInAllGroups
// - workbench.action.closeEditorsAndGroup
// - workbench.action.closeEditorsInOtherGroups
// - workbench.action.closeEditorsToTheLeft
// - workbench.action.closeEditorsToTheRight
// - workbench.action.closeOtherEditors
// - workbench.action.closePanel
// - workbench.action.closeSidebar
// - workbench.action.collapseAllComments
// - workbench.action.compareEditor.focusOtherSide
// - workbench.action.compareEditor.focusPrimarySide
// - workbench.action.compareEditor.focusSecondarySide
// - workbench.action.configureLanguageBasedSettings
// - workbench.action.configureLocale
// - workbench.action.configureRuntimeArguments
// - workbench.action.continueOn.extensions
// - workbench.action.createTerminalEditor
// - workbench.action.createTerminalEditorSide
// - workbench.action.customizeLayout
// - workbench.action.debug.callStackBottom
// - workbench.action.debug.callStackDown
// - workbench.action.debug.callStackTop
// - workbench.action.debug.callStackUp
// - workbench.action.debug.configure
// - workbench.action.debug.disconnectAndSuspend
// - workbench.action.debug.focusProcess
// - workbench.action.debug.restartFrame
// - workbench.action.debug.reverseContinue
// - workbench.action.debug.selectDebugConsole
// - workbench.action.debug.selectDebugSession
// - workbench.action.debug.selectRepl
// - workbench.action.debug.selectandstart
// - workbench.action.debug.showLoadedScripts
// - workbench.action.debug.stepBack
// - workbench.action.debug.terminateThread
// - workbench.action.decreaseViewHeight
// - workbench.action.decreaseViewSize
// - workbench.action.decreaseViewWidth
// - workbench.action.download
// - workbench.action.duplicateActiveEditorGroupDown
// - workbench.action.duplicateActiveEditorGroupLeft
// - workbench.action.duplicateActiveEditorGroupRight
// - workbench.action.duplicateActiveEditorGroupUp
// - workbench.action.duplicateWorkspaceInNewWindow
// - workbench.action.editor.changeEOL
// - workbench.action.editor.changeEncoding
// - workbench.action.editorLayoutSingle
// - workbench.action.editorLayoutThreeColumns
// - workbench.action.editorLayoutThreeRows
// - workbench.action.editorLayoutTwoByTwoGrid
// - workbench.action.editorLayoutTwoColumns
// - workbench.action.editorLayoutTwoColumnsBottom
// - workbench.action.editorLayoutTwoRows
// - workbench.action.editorLayoutTwoRowsRight
// - workbench.action.evenEditorWidths
// - workbench.action.expandAllComments
// - workbench.action.expandUnresolvedComments
// - workbench.action.extensionHostProfiler.stop
// - workbench.action.files.newFile
// - workbench.action.files.openFileFolderInNewWindow
// - workbench.action.files.openFileInNewWindow
// - workbench.action.files.openFolderInNewWindow
// - workbench.action.files.resetActiveEditorReadonlyInSession
// - workbench.action.files.revert
// - workbench.action.files.saveAll
// - workbench.action.files.saveFiles
// - workbench.action.files.setActiveEditorReadonlyInSession
// - workbench.action.files.setActiveEditorWriteableInSession
// - workbench.action.files.toggleActiveEditorReadonlyInSession
// - workbench.action.firstEditorInGroup
// - workbench.action.focusAboveGroupWithoutWrap
// - workbench.action.focusActiveEditorGroup
// - workbench.action.focusActivityBar
// - workbench.action.focusAuxiliaryBar
// - workbench.action.focusBanner
// - workbench.action.focusBelowGroupWithoutWrap
// - workbench.action.focusCommentsPanel
// - workbench.action.focusFirstSideEditor
// - workbench.action.focusLastEditorGroup
// - workbench.action.focusLeftGroupWithoutWrap
// - workbench.action.focusNextGroup
// - workbench.action.focusOtherSideEditor
// - workbench.action.focusPanel
// - workbench.action.focusPreviousGroup
// - workbench.action.focusQuickOpen
// - workbench.action.focusRightGroupWithoutWrap
// - workbench.action.focusSecondSideEditor
// - workbench.action.focusStatusBar
// - workbench.action.focusTitleBar
// - workbench.action.generateColorTheme
// - workbench.action.increaseViewHeight
// - workbench.action.increaseViewSize
// - workbench.action.increaseViewWidth
// - workbench.action.inspectContextKeys
// - workbench.action.inspectKeyMappings
// - workbench.action.inspectKeyMappingsJSON
// - workbench.action.joinAllGroups
// - workbench.action.joinTwoGroups
// - workbench.action.localHistory.compareWithFile
// - workbench.action.localHistory.compareWithPrevious
// - workbench.action.localHistory.compareWithSelected
// - workbench.action.localHistory.create
// - workbench.action.localHistory.delete
// - workbench.action.localHistory.deleteAll
// - workbench.action.localHistory.open
// - workbench.action.localHistory.rename
// - workbench.action.localHistory.restore
// - workbench.action.localHistory.restoreViaEditor
// - workbench.action.localHistory.restoreViaPicker
// - workbench.action.localHistory.revealInOS
// - workbench.action.localHistory.selectForCompare
// - workbench.action.lockEditorGroup
// - workbench.action.logStorage
// - workbench.action.logWorkingCopies
// - workbench.action.manageTrustedDomain
// - workbench.action.maximizeEditor
// - workbench.action.minimizeOtherEditors
// - workbench.action.moveEditorToAboveGroup
// - workbench.action.moveEditorToBelowGroup
// - workbench.action.moveEditorToLeftGroup
// - workbench.action.moveEditorToRightGroup
// - workbench.action.moveFocusedView
// - workbench.action.movePanelToSecondarySideBar
// - workbench.action.movePanelToSidePanel
// - workbench.action.moveSecondarySideBarToPanel
// - workbench.action.moveSideBarLeft
// - workbench.action.moveSideBarRight
// - workbench.action.moveSidePanelToPanel
// - workbench.action.moveView
// - workbench.action.navigateBackInEditLocations
// - workbench.action.navigateBackInNavigationLocations
// - workbench.action.navigateDown
// - workbench.action.navigateEditorGroups
// - workbench.action.navigateForwardInEditLocations
// - workbench.action.navigateForwardInNavigationLocations
// - workbench.action.navigateLast
// - workbench.action.navigateLeft
// - workbench.action.navigatePreviousInEditLocations
// - workbench.action.navigatePreviousInNavigationLocations
// - workbench.action.navigateRight
// - workbench.action.navigateToLastNavigationLocation
// - workbench.action.navigateUp
// - workbench.action.newGroupAbove
// - workbench.action.newGroupBelow
// - workbench.action.newGroupLeft
// - workbench.action.newGroupRight
// - workbench.action.nextPanelView
// - workbench.action.nextSideBarView
// - workbench.action.openAccessibilitySettings
// - workbench.action.openActiveLogOutputFile
// - workbench.action.openApplicationSettingsJson
// - workbench.action.openDefaultKeybindingsFile
// - workbench.action.openDocumentationUrl
// - workbench.action.openEditorAtIndex
// - workbench.action.openExtensionLogsFolder
// - workbench.action.openFolderSettings
// - workbench.action.openFolderSettingsFile
// - workbench.action.openGlobalKeybindingsFile
// - workbench.action.openGlobalSettings
// - workbench.action.openIssueReporter
// - workbench.action.openLicenseUrl
// - workbench.action.openLogFile
// - workbench.action.openLogsFolder
// - workbench.action.openNewsletterSignupUrl
// - workbench.action.openNextRecentlyUsedEditor
// - workbench.action.openNextRecentlyUsedEditorInGroup
// - workbench.action.openPreviousEditorFromHistory
// - workbench.action.openPreviousRecentlyUsedEditor
// - workbench.action.openPreviousRecentlyUsedEditorInGroup
// - workbench.action.openPrivacyStatementUrl
// - workbench.action.openProcessExplorer
// - workbench.action.openRawDefaultSettings
// - workbench.action.openRemoteSettings
// - workbench.action.openRemoteSettingsFile
// - workbench.action.openRequestFeatureUrl
// - workbench.action.openSettings2
// - workbench.action.openSettingsJson
// - workbench.action.openSnippets
// - workbench.action.openTipsAndTricksUrl
// - workbench.action.openTwitterUrl
// - workbench.action.openUserDataFolder
// - workbench.action.openVideoTutorialsUrl
// - workbench.action.openView
// - workbench.action.openWalkthrough
// - workbench.action.openWorkspace
// - workbench.action.openWorkspaceConfigFile
// - workbench.action.openWorkspaceFromEditor
// - workbench.action.openWorkspaceInNewWindow
// - workbench.action.openWorkspaceSettings
// - workbench.action.openWorkspaceSettingsFile
// - workbench.action.output.show.GitHub.vscode-pull-request-github.GitHub Pull Request
// - workbench.action.output.show.editSessions
// - workbench.action.output.show.extension-output-antfu.iconify-#1-Iconify IntelliSense
// - workbench.action.output.show.extension-output-antfu.unocss-#1-UnoCSS
// - workbench.action.output.show.extension-output-esbenp.prettier-vscode-#1-Prettier
// - workbench.action.output.show.extension-output-formulahendry.code-runner-#1-Code
// - workbench.action.output.show.extension-output-maattdd.gitless-#1-GitLens
// - workbench.action.output.show.extension-output-mhutchie.git-graph-#1-Git Graph
// - workbench.action.output.show.extension-output-mongodb.mongodb-vscode-#1-mongodb
// - workbench.action.output.show.extension-output-mongodb.mongodb-vscode-#2-MongoDB Language Server
// - workbench.action.output.show.extension-output-mongodb.mongodb-vscode-#3-Playground output
// - workbench.action.output.show.extension-output-pucelle.vscode-css-navigation-#1-CSS Navigation
// - workbench.action.output.show.extension-output-svelte.svelte-vscode-#1-Svelte
// - workbench.action.output.show.extension-output-vscode.json-language-features-#1-JSON Language Server
// - workbench.action.output.show.exthost
// - workbench.action.output.show.main
// - workbench.action.output.show.notebook.rendering
// - workbench.action.output.show.ptyhost
// - workbench.action.output.show.remoteTunnelService
// - workbench.action.output.show.rendererLog
// - workbench.action.output.show.sharedprocess
// - workbench.action.output.show.tasks
// - workbench.action.output.show.userDataSync
// - workbench.action.output.show.vscode.git.Git
// - workbench.action.output.show.vscode.github-authentication.GitHub Authentication
// - workbench.action.output.show.vscode.github.GitHub
// - workbench.action.output.show.vscode.microsoft-authentication.Microsoft Authentication
// - workbench.action.output.show.vscode.typescript-language-features.TypeScript
// - workbench.action.output.show.workerexthost
// - workbench.action.pauseSocketWriting
// - workbench.action.populateFileFromSnippet
// - workbench.action.positionPanelBottom
// - workbench.action.positionPanelLeft
// - workbench.action.positionPanelRight
// - workbench.action.previewColorTheme
// - workbench.action.previousPanelView
// - workbench.action.previousSideBarView
// - workbench.action.problems.focus
// - workbench.action.quickOpenLeastRecentlyUsedEditor
// - workbench.action.quickOpenNavigateNext
// - workbench.action.quickOpenNavigateNextInTerminalPicker
// - workbench.action.quickOpenNavigatePrevious
// - workbench.action.quickOpenNavigatePreviousInTerminalPicker
// - workbench.action.quickOpenPreviousEditor
// - workbench.action.quickOpenPreviousRecentlyUsedEditor
// - workbench.action.quickOpenRecent
// - workbench.action.quickOpenSelectNext
// - workbench.action.quickOpenSelectPrevious
// - workbench.action.quickOpenTerm
// - workbench.action.quickOpenWithModes
// - workbench.action.quickPickManyToggle
// - workbench.action.quickSwitchWindow
// - workbench.action.quit
// - workbench.action.reloadWindowWithExtensionsDisabled
// - workbench.action.remote.close
// - workbench.action.remote.extensions
// - workbench.action.remote.showStartEntryActions
// - workbench.action.remote.showTunnelStartEntryActions
// - workbench.action.removeRootFolder
// - workbench.action.reopenTextEditor
// - workbench.action.reopenWithEditor
// - workbench.action.reportPerformanceIssueUsingReporter
// - workbench.action.resetFocusedViewLocation
// - workbench.action.resetViewLocations
// - workbench.action.restartExtensionHost
// - workbench.action.revertAndCloseActiveEditor
// - workbench.action.saveWorkspaceAs
// - workbench.action.selectIconTheme
// - workbench.action.selectProductIconTheme
// - workbench.action.setDefaultLogLevel
// - workbench.action.setLogLevel
// - workbench.action.showAboutDialog
// - workbench.action.showAllEditorsByMostRecentlyUsed
// - workbench.action.showEditorsInActiveGroup
// - workbench.action.showEditorsInGroup
// - workbench.action.showEmmetCommands
// - workbench.action.showErrorsWarnings
// - workbench.action.showInteractivePlayground
// - workbench.action.showLogs
// - workbench.action.showOutputChannels
// - workbench.action.showRuntimeExtensions
// - workbench.action.showWindowLog
// - workbench.action.splitEditorToAboveGroup
// - workbench.action.splitEditorToBelowGroup
// - workbench.action.splitEditorToFirstGroup
// - workbench.action.splitEditorToLastGroup
// - workbench.action.splitEditorToLeftGroup
// - workbench.action.splitEditorToNextGroup
// - workbench.action.splitEditorToPreviousGroup
// - workbench.action.splitEditorToRightGroup
// - workbench.action.stopTracing
// - workbench.action.switchWindow
// - workbench.action.tasks.configureDefaultBuildTask
// - workbench.action.tasks.configureDefaultTestTask
// - workbench.action.tasks.configureTaskRunner
// - workbench.action.tasks.manageAutomaticRunning
// - workbench.action.tasks.openUserTasks
// - workbench.action.tasks.openWorkspaceFileTasks
// - workbench.action.tasks.reRunTask
// - workbench.action.tasks.restartTask
// - workbench.action.tasks.runTask
// - workbench.action.tasks.showLog
// - workbench.action.tasks.showTasks
// - workbench.action.tasks.terminate
// - workbench.action.tasks.test
// - workbench.action.tasks.toggleProblems
// - workbench.action.terminal.attachToSession
// - workbench.action.terminal.changeColor
// - workbench.action.terminal.changeColorInstance
// - workbench.action.terminal.changeColorPanel
// - workbench.action.terminal.changeIcon
// - workbench.action.terminal.changeIconInstance
// - workbench.action.terminal.changeIconPanel
// - workbench.action.terminal.clear
// - workbench.action.terminal.clearPreviousSessionHistory
// - workbench.action.terminal.copyLastCommandOutput
// - workbench.action.terminal.copySelectionAsHtml
// - workbench.action.terminal.detachSession
// - workbench.action.terminal.focus
// - workbench.action.terminal.focusAtIndex1
// - workbench.action.terminal.focusAtIndex2
// - workbench.action.terminal.focusAtIndex3
// - workbench.action.terminal.focusAtIndex4
// - workbench.action.terminal.focusAtIndex5
// - workbench.action.terminal.focusAtIndex6
// - workbench.action.terminal.focusAtIndex7
// - workbench.action.terminal.focusAtIndex8
// - workbench.action.terminal.focusAtIndex9
// - workbench.action.terminal.join
// - workbench.action.terminal.joinInstance
// - workbench.action.terminal.kill
// - workbench.action.terminal.killAll
// - workbench.action.terminal.moveToEditor
// - workbench.action.terminal.moveToEditorInstance
// - workbench.action.terminal.moveToTerminalPanel
// - workbench.action.terminal.newInActiveWorkspace
// - workbench.action.terminal.newWithCwd
// - workbench.action.terminal.newWithProfile
// - workbench.action.terminal.openFileLink
// - workbench.action.terminal.openSettings
// - workbench.action.terminal.openUrlLink
// - workbench.action.terminal.relaunch
// - workbench.action.terminal.rename
// - workbench.action.terminal.renamePanel
// - workbench.action.terminal.renameWithArg
// - workbench.action.terminal.resizePaneDown
// - workbench.action.terminal.resizePaneLeft
// - workbench.action.terminal.resizePaneRight
// - workbench.action.terminal.resizePaneUp
// - workbench.action.terminal.runActiveFile
// - workbench.action.terminal.runSelectedText
// - workbench.action.terminal.selectAll
// - workbench.action.terminal.selectDefaultShell
// - workbench.action.terminal.selectToNextLine
// - workbench.action.terminal.selectToPreviousLine
// - workbench.action.terminal.setDimensions
// - workbench.action.terminal.showEnvironmentContributions
// - workbench.action.terminal.showTabs
// - workbench.action.terminal.showTextureAtlas
// - workbench.action.terminal.sizeToContentWidthInstance
// - workbench.action.terminal.splitInActiveWorkspace
// - workbench.action.terminal.switchTerminal
// - workbench.action.terminal.unsplit
// - workbench.action.terminal.unsplitInstance
// - workbench.action.terminal.writeDataToTerminal
// - workbench.action.toggleActivityBarVisibility
// - workbench.action.toggleAutoSave
// - workbench.action.toggleCenteredLayout
// - workbench.action.toggleCommenting
// - workbench.action.toggleConfirmBeforeClose
// - workbench.action.toggleEditorGroupLock
// - workbench.action.toggleEditorType
// - workbench.action.toggleEditorVisibility
// - workbench.action.toggleEditorWidths
// - workbench.action.toggleKeepEditors
// - workbench.action.toggleKeybindingsLog
// - workbench.action.toggleLightDarkThemes
// - workbench.action.toggleMaximizedPanel
// - workbench.action.toggleMenuBar
// - workbench.action.toggleMultiCursorModifier
// - workbench.action.toggleNotebookClipboardLog
// - workbench.action.toggleScreencastMode
// - workbench.action.toggleSearchOnType
// - workbench.action.toggleSidebarPosition
// - workbench.action.toggleSplitEditorInGroup
// - workbench.action.toggleSplitEditorInGroupLayout
// - workbench.action.toggleStatusbarVisibility
// - workbench.action.toggleTabsVisibility
// - workbench.action.triggerReconnect
// - workbench.action.unlockEditorGroup
// - workbench.action.url.openUrl
// - workbench.action.webview.openDeveloperTools
// - workbench.action.webview.reloadWebviewAction
// - workbench.actions.sync.compareWithLocal
// - workbench.actions.sync.editMachineName
// - workbench.actions.sync.replaceCurrent
// - workbench.actions.sync.resolveResource
// - workbench.actions.sync.turnOffSyncOnMachine
// - workbench.actions.syncData.reset
// - workbench.actions.table.workbench.panel.markers.view.viewAsTable
// - workbench.actions.table.workbench.panel.markers.view.viewAsTree
// - workbench.actions.treeView.codetour.tours.collapseAll
// - workbench.actions.treeView.codetour.tours.refresh
// - workbench.actions.treeView.workbench.panel.markers.view.collapseAll
// - workbench.actions.view.toggleProblems
// - workbench.actions.workbench.panel.comments.toggleResolvedComments
// - workbench.actions.workbench.panel.comments.toggleUnResolvedComments
// - workbench.actions.workbench.panel.markers.view.toggleActiveFile
// - workbench.actions.workbench.panel.markers.view.toggleErrors
// - workbench.actions.workbench.panel.markers.view.toggleExcludedFiles
// - workbench.actions.workbench.panel.markers.view.toggleInfos
// - workbench.actions.workbench.panel.markers.view.toggleWarnings
// - workbench.debug.action.copyAll
// - workbench.debug.action.focusBreakpointsView
// - workbench.debug.action.focusCallStackView
// - workbench.debug.action.focusRepl
// - workbench.debug.action.focusVariablesView
// - workbench.debug.action.focusWatchView
// - workbench.debug.breakPointsView.removeView
// - workbench.debug.breakPointsView.resetViewLocation
// - workbench.debug.breakPointsView.toggleVisibility
// - workbench.debug.callStackView.removeView
// - workbench.debug.callStackView.resetViewLocation
// - workbench.debug.callStackView.toggleVisibility
// - workbench.debug.loadedScriptsView.focus
// - workbench.debug.loadedScriptsView.resetViewLocation
// - workbench.debug.panel.action.clearReplAction
// - workbench.debug.variablesView.removeView
// - workbench.debug.variablesView.resetViewLocation
// - workbench.debug.variablesView.toggleVisibility
// - workbench.debug.viewlet.action.addFunctionBreakpointAction
// - workbench.debug.viewlet.action.addWatchExpression
// - workbench.debug.viewlet.action.copyValue
// - workbench.debug.viewlet.action.disableAllBreakpoints
// - workbench.debug.viewlet.action.enableAllBreakpoints
// - workbench.debug.viewlet.action.reapplyBreakpointsAction
// - workbench.debug.viewlet.action.removeAllBreakpoints
// - workbench.debug.viewlet.action.removeAllWatchExpressions
// - workbench.debug.viewlet.action.removeBreakpoint
// - workbench.debug.viewlet.action.toggleBreakpointsActivatedAction
// - workbench.debug.viewlet.action.viewMemory
// - workbench.debug.watchExpressionsView.removeView
// - workbench.debug.watchExpressionsView.resetViewLocation
// - workbench.debug.watchExpressionsView.toggleVisibility
// - workbench.debug.welcome.focus
// - workbench.debug.welcome.resetViewLocation
// - workbench.editSessions.actions.delete
// - workbench.editSessions.actions.deleteAll
// - workbench.editSessions.actions.resetAuth
// - workbench.editSessions.actions.resume
// - workbench.editSessions.actions.resumeFromSerializedPayload
// - workbench.editSessions.actions.resumeLatest
// - workbench.editSessions.actions.showEditSessions
// - workbench.editSessions.actions.showOutputChannel
// - workbench.editSessions.actions.signIn
// - workbench.editSessions.actions.store
// - workbench.editSessions.actions.storeCurrent
// - workbench.explorer.fileView.focus
// - workbench.explorer.fileView.removeView
// - workbench.explorer.fileView.resetViewLocation
// - workbench.explorer.fileView.toggleVisibility
// - workbench.explorer.openEditorsView.removeView
// - workbench.explorer.openEditorsView.resetViewLocation
// - workbench.explorer.openEditorsView.toggleVisibility
// - workbench.extensions.action.addExtensionToWorkspaceRecommendations
// - workbench.extensions.action.addToWorkspaceFolderIgnoredRecommendations
// - workbench.extensions.action.addToWorkspaceFolderRecommendations
// - workbench.extensions.action.addToWorkspaceIgnoredRecommendations
// - workbench.extensions.action.addToWorkspaceRecommendations
// - workbench.extensions.action.checkForUpdates
// - workbench.extensions.action.clearExtensionsSearchResults
// - workbench.extensions.action.clearLanguage
// - workbench.extensions.action.configure
// - workbench.extensions.action.configureKeybindings
// - workbench.extensions.action.configureWorkspaceFolderRecommendedExtensions
// - workbench.extensions.action.configureWorkspaceRecommendedExtensions
// - workbench.extensions.action.copyExtension
// - workbench.extensions.action.copyExtensionId
// - workbench.extensions.action.debugExtensionHost
// - workbench.extensions.action.disableAll
// - workbench.extensions.action.disableAllWorkspace
// - workbench.extensions.action.disableAutoUpdate
// - workbench.extensions.action.enableAll
// - workbench.extensions.action.enableAllWorkspace
// - workbench.extensions.action.enableAutoUpdate
// - workbench.extensions.action.extensionHostProfile
// - workbench.extensions.action.extensionUpdates
// - workbench.extensions.action.ignoreRecommendation
// - workbench.extensions.action.install.specificVersion
// - workbench.extensions.action.installExtensionFromLocation
// - workbench.extensions.action.installExtensions
// - workbench.extensions.action.installVSIX
// - workbench.extensions.action.installWorkspaceRecommendedExtensions
// - workbench.extensions.action.listBuiltInExtensions
// - workbench.extensions.action.listWorkspaceUnsupportedExtensions
// - workbench.extensions.action.manageAuthorizedExtensionURIs
// - workbench.extensions.action.openExtensionsFolder
// - workbench.extensions.action.recentlyPublishedExtensions
// - workbench.extensions.action.refreshExtension
// - workbench.extensions.action.reinstall
// - workbench.extensions.action.removeExtensionFromWorkspaceRecommendations
// - workbench.extensions.action.saveExtensionHostProfile
// - workbench.extensions.action.setColorTheme
// - workbench.extensions.action.setFileIconTheme
// - workbench.extensions.action.setProductIconTheme
// - workbench.extensions.action.showDisabledExtensions
// - workbench.extensions.action.showEnabledExtensions
// - workbench.extensions.action.showExtensionsForLanguage
// - workbench.extensions.action.showExtensionsWithIds
// - workbench.extensions.action.showLanguageExtensions
// - workbench.extensions.action.showPopularExtensions
// - workbench.extensions.action.showPreReleaseVersion
// - workbench.extensions.action.showRecommendedExtensions
// - workbench.extensions.action.showRecommendedKeymapExtensions
// - workbench.extensions.action.showReleasedVersion
// - workbench.extensions.action.stopExtensionHostProfile
// - workbench.extensions.action.switchToPreReleaseVersion
// - workbench.extensions.action.switchToReleaseVersion
// - workbench.extensions.action.toggleIgnoreExtension
// - workbench.extensions.action.undoIgnoredRecommendation
// - workbench.extensions.action.updateAllExtensions
// - workbench.extensions.command.installFromVSIX
// - workbench.extensions.installMissingDependencies
// - workbench.files.action.acceptLocalChanges
// - workbench.files.action.collapseExplorerFolders
// - workbench.files.action.compareFileWith
// - workbench.files.action.compareNewUntitledTextFiles
// - workbench.files.action.createFileFromExplorer
// - workbench.files.action.createFolderFromExplorer
// - workbench.files.action.focusFilesExplorer
// - workbench.files.action.refreshFilesExplorer
// - workbench.files.action.revertLocalChanges
// - workbench.files.action.saveAllInGroup
// - workbench.files.action.showActiveFileInExplorer
// - workbench.getCodeExchangeProxyEndpoints
// - workbench.notebook.layout.configure
// - workbench.notebook.layout.configure.editorTitle
// - workbench.notebook.layout.gettingStarted
// - workbench.notebook.layout.select
// - workbench.notebook.layout.webview.reset
// - workbench.output.action.clearOutput
// - workbench.output.action.switchBetweenOutputs
// - workbench.output.action.toggleAutoScroll
// - workbench.panel.comments
// - workbench.panel.comments.resetViewContainerLocation
// - workbench.panel.comments.resetViewLocation
// - workbench.panel.markers.resetViewContainerLocation
// - workbench.panel.markers.view.focus
// - workbench.panel.markers.view.removeView
// - workbench.panel.markers.view.resetViewLocation
// - workbench.panel.markers.view.toggleVisibility
// - workbench.panel.output.focus
// - workbench.panel.output.removeView
// - workbench.panel.output.resetViewContainerLocation
// - workbench.panel.output.resetViewLocation
// - workbench.panel.output.toggleVisibility
// - workbench.panel.repl.resetViewContainerLocation
// - workbench.panel.repl.view.focus
// - workbench.panel.repl.view.removeView
// - workbench.panel.repl.view.resetViewLocation
// - workbench.panel.repl.view.toggleVisibility
// - workbench.panel.testResults.resetViewContainerLocation
// - workbench.panel.testResults.view.focus
// - workbench.panel.testResults.view.resetViewLocation
// - workbench.profiles.actions.cleanupProfiles
// - workbench.profiles.actions.createEmptyProfile
// - workbench.profiles.actions.createFromCurrentProfile
// - workbench.profiles.actions.createProfile
// - workbench.profiles.actions.createProfileFromTemplates
// - workbench.profiles.actions.createTemporaryProfile
// - workbench.profiles.actions.deleteProfile
// - workbench.profiles.actions.exportProfile
// - workbench.profiles.actions.help
// - workbench.profiles.actions.importProfile
// - workbench.profiles.actions.manage
// - workbench.profiles.actions.profileEntry.1c6bf81e
// - workbench.profiles.actions.profileEntry.__default__profile__
// - workbench.profiles.actions.renameCurrentProfile
// - workbench.profiles.actions.renameProfile
// - workbench.profiles.actions.resetWorkspaces
// - workbench.profiles.actions.showProfileContents
// - workbench.profiles.actions.switchProfile
// - workbench.remoteTunnel.actions.configure
// - workbench.remoteTunnel.actions.connecting
// - workbench.remoteTunnel.actions.copyToClipboard
// - workbench.remoteTunnel.actions.learnMore
// - workbench.remoteTunnel.actions.manage
// - workbench.remoteTunnel.actions.showLog
// - workbench.remoteTunnel.actions.turnOff
// - workbench.remoteTunnel.actions.turnOn
// - workbench.scm.action.collapseAllRepositories
// - workbench.scm.action.expandAllRepositories
// - workbench.scm.action.repositories.setSortKey.discoveryTime
// - workbench.scm.action.repositories.setSortKey.name
// - workbench.scm.action.repositories.setSortKey.path
// - workbench.scm.action.setListViewMode
// - workbench.scm.action.setSortKey.name
// - workbench.scm.action.setSortKey.path
// - workbench.scm.action.setSortKey.status
// - workbench.scm.action.setTreeViewMode
// - workbench.scm.focus
// - workbench.scm.removeView
// - workbench.scm.repositories.focus
// - workbench.scm.repositories.removeView
// - workbench.scm.repositories.resetViewLocation
// - workbench.scm.repositories.toggleVisibility
// - workbench.scm.resetViewLocation
// - workbench.scm.toggleVisibility
// - workbench.trust.configure
// - workbench.trust.manage
// - workbench.userData.actions.cancelTurnOn
// - workbench.userData.actions.openSyncBackupsFolder
// - workbench.userData.actions.signin
// - workbench.userData.actions.turningOn
// - workbench.userDataSync.actions.acceptMerges
// - workbench.userDataSync.actions.configure
// - workbench.userDataSync.actions.help
// - workbench.userDataSync.actions.manage
// - workbench.userDataSync.actions.settings
// - workbench.userDataSync.actions.showConflicts
// - workbench.userDataSync.actions.showLog
// - workbench.userDataSync.actions.showSyncedData
// - workbench.userDataSync.actions.syncNow
// - workbench.userDataSync.actions.turnOff
// - workbench.userDataSync.actions.turnOn
// - workbench.view.debug.resetViewContainerLocation
// - workbench.view.editSessions.resetViewContainerLocation
// - workbench.view.explorer.resetViewContainerLocation
// - workbench.view.extension.bookmarks
// - workbench.view.extension.bookmarks.resetViewContainerLocation
// - workbench.view.extension.gistpad
// - workbench.view.extension.gistpad.resetViewContainerLocation
// - workbench.view.extension.github-pull-request
// - workbench.view.extension.github-pull-request.resetViewContainerLocation
// - workbench.view.extension.github-pull-requests
// - workbench.view.extension.github-pull-requests.resetViewContainerLocation
// - workbench.view.extension.gitlens
// - workbench.view.extension.gitlens.resetViewContainerLocation
// - workbench.view.extension.liveshare
// - workbench.view.extension.liveshare.resetViewContainerLocation
// - workbench.view.extension.mongoDB
// - workbench.view.extension.mongoDB.resetViewContainerLocation
// - workbench.view.extension.outline-map
// - workbench.view.extension.outline-map.resetViewContainerLocation
// - workbench.view.extension.references-view
// - workbench.view.extension.references-view.resetViewContainerLocation
// - workbench.view.extension.slides-explorer
// - workbench.view.extension.slides-explorer.resetViewContainerLocation
// - workbench.view.extension.test
// - workbench.view.extension.test.resetViewContainerLocation
// - workbench.view.extension.thunder-client.resetViewContainerLocation
// - workbench.view.extension.todo
// - workbench.view.extension.todo.resetViewContainerLocation
// - workbench.view.extensions.resetViewContainerLocation
// - workbench.view.remote
// - workbench.view.remote.resetViewContainerLocation
// - workbench.view.scm.resetViewContainerLocation
// - workbench.view.search.focus
// - workbench.view.search.removeView
// - workbench.view.search.resetViewContainerLocation
// - workbench.view.search.resetViewLocation
// - workbench.view.search.toggleVisibility
// - workbench.view.sync
// - workbench.view.sync.resetViewContainerLocation
// - workbench.view.testing.focus
// - workbench.view.testing.resetViewLocation
// - workbench.views.editSessions.data.focus
// - workbench.views.editSessions.data.resetViewLocation
// - workbench.views.extensions.builtinFeatureExtensions.focus
// - workbench.views.extensions.builtinFeatureExtensions.resetViewLocation
// - workbench.views.extensions.builtinProgrammingLanguageExtensions.focus
// - workbench.views.extensions.builtinProgrammingLanguageExtensions.resetViewLocation
// - workbench.views.extensions.builtinThemeExtensions.focus
// - workbench.views.extensions.builtinThemeExtensions.resetViewLocation
// - workbench.views.extensions.deprecatedExtensions.focus
// - workbench.views.extensions.deprecatedExtensions.resetViewLocation
// - workbench.views.extensions.disabled.focus
// - workbench.views.extensions.disabled.resetViewLocation
// - workbench.views.extensions.enabled.focus
// - workbench.views.extensions.enabled.resetViewLocation
// - workbench.views.extensions.installed.focus
// - workbench.views.extensions.installed.resetViewLocation
// - workbench.views.extensions.marketplace.focus
// - workbench.views.extensions.marketplace.resetViewLocation
// - workbench.views.extensions.otherRecommendations.focus
// - workbench.views.extensions.otherRecommendations.resetViewLocation
// - workbench.views.extensions.popular.focus
// - workbench.views.extensions.popular.resetViewLocation
// - workbench.views.extensions.searchBuiltin.focus
// - workbench.views.extensions.searchBuiltin.resetViewLocation
// - workbench.views.extensions.searchDisabled.focus
// - workbench.views.extensions.searchDisabled.resetViewLocation
// - workbench.views.extensions.searchEnabled.focus
// - workbench.views.extensions.searchEnabled.resetViewLocation
// - workbench.views.extensions.searchInstalled.focus
// - workbench.views.extensions.searchInstalled.resetViewLocation
// - workbench.views.extensions.searchOutdated.focus
// - workbench.views.extensions.searchOutdated.resetViewLocation
// - workbench.views.extensions.searchRecentlyUpdated.focus
// - workbench.views.extensions.searchRecentlyUpdated.resetViewLocation
// - workbench.views.extensions.searchWorkspaceUnsupported.focus
// - workbench.views.extensions.searchWorkspaceUnsupported.resetViewLocation
// - workbench.views.extensions.untrustedPartiallySupportedExtensions.focus
// - workbench.views.extensions.untrustedPartiallySupportedExtensions.resetViewLocation
// - workbench.views.extensions.untrustedUnsupportedExtensions.focus
// - workbench.views.extensions.untrustedUnsupportedExtensions.resetViewLocation
// - workbench.views.extensions.virtualPartiallySupportedExtensions.focus
// - workbench.views.extensions.virtualPartiallySupportedExtensions.resetViewLocation
// - workbench.views.extensions.virtualUnsupportedExtensions.focus
// - workbench.views.extensions.virtualUnsupportedExtensions.resetViewLocation
// - workbench.views.extensions.workspaceRecommendations.focus
// - workbench.views.extensions.workspaceRecommendations.resetViewLocation
// - workbench.views.service.auxiliarybar.46c03f7f-ffad-4498-8320-bea2c7a5e276.resetViewContainerLocation
// - workbench.views.service.auxiliarybar.84a5da5a-c399-4007-a111-431c80e3ea15.resetViewContainerLocation
// - workbench.views.service.auxiliarybar.a45093d6-989a-4713-bd16-157a7e627aa2.resetViewContainerLocation
// - workbench.views.service.auxiliarybar.cfc80f77-383b-49bc-955a-5dd243a011d7.resetViewContainerLocation
// - workbench.views.service.auxiliarybar.df929752-7399-4991-b8ea-4ae752afdc4f.resetViewContainerLocation
// - workbench.views.sync.conflicts.focus
// - workbench.views.sync.conflicts.resetViewLocation
// - workbench.views.sync.localActivity.focus
// - workbench.views.sync.localActivity.resetViewLocation
// - workbench.views.sync.machines.focus
// - workbench.views.sync.machines.resetViewLocation
// - workbench.views.sync.remoteActivity.focus
// - workbench.views.sync.remoteActivity.resetViewLocation
// - workbench.views.sync.troubleshoot.focus
// - workbench.views.sync.troubleshoot.resetViewLocation
